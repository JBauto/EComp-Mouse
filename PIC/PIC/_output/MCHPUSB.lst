MP2COD 4.15, COFF to COD File Converter
Copyright (c) 2007 Microchip Technology Inc.
Listing File Generated: Fri Oct 24 16:39:53 2014


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /*********************************************************************           C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            *********************************************************************           C:\PIC5\PIC\main.c
                                            * FileName:        main.c                                                       C:\PIC5\PIC\main.c
                                            * Dependencies:    See INCLUDES section below                                   C:\PIC5\PIC\main.c
                                            * Processor:       PIC18                                                        C:\PIC5\PIC\main.c
                                            * Compiler:        C18 2.30.01+                                                 C:\PIC5\PIC\main.c
                                            * Company:         Microchip Technology, Inc.                                   C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Software License Agreement                                                    C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\PIC5\PIC\main.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\PIC5\PIC\main.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\PIC5\PIC\main.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\PIC5\PIC\main.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\PIC5\PIC\main.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\PIC5\PIC\main.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\PIC5\PIC\main.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\PIC5\PIC\main.c
                                            * civil liability for the breach of the terms and conditions of this            C:\PIC5\PIC\main.c
                                            * license.                                                                      C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\PIC5\PIC\main.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\PIC5\PIC\main.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\PIC5\PIC\main.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\PIC5\PIC\main.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\PIC5\PIC\main.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Author               Date        Comment                                      C:\PIC5\PIC\main.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\PIC5\PIC\main.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\PIC5\PIC\main.c
                                            ********************************************************************/           C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           /** I N C L U D E S **********************************************************/  C:\PIC5\PIC\main.c
                                           #include <p18cxxx.h>                                                             C:\PIC5\PIC\main.c
                                           #include "system\typedefs.h"                        // Required                  C:\PIC5\PIC\main.c
                                           #include "system\usb\usb.h"                         // Required                  C:\PIC5\PIC\main.c
                                           #include "io_cfg.h"                                 // Required                  C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           #include "system\usb\usb_compile_time_validation.h" // Optional                  C:\PIC5\PIC\main.c
                                           #include "user\user.h"                              // Modifiable                C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           #include <portb.h>									// For interruptions                                  C:\PIC5\PIC\main.c
                                           #include "def_ports.h"								// Port definitions                                C:\PIC5\PIC\main.c
                                           #include "def_interruptions.h"						// Interruption definitions                  C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           void int_routine(void);                                                          C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           /** V A R I A B L E S ********************************************************/  C:\PIC5\PIC\main.c
                                           #pragma udata                                                                    C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\PIC5\PIC\main.c
                                           static void InitializeSystem(void);                                              C:\PIC5\PIC\main.c
                                           void USBTasks(void);                                                             C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           /** V E C T O R  R E M A P P I N G *******************************************/  C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           extern void _startup (void);        // See c018i.c in your C18 compiler dir      C:\PIC5\PIC\main.c
                                           #pragma code _RESET_INTERRUPT_VECTOR = 0x000800                                  C:\PIC5\PIC\main.c
                                           void _reset (void)                                                               C:\PIC5\PIC\main.c
                                           {                                                                                C:\PIC5\PIC\main.c
000800   ef01     GOTO      0x1c02             _asm goto _startup _endasm                                                   C:\PIC5\PIC\main.c
000802   f00e                                                                                                               
000804   0012     RETURN    0x0            }                                                                                C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           #pragma code                                                                     C:\PIC5\PIC\main.c
                                           #pragma code _LOW_INTERRUPT_VECTOR = 0x000818                                    C:\PIC5\PIC\main.c
                                           void _low_ISR (void)                                                             C:\PIC5\PIC\main.c
                                           {                                                                                C:\PIC5\PIC\main.c
                                               ;                                                                            C:\PIC5\PIC\main.c
000818   0012     RETURN    0x0            }                                                                                C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           // HIGH PRIORITY INTERRUPTS VECTOR                                               C:\PIC5\PIC\main.c
                                           #pragma code high_interrupt_vector = 0x808                                       C:\PIC5\PIC\main.c
                                           void high_interrupt (void)                                                       C:\PIC5\PIC\main.c
                                           {                                                                                C:\PIC5\PIC\main.c
000808   ef84     GOTO      0x1b08         	_asm goto int_routine _endasm                                                   C:\PIC5\PIC\main.c
00080a   f00d                                                                                                               
00080c   0012     RETURN    0x0            }                                                                                C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           #pragma code                                                                     C:\PIC5\PIC\main.c
                                           #pragma interrupt int_routine                                                    C:\PIC5\PIC\main.c
001b08   cfda     MOVFF     0xfda,0xfe4    void int_routine (void)                                                          C:\PIC5\PIC\main.c
001b0a   ffe4                                                                                                               
001b0c   cfe2     MOVFF     0xfe2,0xfda                                                                                     
001b0e   ffda                                                                                                               
001b10   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\main.c
                                           	// Lights LED D3 and D4, which is connected to bit 2 and 3 of  port D (PD2 and PD3),  C:\PIC5\PIC\main.c
                                           	// only when both switches 2 and 3, connected bits 4 and 5 of port B (PB4 and PB5) are pressed. C:\PIC5\PIC\main.c
001b12   5081     MOVF      0x81,0x0,0x0   	if(!PB4 && !PB5 ) {                                                             C:\PIC5\PIC\main.c
001b14   0b10     ANDLW     0x10                                                                                            
001b16   e106     BNZ       0x1b24                                                                                          
001b18   5081     MOVF      0x81,0x0,0x0                                                                                    
001b1a   0b20     ANDLW     0x20                                                                                            
001b1c   e103     BNZ       0x1b24                                                                                          
001b1e   8483     BSF       0x83,0x2,0x0   		PD2 = 1;                                                                       C:\PIC5\PIC\main.c
001b20   8683     BSF       0x83,0x3,0x0   		PD3 = 1;                                                                       C:\PIC5\PIC\main.c
                                           	}                                                                               C:\PIC5\PIC\main.c
001b22   d002     BRA       0x1b28         	else {                                                                          C:\PIC5\PIC\main.c
001b24   9483     BCF       0x83,0x2,0x0   		PD2 = 0;                                                                       C:\PIC5\PIC\main.c
001b26   9683     BCF       0x83,0x3,0x0   		PD3 = 0;                                                                       C:\PIC5\PIC\main.c
                                           	}                                                                               C:\PIC5\PIC\main.c
001b28   90f2     BCF       0xf2,0x0,0x0   	RBIF = 0; // Clear the interrupt flag for port B.                               C:\PIC5\PIC\main.c
001b2a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\PIC5\PIC\main.c
001b2c   cfe5     MOVFF     0xfe5,0xfda                                                                                     
001b2e   ffda                                                                                                               
001b30   0011     RETFIE    0x1                                                                                             
                                                                                                                            C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           #pragma code                                                                     C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\PIC5\PIC\main.c
                                           #pragma code                                                                     C:\PIC5\PIC\main.c
                                           /******************************************************************************  C:\PIC5\PIC\main.c
                                            * Function:        void main(void)                                              C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Input:           None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Output:          None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Overview:        Main program entry point.                                    C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Note:            None                                                         C:\PIC5\PIC\main.c
                                            *****************************************************************************/  C:\PIC5\PIC\main.c
                                           void main(void)                                                                  C:\PIC5\PIC\main.c
                                           {                                                                                C:\PIC5\PIC\main.c
001b32   d806     RCALL     0x1b40             InitializeSystem();                                                          C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           	//DDRB = PINPUT;				// Port B is an input port                                  C:\PIC5\PIC\main.c
001b34   8ef2     BSF       0xf2,0x7,0x0   	GINTEN  = ENABLE;			// General interrupt enable                                 C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
001b3c   d7fc     BRA       0x1b36             while(1)                                                                     C:\PIC5\PIC\main.c
                                               {                                                                            C:\PIC5\PIC\main.c
001b36   d816     RCALL     0x1b64                 USBTasks();         // USB Tasks                                         C:\PIC5\PIC\main.c
001b38   ec2d     CALL      0x85a,0x0              ProcessIO();        // See user\user.c & .h                              C:\PIC5\PIC\main.c
001b3a   f004                                                                                                               
                                               } //end while                                                                C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
001b3e   0012     RETURN    0x0            } //end main                                                                     C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           /******************************************************************************  C:\PIC5\PIC\main.c
                                            * Function:        static void InitializeSystem(void)                           C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Input:           None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Output:          None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Overview:        InitializeSystem is a centralize initialization routine.     C:\PIC5\PIC\main.c
                                            *                  All required USB initialization routines are called from     C:\PIC5\PIC\main.c
                                            *                  here.                                                        C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            *                  User application initialization routine should also be       C:\PIC5\PIC\main.c
                                            *                  called from here.                                            C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Note:            None                                                         C:\PIC5\PIC\main.c
                                            *****************************************************************************/  C:\PIC5\PIC\main.c
                                           static void InitializeSystem(void)                                               C:\PIC5\PIC\main.c
                                           {                                                                                C:\PIC5\PIC\main.c
001b40   0e0f     MOVLW     0xf                ADCON1 |= 0x0F;                 // Default all pins to digital               C:\PIC5\PIC\main.c
001b42   12c1     IORWF     0xc1,0x1,0x0                                                                                    
                                                                                                                            C:\PIC5\PIC\main.c
                                               #if defined(USE_USB_BUS_SENSE_IO)                                            C:\PIC5\PIC\main.c
001b44   8292     BSF       0x92,0x1,0x0       tris_usb_bus_sense = INPUT_PIN; // See io_cfg.h                              C:\PIC5\PIC\main.c
                                               #endif                                                                       C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                               #if defined(USE_SELF_POWER_SENSE_IO)                                         C:\PIC5\PIC\main.c
001b46   8492     BSF       0x92,0x2,0x0       tris_self_power = INPUT_PIN;                                                 C:\PIC5\PIC\main.c
                                               #endif                                                                       C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
001b48   0e14     MOVLW     0x14               mInitializeUSBDriver();         // See usbdrv.h                              C:\PIC5\PIC\main.c
001b4a   6e6f     MOVWF     0x6f,0x0                                                                                        
001b4c   0100     MOVLB     0x0                                                                                             
001b4e   6bc1     CLRF      0xc1,0x1                                                                                        
001b50   0100     MOVLB     0x0                                                                                             
001b52   6bc2     CLRF      0xc2,0x1                                                                                        
001b54   0100     MOVLB     0x0                                                                                             
001b56   6bc3     CLRF      0xc3,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\main.c
001b58   ec1c     CALL      0x838,0x0          UserInit();                     // See user.c & .h                           C:\PIC5\PIC\main.c
001b5a   f004                                                                                                               
                                                                                                                            C:\PIC5\PIC\main.c
001b5c   86f2     BSF       0xf2,0x3,0x0   	RBIE = 1; //int dos RB ligadas                                                  C:\PIC5\PIC\main.c
001b5e   80f2     BSF       0xf2,0x0,0x0   	RBIF = 1; //Clear RB flag                                                       C:\PIC5\PIC\main.c
001b60   80f1     BSF       0xf1,0x0,0x0   	RBIP = 1; //int dos RB altas                                                    C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
001b62   0012     RETURN    0x0            }//end InitializeSystem                                                          C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           /******************************************************************************  C:\PIC5\PIC\main.c
                                            * Function:        void USBTasks(void)                                          C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * PreCondition:    InitializeSystem has been called.                            C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Input:           None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Output:          None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Overview:        Service loop for USB tasks.                                  C:\PIC5\PIC\main.c
                                            *                                                                               C:\PIC5\PIC\main.c
                                            * Note:            None                                                         C:\PIC5\PIC\main.c
                                            *****************************************************************************/  C:\PIC5\PIC\main.c
                                           void USBTasks(void)                                                              C:\PIC5\PIC\main.c
                                           {                                                                                C:\PIC5\PIC\main.c
                                               /*                                                                           C:\PIC5\PIC\main.c
                                                * Servicing Hardware                                                        C:\PIC5\PIC\main.c
                                                */                                                                          C:\PIC5\PIC\main.c
001b64   ec8e     CALL      0x171c,0x0         USBCheckBusStatus();                    // Must use polling method           C:\PIC5\PIC\main.c
001b66   f00b                                                                                                               
001b68   be6f     BTFSC     0x6f,0x7,0x0       if(UCFGbits.UTEYE!=1)                                                        C:\PIC5\PIC\main.c
001b6a   d002     BRA       0x1b70                                                                                          
001b6c   ecaf     CALL      0x175e,0x0             USBDriverService();                 // Interrupt or polling method       C:\PIC5\PIC\main.c
001b6e   f00b                                                                                                               
                                                                                                                            C:\PIC5\PIC\main.c
001b70   0012     RETURN    0x0            }// end USBTasks                                                                 C:\PIC5\PIC\main.c
                                                                                                                            C:\PIC5\PIC\main.c
                                           /** EOF main.c ***************************************************************/  C:\PIC5\PIC\main.c
                                           /*********************************************************************           C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            *********************************************************************           C:\PIC5\PIC\system\usb\usbmmap.c
                                            * FileName:        usbmmap.c                                                    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Dependencies:    See INCLUDES section below                                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Processor:       PIC18                                                        C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Compiler:        C18 2.30.01+                                                 C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Company:         Microchip Technology, Inc.                                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Software License Agreement                                                    C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\PIC5\PIC\system\usb\usbmmap.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\PIC5\PIC\system\usb\usbmmap.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * civil liability for the breach of the terms and conditions of this            C:\PIC5\PIC\system\usb\usbmmap.c
                                            * license.                                                                      C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Author               Date        Comment                                      C:\PIC5\PIC\system\usb\usbmmap.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\PIC5\PIC\system\usb\usbmmap.c
                                            ********************************************************************/           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * -usbmmap.c-                                                                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            * USB Memory Map                                                                C:\PIC5\PIC\system\usb\usbmmap.c
                                            * This file is the USB memory manager; it serves as a compile-time memory       C:\PIC5\PIC\system\usb\usbmmap.c
                                            * allocator for the USB endpoints. It uses the compile time options passed      C:\PIC5\PIC\system\usb\usbmmap.c
                                            * from usbcfg.h to instantiate endpoints and endpoint buffer.                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Each endpoint requires to have a set of Buffer Descriptor registers(BDT).     C:\PIC5\PIC\system\usb\usbmmap.c
                                            * A BDT is 4-byte long and has a specific RAM location for each endpoint.       C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The BDT for endpoint 0 out is located at address 0x400 to 0x403.              C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The BDT for endpoint 0 in is located at address 0x404 to 0x407.               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The BDT for endpoint 1 out is located at address 0x408 to 0x40B.              C:\PIC5\PIC\system\usb\usbmmap.c
                                            * and so on... The above allocation assumes the Ping-Pong Buffer Mode 0 is      C:\PIC5\PIC\system\usb\usbmmap.c
                                            * used. These locations are already hard-wired in the silicon. The point        C:\PIC5\PIC\system\usb\usbmmap.c
                                            * of doing instantiation, i.e. volatile far BDT ep0Bo;, is to provide the       C:\PIC5\PIC\system\usb\usbmmap.c
                                            * C compiler a way to address each variable directly. This is very important    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * because when a register can be accessed directly, it saves execution time     C:\PIC5\PIC\system\usb\usbmmap.c
                                            * and reduces program size.                                                     C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Endpoints are defined using the endpoint number and the direction             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * of transfer. For simplicity, usbmmap.c only uses the endpoint number          C:\PIC5\PIC\system\usb\usbmmap.c
                                            * in the BDT register allocation scheme. This means if the usbcfg.h states      C:\PIC5\PIC\system\usb\usbmmap.c
                                            * that the MAX_EP_NUMBER is number 1, then four BDTs will be                    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * instantiated: one each for endpoint0 in and endpoint0 out, which must         C:\PIC5\PIC\system\usb\usbmmap.c
                                            * always be instantiated for control transfer by default, and one each sets     C:\PIC5\PIC\system\usb\usbmmap.c
                                            * for endpoint1 in and endpoint1 out. The naming convention for instantiating   C:\PIC5\PIC\system\usb\usbmmap.c
                                            * BDT is                                                                        C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * ep<#>B<d>                                                                     C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * where # is the endpoint number, and d is the direction of                     C:\PIC5\PIC\system\usb\usbmmap.c
                                            * transfer, which could be either <i> or <o>.                                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The USB memory manager uses MAX_EP_NUMBER, as defined in usbcfg.h, to define  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * the endpoints to be instantiated. This represents the highest endpoint        C:\PIC5\PIC\system\usb\usbmmap.c
                                            * number to be allocated, not how many endpoints are used. Since the BDTs for   C:\PIC5\PIC\system\usb\usbmmap.c
                                            * endpoints have hardware-assigned addresses in Bank 4, setting this value too  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * high may lead to inefficient use of data RAM. For example, if an application  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * uses only endpoints EP0 and EP4, then the MAX_EP_NUMBER is 4, and not 2.      C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The in-between endpoint BDTs in this example (EP1, EP2, and EP3) go unused,   C:\PIC5\PIC\system\usb\usbmmap.c
                                            * and the 24 bytes of memory associated with them are wasted. It does not make  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * much sense to skip endpoints, but the final decision lies with the user.      C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The next step is to assign the instantiated BDTs to different                 C:\PIC5\PIC\system\usb\usbmmap.c
                                            * USB functions. The firmware framework fundamentally assumes that every USB    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * function should know which endpoint it is using, i.e., the default control    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * transfer should know that it is using endpoint 0 in and endpoint 0 out.       C:\PIC5\PIC\system\usb\usbmmap.c
                                            * A HID class can choose which endpoint it wants to use, but once chosen, it    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * should always know the number of the endpoint.                                C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The assignment of endpoints to USB functions is managed centrally             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * in usbcfg.h. This helps prevent the mistake of having more                    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * than one USB function using the same endpoint. The "Endpoint Allocation"      C:\PIC5\PIC\system\usb\usbmmap.c
                                            * section in usbcfg.h provides examples for how to map USB endpoints to USB     C:\PIC5\PIC\system\usb\usbmmap.c
                                            * functions.                                                                    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Quite a few things can be mapped in that section. There is no                 C:\PIC5\PIC\system\usb\usbmmap.c
                                            * one correct way to do the mapping and the user has the choice to              C:\PIC5\PIC\system\usb\usbmmap.c
                                            * choose a method that is most suitable to the application.                     C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Typically, however, a user will want to map the following for a given         C:\PIC5\PIC\system\usb\usbmmap.c
                                            * USB interface function:                                                       C:\PIC5\PIC\system\usb\usbmmap.c
                                            * 1. The USB interface ID                                                       C:\PIC5\PIC\system\usb\usbmmap.c
                                            * 2. The endpoint control registers (UEPn)                                      C:\PIC5\PIC\system\usb\usbmmap.c
                                            * 3. The BDT registers (ep<#>B<d>)                                              C:\PIC5\PIC\system\usb\usbmmap.c
                                            * 4. The endpoint size                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Example: Assume a USB device class "foo", which uses one out endpoint         C:\PIC5\PIC\system\usb\usbmmap.c
                                            *          of size 64-byte and one in endpoint of size 64-byte, then:           C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * #define FOO_INTF_ID          0x00                                             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * #define FOO_UEP              UEP1                                             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * #define FOO_BD_OUT           ep1Bo                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                            * #define FOO_BD_IN            ep1Bi                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                            * #define FOO_EP_SIZE          64                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The mapping above has chosen class "foo" to use endpoint 1.                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The names are arbitrary and can be anything other than FOO_??????.            C:\PIC5\PIC\system\usb\usbmmap.c
                                            * For abstraction, the code for class "foo" should use the abstract             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * definitions of FOO_BD_OUT,FOO_BD_IN, and not ep1Bo or ep1Bi.                  C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Note that the endpoint size defined in the usbcfg.h file is again             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * used in the usbmmap.c file. This shows that the relationship between          C:\PIC5\PIC\system\usb\usbmmap.c
                                            * the two files are tightly related.                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The endpoint buffer for each USB function must be located in the              C:\PIC5\PIC\system\usb\usbmmap.c
                                            * dual-port RAM area and has to come after all the BDTs have been               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * instantiated. An example declaration is:                                      C:\PIC5\PIC\system\usb\usbmmap.c
                                            * volatile far unsigned char[FOO_EP_SIZE] data;                                 C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * The 'volatile' keyword tells the compiler not to perform any code             C:\PIC5\PIC\system\usb\usbmmap.c
                                            * optimization on this variable because its content could be modified           C:\PIC5\PIC\system\usb\usbmmap.c
                                            * by the hardware. The 'far' keyword tells the compiler that this variable      C:\PIC5\PIC\system\usb\usbmmap.c
                                            * is not located in the Access RAM area (0x000 - 0x05F).                        C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * For the variable to be globally accessible by other files, it should be       C:\PIC5\PIC\system\usb\usbmmap.c
                                            * declared in the header file usbmmap.h as an extern definition, such as        C:\PIC5\PIC\system\usb\usbmmap.c
                                            * extern volatile far unsigned char[FOO_EP_SIZE] data;                          C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Conclusion:                                                                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            * In a short summary, the dependencies between usbcfg and usbmmap can           C:\PIC5\PIC\system\usb\usbmmap.c
                                            * be shown as:                                                                  C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * usbcfg[MAX_EP_NUMBER] -> usbmmap                                              C:\PIC5\PIC\system\usb\usbmmap.c
                                            * usbmmap[ep<#>B<d>] -> usbcfg                                                  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * usbcfg[EP size] -> usbmmap                                                    C:\PIC5\PIC\system\usb\usbmmap.c
                                            * usbcfg[abstract ep definitions] -> usb9/hid/cdc/etc class code                C:\PIC5\PIC\system\usb\usbmmap.c
                                            * usbmmap[endpoint buffer variable] -> usb9/hid/cdc/etc class code              C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Data mapping provides a means for direct addressing of BDT and endpoint       C:\PIC5\PIC\system\usb\usbmmap.c
                                            * buffer. This means less usage of pointers, which equates to a faster and      C:\PIC5\PIC\system\usb\usbmmap.c
                                            * smaller program code.                                                         C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           /** I N C L U D E S **********************************************************/  C:\PIC5\PIC\system\usb\usbmmap.c
                                           #include "system\typedefs.h"                                                     C:\PIC5\PIC\system\usb\usbmmap.c
                                           #include "system\usb\usb.h"                                                      C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           /** U S B  G L O B A L  V A R I A B L E S ************************************/  C:\PIC5\PIC\system\usb\usbmmap.c
                                           #pragma udata                                                                    C:\PIC5\PIC\system\usb\usbmmap.c
                                           byte usb_device_state;          // Device States: DETACHED, ATTACHED, ...        C:\PIC5\PIC\system\usb\usbmmap.c
                                           USB_DEVICE_STATUS usb_stat;     // Global USB flags                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           byte usb_active_cfg;            // Value of current configuration                C:\PIC5\PIC\system\usb\usbmmap.c
                                           byte usb_alt_intf[MAX_NUM_INT]; // Array to keep track of the current alternate  C:\PIC5\PIC\system\usb\usbmmap.c
                                                                           // setting for each interface ID                 C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           /** U S B  F I X E D  L O C A T I O N  V A R I A B L E S *********************/  C:\PIC5\PIC\system\usb\usbmmap.c
                                           #pragma udata usbram4=0x400     //See Linker Script,usb4:0x400-0x4FF(256-byte)   C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Section A: Buffer Descriptor Table                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                            * - 0x400 - 0x4FF(max)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                            * - MAX_EP_NUMBER is defined in autofiles\usbcfg.h                              C:\PIC5\PIC\system\usb\usbmmap.c
                                            * - BDT data type is defined in system\usb\usbmmap.h                            C:\PIC5\PIC\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(0 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep0Bo;         //Endpoint #0 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep0Bi;         //Endpoint #0 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(1 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep1Bo;         //Endpoint #1 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep1Bi;         //Endpoint #1 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(2 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep2Bo;         //Endpoint #2 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep2Bi;         //Endpoint #2 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(3 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep3Bo;         //Endpoint #3 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep3Bi;         //Endpoint #3 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(4 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep4Bo;         //Endpoint #4 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep4Bi;         //Endpoint #4 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(5 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep5Bo;         //Endpoint #5 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep5Bi;         //Endpoint #5 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(6 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep6Bo;         //Endpoint #6 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep6Bi;         //Endpoint #6 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(7 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep7Bo;         //Endpoint #7 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep7Bi;         //Endpoint #7 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(8 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep8Bo;         //Endpoint #8 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep8Bi;         //Endpoint #8 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(9 <= MAX_EP_NUMBER)                                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep9Bo;         //Endpoint #9 BD Out                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep9Bi;         //Endpoint #9 BD In                              C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(10 <= MAX_EP_NUMBER)                                                         C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep10Bo;        //Endpoint #10 BD Out                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep10Bi;        //Endpoint #10 BD In                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(11 <= MAX_EP_NUMBER)                                                         C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep11Bo;        //Endpoint #11 BD Out                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep11Bi;        //Endpoint #11 BD In                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(12 <= MAX_EP_NUMBER)                                                         C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep12Bo;        //Endpoint #12 BD Out                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep12Bi;        //Endpoint #12 BD In                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(13 <= MAX_EP_NUMBER)                                                         C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep13Bo;        //Endpoint #13 BD Out                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep13Bi;        //Endpoint #13 BD In                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(14 <= MAX_EP_NUMBER)                                                         C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep14Bo;        //Endpoint #14 BD Out                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep14Bi;        //Endpoint #14 BD In                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #if(15 <= MAX_EP_NUMBER)                                                         C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep15Bo;        //Endpoint #15 BD Out                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far BDT ep15Bi;        //Endpoint #15 BD In                             C:\PIC5\PIC\system\usb\usbmmap.c
                                           #endif                                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Section B: EP0 Buffer Space                                                   C:\PIC5\PIC\system\usb\usbmmap.c
                                            ******************************************************************************  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * - Two buffer areas are defined:                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            *   A. CTRL_TRF_SETUP                                                           C:\PIC5\PIC\system\usb\usbmmap.c
                                            *      - Size = EP0_BUFF_SIZE as defined in autofiles\usbcfg.h                  C:\PIC5\PIC\system\usb\usbmmap.c
                                            *      - Detailed data structure allows direct adddressing of bits and bytes.   C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            *   B. CTRL_TRF_DATA                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                            *      - Size = EP0_BUFF_SIZE as defined in autofiles\usbcfg.h                  C:\PIC5\PIC\system\usb\usbmmap.c
                                            *      - Data structure allows direct adddressing of the first 8 bytes.         C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            * - Both data types are defined in system\usb\usbdefs\usbdefs_ep0_buff.h        C:\PIC5\PIC\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far CTRL_TRF_SETUP SetupPkt;                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far CTRL_TRF_DATA CtrlTrfData;                                          C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbmmap.c
                                            * Section C: Buffer                                                             C:\PIC5\PIC\system\usb\usbmmap.c
                                            ******************************************************************************  C:\PIC5\PIC\system\usb\usbmmap.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbmmap.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far byte usbgen_out[USBGEN_EP_SIZE];                                    C:\PIC5\PIC\system\usb\usbmmap.c
                                           volatile far byte usbgen_in[USBGEN_EP_SIZE];                                     C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           #pragma udata                                                                    C:\PIC5\PIC\system\usb\usbmmap.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbmmap.c
                                           /** EOF usbmmap.c ************************************************************/  C:\PIC5\PIC\system\usb\usbmmap.c
                                           /*********************************************************************           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *********************************************************************           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * FileName:        usbdrv.c                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Dependencies:    See INCLUDES section below                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Processor:       PIC18                                                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Compiler:        C18 2.30.01+                                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Company:         Microchip Technology, Inc.                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Software License Agreement                                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * civil liability for the breach of the terms and conditions of this            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * license.                                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Author               Date        Comment                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            ********************************************************************/           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /** I N C L U D E S **********************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           #include <p18cxxx.h>                                                             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           #include "system\typedefs.h"                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           #include "system\usb\usb.h"                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           #include "io_cfg.h"             // Required for USBCheckBusStatus()              C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /** V A R I A B L E S ********************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           #pragma udata                                                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBModuleEnable(void);                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBModuleDisable(void);                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBSuspend(void);                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBWakeFromSuspend(void);                                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBProtocolResetHandler(void);                                              C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USB_SOF_Handler(void);                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBStallHandler(void);                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBErrorHandler(void);                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           #pragma code                                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBCheckBusStatus(void)                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine enables/disables the USB module by monitoring   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  the USB power signal.                                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBCheckBusStatus(void)                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /**************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Bus Attachment & Detachment Detection                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * usb_bus_sense is an i/o pin defined in io_cfg.h                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               #define USB_BUS_ATTACHED    1                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               #define USB_BUS_DETACHED    0                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00171c   a280     BTFSS     0x80,0x1,0x0       if(usb_bus_sense == USB_BUS_ATTACHED)       // Is USB bus attached?          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00171e   d003     BRA       0x1726                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001720   a66d     BTFSS     0x6d,0x3,0x0           if(UCONbits.USBEN == 0)                 // Is the module off?            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001722   d80f     RCALL     0x1742                     USBModuleEnable();                  // Is off, enable it             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               }                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001724   d002     BRA       0x172a             else                                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               {                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001726   b66d     BTFSC     0x6d,0x3,0x0           if(UCONbits.USBEN == 1)                 // Is the module on?             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001728   d813     RCALL     0x1750                     USBModuleDisable();                 // Is on, disable it             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               }//end if(usb_bus_sense...)                                                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * After enabling the USB module, it takes some time for the voltage         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * on the D+ or D- line to rise high enough to get out of the SE0 condition. C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * The USB Reset interrupt should not be unmasked until the SE0 condition is C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * cleared. This helps preventing the firmware from misinterpreting this     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * unique event as a USB bus reset from the USB host.                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00172a   0100     MOVLB     0x0                if(usb_device_state == ATTACHED_STATE)                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00172c   05c1     DECF      0xc1,0x0,0x1                                                                                    
00172e   e108     BNZ       0x1740                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001730   ba6d     BTFSC     0x6d,0x5,0x0           if(!UCONbits.SE0)                                                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001732   d006     BRA       0x1740                                                                                          
                                                   {                                                                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001734   6a68     CLRF      0x68,0x0                   UIR = 0;                        // Clear all USB interrupts          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001736   6a69     CLRF      0x69,0x0                   UIE = 0;                        // Mask all USB interrupts           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001738   8069     BSF       0x69,0x0,0x0               UIEbits.URSTIE = 1;             // Unmask RESET interrupt            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00173a   8869     BSF       0x69,0x4,0x0               UIEbits.IDLEIE = 1;             // Unmask IDLE interrupt             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00173c   0e02     MOVLW     0x2                        usb_device_state = POWERED_STATE;                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00173e   6fc1     MOVWF     0xc1,0x1                                                                                        
                                                   }//end if                           // else wait until SE0 is cleared    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               }//end if(usb_device_state == ATTACHED_STATE)                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001740   0012     RETURN    0x0            }//end USBCheckBusStatus                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBModuleEnable(void)                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine enables the USB module.                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  An end designer should never have to call this routine       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  manually. This routine should only be called from            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  USBCheckBusStatus().                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            See USBCheckBusStatus() for more information.                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBModuleEnable(void)                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001742   6a6d     CLRF      0x6d,0x0           UCON = 0;                                                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001744   6a69     CLRF      0x69,0x0           UIE = 0;                                // Mask all USB interrupts           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001746   866d     BSF       0x6d,0x3,0x0       UCONbits.USBEN = 1;                     // Enable module & attach to bus     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001748   0100     MOVLB     0x0                usb_device_state = ATTACHED_STATE;      // Defined in usbmmap.c & .h         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00174a   0e01     MOVLW     0x1                                                                                             
00174c   6fc1     MOVWF     0xc1,0x1                                                                                        
00174e   0012     RETURN    0x0            }//end USBModuleEnable                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBModuleDisable(void)                                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine disables the USB module.                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  An end designer should never have to call this routine       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  manually. This routine should only be called from            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  USBCheckBusStatus().                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            See USBCheckBusStatus() for more information.                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBModuleDisable(void)                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001750   6a6d     CLRF      0x6d,0x0           UCON = 0;                               // Disable module & detach from bus  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001752   6a69     CLRF      0x69,0x0           UIE = 0;                                // Mask all USB interrupts           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001754   0100     MOVLB     0x0                usb_device_state = DETACHED_STATE;      // Defined in usbmmap.c & .h         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001756   6bc1     CLRF      0xc1,0x1                                                                                        
001758   0012     RETURN    0x0            }//end USBModuleDisable                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBSoftDetach(void)                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    The device will have to be re-enumerated to function again.  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        USBSoftDetach electrically disconnects the device from       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  the bus. This is done by stop supplying Vusb voltage to      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  pull-up resistor. The pull-down resistors on the host        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  side will pull both differential signal lines low and        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  the host registers the event as a disconnect.                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  Since the USB cable is not physically disconnected, the      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  power supply through the cable can still be sensed by        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  the device. The next time USBCheckBusStatus() function       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  is called, it will reconnect the device back to the bus.     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBSoftDetach(void)                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00175a   efa8     GOTO      0x1750             USBModuleDisable();                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00175c   f00b                                                                                                               
                                           }//end USBSoftDetach                                                             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBDriverService(void)                                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This routine is the heart of this firmware. It manages       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  all USB interrupts.                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            Device state transitions through the following stages:       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  DETACHED -> ATTACHED -> POWERED -> DEFAULT ->                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  ADDRESS_PENDING -> ADDRESSED -> CONFIGURED -> READY          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBDriverService(void)                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Pointless to continue servicing if USB cable is not even attached.        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00175e   0100     MOVLB     0x0                if(usb_device_state == DETACHED_STATE) return;                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001760   51c1     MOVF      0xc1,0x0,0x1                                                                                    
001762   e101     BNZ       0x1766                                                                                          
001764   d03a     BRA       0x17da                                                                                          
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Task A: Service USB Activity Interrupt                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001766   5068     MOVF      0x68,0x0,0x0       if(UIRbits.ACTVIF && UIEbits.ACTVIE)    USBWakeFromSuspend();                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001768   0b04     ANDLW     0x4                                                                                             
00176a   e004     BZ        0x1774                                                                                          
00176c   5069     MOVF      0x69,0x0,0x0                                                                                    
00176e   0b04     ANDLW     0x4                                                                                             
001770   e001     BZ        0x1774                                                                                          
001772   d838     RCALL     0x17e4                                                                                          
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Pointless to continue servicing if the device is in suspend mode.         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001774   b26d     BTFSC     0x6d,0x1,0x0       if(UCONbits.SUSPND==1) return;                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001776   d031     BRA       0x17da                                                                                          
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Task B: Service USB Bus Reset Interrupt.                                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * When bus reset is received during suspend, ACTVIF will be set first,      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * once the UCONbits.SUSPND is clear, then the URSTIF bit will be asserted.  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * This is why URSTIF is checked after ACTVIF.                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001778   5068     MOVF      0x68,0x0,0x0       if(UIRbits.URSTIF && UIEbits.URSTIE)    USBProtocolResetHandler();           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00177a   0b01     ANDLW     0x1                                                                                             
00177c   e004     BZ        0x1786                                                                                          
00177e   5069     MOVF      0x69,0x0,0x0                                                                                    
001780   0b01     ANDLW     0x1                                                                                             
001782   e001     BZ        0x1786                                                                                          
001784   d850     RCALL     0x1826                                                                                          
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Task C: Service other USB interrupts                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001786   5068     MOVF      0x68,0x0,0x0       if(UIRbits.IDLEIF && UIEbits.IDLEIE)    USBSuspend();                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001788   0b10     ANDLW     0x10                                                                                            
00178a   e004     BZ        0x1794                                                                                          
00178c   5069     MOVF      0x69,0x0,0x0                                                                                    
00178e   0b10     ANDLW     0x10                                                                                            
001790   e001     BZ        0x1794                                                                                          
001792   d824     RCALL     0x17dc                                                                                          
001794   5068     MOVF      0x68,0x0,0x0       if(UIRbits.SOFIF && UIEbits.SOFIE)      USB_SOF_Handler();                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001796   0b40     ANDLW     0x40                                                                                            
001798   e004     BZ        0x17a2                                                                                          
00179a   5069     MOVF      0x69,0x0,0x0                                                                                    
00179c   0b40     ANDLW     0x40                                                                                            
00179e   e001     BZ        0x17a2                                                                                          
0017a0   d837     RCALL     0x1810                                                                                          
0017a2   5068     MOVF      0x68,0x0,0x0       if(UIRbits.STALLIF && UIEbits.STALLIE)  USBStallHandler();                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017a4   0b20     ANDLW     0x20                                                                                            
0017a6   e004     BZ        0x17b0                                                                                          
0017a8   5069     MOVF      0x69,0x0,0x0                                                                                    
0017aa   0b20     ANDLW     0x20                                                                                            
0017ac   e001     BZ        0x17b0                                                                                          
0017ae   d832     RCALL     0x1814                                                                                          
0017b0   5068     MOVF      0x68,0x0,0x0       if(UIRbits.UERRIF && UIEbits.UERRIE)    USBErrorHandler();                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017b2   0b02     ANDLW     0x2                                                                                             
0017b4   e004     BZ        0x17be                                                                                          
0017b6   5069     MOVF      0x69,0x0,0x0                                                                                    
0017b8   0b02     ANDLW     0x2                                                                                             
0017ba   e001     BZ        0x17be                                                                                          
0017bc   d832     RCALL     0x1822                                                                                          
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Pointless to continue servicing if the host has not sent a bus reset.     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Once bus reset is received, the device transitions into the DEFAULT       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * state and is ready for communication.                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017be   0e03     MOVLW     0x3                if(usb_device_state < DEFAULT_STATE) return;                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017c0   0100     MOVLB     0x0                                                                                             
0017c2   5dc1     SUBWF     0xc1,0x0,0x1                                                                                    
0017c4   e201     BC        0x17c8                                                                                          
0017c6   d009     BRA       0x17da                                                                                          
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Task D: Servicing USB Transaction Complete Interrupt                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017c8   5068     MOVF      0x68,0x0,0x0       if(UIRbits.TRNIF && UIEbits.TRNIE)                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017ca   0b08     ANDLW     0x8                                                                                             
0017cc   e006     BZ        0x17da                                                                                          
0017ce   5069     MOVF      0x69,0x0,0x0                                                                                    
0017d0   0b08     ANDLW     0x8                                                                                             
0017d2   e003     BZ        0x17da                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                   /*                                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    * USBCtrlEPService only services transactions over EP0.                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    * It ignores all other EP transactions.                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    */                                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017d4   ec95     CALL      0x112a,0x0             USBCtrlEPService();                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017d6   f008                                                                                                               
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                   /*                                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    * Other EP can be serviced later by responsible device class firmware.  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    * Each device driver knows when an OUT or IN transaction is ready by    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    * checking the buffer ownership bit.                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    * An OUT EP should always be owned by SIE until the data is ready.      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    * An IN EP should always be owned by CPU until the data is ready.       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    *                                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    * Because of this logic, it is not necessary to save the USTAT value    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    * of non-EP0 transactions.                                              C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                    */                                                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017d8   9668     BCF       0x68,0x3,0x0           UIRbits.TRNIF = 0;                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               }//end if(UIRbits.TRNIF && UIEbits.TRNIE)                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017da   0012     RETURN    0x0            }//end USBDriverService                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBSuspend(void)                                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:                                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBSuspend(void)                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * NOTE: Do not clear UIRbits.ACTVIF here!                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Reason:                                                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * ACTVIF is only generated once an IDLEIF has been generated.               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * This is a 1:1 ratio interrupt generation.                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * For every IDLEIF, there will be only one ACTVIF regardless of             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * the number of subsequent bus transitions.                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * If the ACTIF is cleared here, a problem could occur when:                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * [       IDLE       ][bus activity ->                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * <--- 3 ms ----->     ^                                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                ^     ACTVIF=1                                             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                IDLEIF=1                                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *  #           #           #           #   (#=Program polling flags)        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                          ^                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                          This polling loop will see both                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                          IDLEIF=1 and ACTVIF=1.                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                          However, the program services IDLEIF first       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                          because ACTIVIE=0.                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                          If this routine clears the only ACTIVIF,         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                          then it can never get out of the suspend         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                          mode.                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017dc   8469     BSF       0x69,0x2,0x0       UIEbits.ACTVIE = 1;                     // Enable bus activity interrupt     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017de   9868     BCF       0x68,0x4,0x0       UIRbits.IDLEIF = 0;                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017e0   826d     BSF       0x6d,0x1,0x0       UCONbits.SUSPND = 1;                    // Put USB module in power conserve  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                       // mode, SIE clock inactive          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * At this point the PIC can go into sleep,idle, or                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * switch to a slower clock, etc.                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /* Modifiable Section */                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /* End Modifiable Section */                                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017e2   0012     RETURN    0x0            }//end USBSuspend                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBWakeFromSuspend(void)                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:                                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBWakeFromSuspend(void)                                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * If using clock switching, this is the place to restore the                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * original clock frequency.                                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017e4   926d     BCF       0x6d,0x1,0x0       UCONbits.SUSPND = 0;                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017e6   9469     BCF       0x69,0x2,0x0       UIEbits.ACTVIE = 0;                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017e8   9468     BCF       0x68,0x2,0x0       UIRbits.ACTVIF = 0;                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017ea   0012     RETURN    0x0            }//end USBWakeFromSuspend                                                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBRemoteWakeup(void)                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        This function should be called by user when the device       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  is waken up by an external stimulus other than ACTIVIF.      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  Please read the note below to understand the limitations.    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            The modifiable section in this routine should be changed     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  to meet the application needs. Current implementation        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  temporary blocks other functions from executing for a        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  period of 1-13 ms depending on the core frequency.           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  According to USB 2.0 specification section 7.1.7.7,          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  "The remote wakeup device must hold the resume signaling     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  for at lest 1 ms but for no more than 15 ms."                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  The idea here is to use a delay counter loop, using a        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  common value that would work over a wide range of core       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  frequencies.                                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  That value selected is 1800. See table below:                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  ==========================================================   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  Core Freq(MHz)      MIP         RESUME Signal Period (ms)    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  ==========================================================   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                      48              12          1.05                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                       4              1           12.6                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  ==========================================================   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  * These timing could be incorrect when using code            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                    optimization or extended instruction mode,                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                    or when having other interrupts enabled.                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                    Make sure to verify using the MPLAB SIM's Stopwatch        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBRemoteWakeup(void)                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               static word delay_count;                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017ec   0100     MOVLB     0x0                if(usb_stat.RemoteWakeup == 1)          // Check if RemoteWakeup function    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017ee   a1c2     BTFSS     0xc2,0x0,0x1                                                                                    
0017f0   d00e     BRA       0x180e                                                                                          
                                               {                                       // has been enabled by the host.     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017f2   dff8     RCALL     0x17e4                 USBWakeFromSuspend();               // Unsuspend USB modue               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017f4   846d     BSF       0x6d,0x2,0x0           UCONbits.RESUME = 1;                // Start RESUME signaling            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                   /* Modifiable Section */                                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017f6   0100     MOVLB     0x0                    delay_count = 1800U;                // Set RESUME line for 1-13 ms       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
0017f8   0e08     MOVLW     0x8                                                                                             
0017fa   6fc5     MOVWF     0xc5,0x1                                                                                        
0017fc   0e07     MOVLW     0x7                                                                                             
0017fe   6fc6     MOVWF     0xc6,0x1                                                                                        
                                                   do                                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                   {                                                                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001800   07c5     DECF      0xc5,0x1,0x1               delay_count--;                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001802   0e00     MOVLW     0x0                                                                                             
001804   5bc6     SUBWFB    0xc6,0x1,0x1                                                                                    
001806   51c5     MOVF      0xc5,0x0,0x1           }while(delay_count);                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001808   11c6     IORWF     0xc6,0x0,0x1                                                                                    
00180a   e1fa     BNZ       0x1800                                                                                          
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                   /* End Modifiable Section */                                             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00180c   946d     BCF       0x6d,0x2,0x0           UCONbits.RESUME = 0;                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               }//endif                                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00180e   0012     RETURN    0x0            }//end USBRemoteWakeup                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USB_SOF_Handler(void)                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        The USB host sends out a SOF packet to full-speed devices    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  every 1 ms. This interrupt may be useful for isochronous     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  pipes. End designers should implement callback routine       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  as necessary.                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USB_SOF_Handler(void)                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /* Callback routine here */                                                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001810   9c68     BCF       0x68,0x6,0x0       UIRbits.SOFIF = 0;                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001812   0012     RETURN    0x0            }//end USB_SOF_Handler                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBStallHandler(void)                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    A STALL packet is sent to the host by the SIE.               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        The STALLIF is set anytime the SIE sends out a STALL         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  packet regardless of which endpoint causes it.               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  A Setup transaction overrides the STALL function. A stalled  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  endpoint stops stalling once it receives a setup packet.     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  In this case, the SIE will accepts the Setup packet and      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  set the TRNIF flag to notify the firmware. STALL function    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  for that particular endpoint pipe will be automatically      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  disabled (direction specific).                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  There are a few reasons for an endpoint to be stalled.       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  1. When a non-supported USB request is received.             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                     Example: GET_DESCRIPTOR(DEVICE_QUALIFIER)                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  2. When an endpoint is currently halted.                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  3. When the device class specifies that an endpoint must     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                     stall in response to a specific event.                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                     Example: Mass Storage Device Class                        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                              If the CBW is not valid, the device shall        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                              STALL the Bulk-In pipe.                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                              See USB Mass Storage Class Bulk-only Transport   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                              Specification for more details.                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            UEPn.EPSTALL can be scanned to see which endpoint causes     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  the stall event.                                             C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  If                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBStallHandler(void)                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * Does not really have to do anything here,                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * even for the control endpoint.                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * All BDs of Endpoint 0 are owned by SIE right now,                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * but once a Setup Transaction is received, the ownership                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * for EP0_OUT will be returned to CPU.                                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * When the Setup Transaction is serviced, the ownership                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * for EP0_IN will then be forced back to CPU by firmware.                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *                                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                * NOTE: Above description is not quite true at this point.                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *       It seems the SIE never returns the UOWN bit to CPU,                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *       and a TRNIF is never generated upon successful                      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *       reception of a SETUP transaction.                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                *       Firmware work-around is implemented below.                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001814   a070     BTFSS     0x70,0x0,0x0       if(UEP0bits.EPSTALL == 1)                                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001816   d003     BRA       0x181e                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001818   ece0     CALL      0x13c0,0x0             USBPrepareForNextSetupTrf();        // Firmware Work-Around              C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00181a   f009                                                                                                               
00181c   9070     BCF       0x70,0x0,0x0           UEP0bits.EPSTALL = 0;                                                    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                               }                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00181e   9a68     BCF       0x68,0x5,0x0       UIRbits.STALLIF = 0;                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001820   0012     RETURN    0x0            }//end USBStallHandler                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBErrorHandler(void)                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        The purpose of this interrupt is mainly for debugging        C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  during development. Check UEIR to see which error causes     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  the interrupt.                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBErrorHandler(void)                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001822   9268     BCF       0x68,0x1,0x0       UIRbits.UERRIF = 0;                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001824   0012     RETURN    0x0            }//end USBErrorHandler                                                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Function:        void USBProtocolResetHandler(void)                           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * PreCondition:    A USB bus reset is received from the host.                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Side Effects:    Currently, this routine flushes any pending USB              C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  transactions. It empties out the USTAT FIFO. This action     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  might not be desirable in some applications.                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Overview:        Once a USB bus reset is received from the host, this         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  routine should be called. It resets the device address to    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  zero, disables all non-EP0 endpoints, initializes EP0 to     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  be ready for default communication, clears all USB           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  interrupt flags, unmasks applicable USB interrupts, and      C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                  reinitializes internal state-machine variables.              C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           void USBProtocolResetHandler(void)                                               C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001826   6a6a     CLRF      0x6a,0x0           UEIR = 0;                       // Clear all USB error flags                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001828   6a68     CLRF      0x68,0x0           UIR = 0;                        // Clears all USB interrupts                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00182a   0e9f     MOVLW     0x9f               UEIE = 0b10011111;              // Unmask all USB error interrupts           C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00182c   6e6b     MOVWF     0x6b,0x0                                                                                        
00182e   0e7b     MOVLW     0x7b               UIE = 0b01111011;               // Enable all interrupts except ACTVIE       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001830   6e69     MOVWF     0x69,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001832   6a6e     CLRF      0x6e,0x0           UADDR = 0x00;                   // Reset to default address                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001834   0e0f     MOVLW     0xf                mDisableEP1to15();              // Reset all non-EP0 UEPn registers          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001836   6ee6     MOVWF     0xe6,0x0                                                                                        
001838   0e71     MOVLW     0x71                                                                                            
00183a   6ee6     MOVWF     0xe6,0x0                                                                                        
00183c   0e0f     MOVLW     0xf                                                                                             
00183e   6ee6     MOVWF     0xe6,0x0                                                                                        
001840   d814     RCALL     0x186a                                                                                          
001842   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001844   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001846   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001848   0e16     MOVLW     0x16               UEP0 = EP_CTRL|HSHK_EN;         // Init EP0 as a Ctrl EP, see usbdrv.h       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00184a   6e70     MOVWF     0x70,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00184c   a668     BTFSS     0x68,0x3,0x0       while(UIRbits.TRNIF == 1)       // Flush any pending transactions            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00184e   d002     BRA       0x1854                                                                                          
001852   d7fc     BRA       0x184c                                                                                          
001850   9668     BCF       0x68,0x3,0x0           UIRbits.TRNIF = 0;                                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001854   986d     BCF       0x6d,0x4,0x0       UCONbits.PKTDIS = 0;            // Make sure packet processing is enabled    C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001856   ece0     CALL      0x13c0,0x0         USBPrepareForNextSetupTrf();    // Declared in usbctrltrf.c                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001858   f009                                                                                                               
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00185a   0100     MOVLB     0x0                usb_stat.RemoteWakeup = 0;      // Default status flag to disable            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00185c   91c2     BCF       0xc2,0x0,0x1                                                                                    
00185e   0100     MOVLB     0x0                usb_active_cfg = 0;             // Clear active configuration                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001860   6bc3     CLRF      0xc3,0x1                                                                                        
001862   0100     MOVLB     0x0                usb_device_state = DEFAULT_STATE;                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001864   0e03     MOVLW     0x3                                                                                             
001866   6fc1     MOVWF     0xc1,0x1                                                                                        
001868   0012     RETURN    0x0            }//end USBProtocolResetHandler                                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /* Auxiliary Function */                                                         C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00186a   cfd9     MOVFF     0xfd9,0xfe6    void ClearArray(byte* startAdr,byte count)                                       C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00186c   ffe6                                                                                                               
00186e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001870   ffd9                                                                                                               
                                           {                                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001872   0efd     MOVLW     0xfd               *startAdr;                                                                   C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001874   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001876   ffe9                                                                                                               
001878   0efe     MOVLW     0xfe                                                                                            
00187a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00187c   ffea                                                                                                               
00187e   0efc     MOVLW     0xfc               while(count)                                                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001880   50db     MOVF      0xdb,0x0,0x0                                                                                    
001882   e004     BZ        0x188c                                                                                          
00188a   d7f9     BRA       0x187e                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                   _asm                                                                     C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001884   6aee     CLRF      0xee,0x0               clrf POSTINC0,0                                                          C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                                   _endasm                                                                  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001886   0efc     MOVLW     0xfc                   count--;                                                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
001888   06db     DECF      0xdb,0x1,0x0                                                                                    
                                               }//end while                                                                 C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00188c   52e5     MOVF      0xe5,0x1,0x0   }//end ClearArray                                                                C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
00188e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001890   ffd9                                                                                                               
001892   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /** EOF usbdrv.c *************************************************************/  C:\PIC5\PIC\system\usb\usbdrv\usbdrv.c
                                           /*********************************************************************           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *********************************************************************           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * FileName:        usb9.c                                                       C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Dependencies:    See INCLUDES section below                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Processor:       PIC18                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Compiler:        C18 2.30.01+                                                 C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Company:         Microchip Technology, Inc.                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Software License Agreement                                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * civil liability for the breach of the terms and conditions of this            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * license.                                                                      C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Author               Date        Comment                                      C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            ********************************************************************/           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /** I N C L U D E S **********************************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           #include <p18cxxx.h>                                                             C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           #include "system\typedefs.h"                                                     C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           #include "system\usb\usb.h"                                                      C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           #include "io_cfg.h"                     // Required for self_power status        C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /** V A R I A B L E S ********************************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           #pragma udata                                                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           void USBStdGetDscHandler(void);                                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           void USBStdSetCfgHandler(void);                                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           void USBStdGetStatusHandler(void);                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           void USBStdFeatureReqHandler(void);                                              C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           #pragma code                                                                     C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Function:        void USBCheckStdRequest(void)                                C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Overview:        This routine checks the setup data packet to see if it       C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                  knows how to handle it                                       C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           void USBCheckStdRequest(void)                                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
000e1e   0104     MOVLB     0x4                if(SetupPkt.RequestType != STANDARD) return;                                 C:\PIC5\PIC\system\usb\usb9\usb9.c
000e20   5118     MOVF      0x18,0x0,0x1                                                                                    
000e22   0b60     ANDLW     0x60                                                                                            
000e24   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
000e26   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
000e28   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
000e2a   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
000e2c   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
000e2e   0900     IORLW     0x0                                                                                             
000e30   e001     BZ        0xe34                                                                                           
000e32   d055     BRA       0xede                                                                                           
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000e34   5119     MOVF      0x19,0x0,0x1       switch(SetupPkt.bRequest)                                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
000e36   0a07     XORLW     0x7                                                                                             
000e38   e051     BZ        0xedc                                                                                           
000e3a   0a0b     XORLW     0xb                                                                                             
000e3c   e04f     BZ        0xedc                                                                                           
000e3e   0a07     XORLW     0x7                                                                                             
000e40   e040     BZ        0xec2                                                                                           
000e42   0a01     XORLW     0x1                                                                                             
000e44   e02c     BZ        0xe9e                                                                                           
000e46   0a0b     XORLW     0xb                                                                                             
000e48   e028     BZ        0xe9a                                                                                           
000e4a   0a02     XORLW     0x2                                                                                             
000e4c   e026     BZ        0xe9a                                                                                           
000e4e   0a03     XORLW     0x3                                                                                             
000e50   e022     BZ        0xe96                                                                                           
000e52   0a08     XORLW     0x8                                                                                             
000e54   e012     BZ        0xe7a                                                                                           
000e56   0a01     XORLW     0x1                                                                                             
000e58   e00e     BZ        0xe76                                                                                           
000e5a   0a0f     XORLW     0xf                                                                                             
000e5c   e00a     BZ        0xe72                                                                                           
000e5e   0a03     XORLW     0x3                                                                                             
000e60   e001     BZ        0xe64                                                                                           
000e62   d03c     BRA       0xedc                                                                                           
                                               {                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case SET_ADR:                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000e64   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
000e66   0e01     MOVLW     0x1                                                                                             
000e68   6fba     MOVWF     0xba,0x1                                                                                        
000e6a   0100     MOVLB     0x0                        usb_device_state = ADR_PENDING_STATE;       // Update state only     C:\PIC5\PIC\system\usb\usb9\usb9.c
000e6c   0e04     MOVLW     0x4                                                                                             
000e6e   6fc1     MOVWF     0xc1,0x1                                                                                        
                                                       /* See USBCtrlTrfInHandler() in usbctrltrf.c for the next step */    C:\PIC5\PIC\system\usb\usb9\usb9.c
000e70   d036     BRA       0xede                      break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case GET_DSC:                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000e72   d836     RCALL     0xee0                      USBStdGetDscHandler();                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
000e74   d034     BRA       0xede                      break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case SET_CFG:                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000e76   d890     RCALL     0xf98                      USBStdSetCfgHandler();                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
000e78   d032     BRA       0xede                      break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case GET_CFG:                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000e7a   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
000e7c   0e01     MOVLW     0x1                                                                                             
000e7e   6fba     MOVWF     0xba,0x1                                                                                        
000e80   0100     MOVLB     0x0                        pSrc.bRam = (byte*)&usb_active_cfg;         // Set Source            C:\PIC5\PIC\system\usb\usb9\usb9.c
000e82   0ec3     MOVLW     0xc3                                                                                            
000e84   6fbb     MOVWF     0xbb,0x1                                                                                        
000e86   0e00     MOVLW     0x0                                                                                             
000e88   6fbc     MOVWF     0xbc,0x1                                                                                        
000e8a   0100     MOVLB     0x0                        usb_stat.ctrl_trf_mem = _RAM;               // Set memory type       C:\PIC5\PIC\system\usb\usb9\usb9.c
000e8c   93c2     BCF       0xc2,0x1,0x1                                                                                    
000e8e   0100     MOVLB     0x0                        LSB(wCount) = 1;                            // Set data count        C:\PIC5\PIC\system\usb\usb9\usb9.c
000e90   0e01     MOVLW     0x1                                                                                             
000e92   6fbf     MOVWF     0xbf,0x1                                                                                        
000e94   d024     BRA       0xede                      break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case GET_STATUS:                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
000e96   d8a8     RCALL     0xfe8                      USBStdGetStatusHandler();                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000e98   d022     BRA       0xede                      break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case CLR_FEATURE:                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case SET_FEATURE:                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
000e9a   d8f6     RCALL     0x1088                     USBStdFeatureReqHandler();                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
000e9c   d020     BRA       0xede                      break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case GET_INTF:                                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
000e9e   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
000ea0   0e01     MOVLW     0x1                                                                                             
000ea2   6fba     MOVWF     0xba,0x1                                                                                        
000ea4   0104     MOVLB     0x4                        pSrc.bRam = (byte*)&usb_alt_intf+SetupPkt.bIntfID;  // Set source    C:\PIC5\PIC\system\usb\usb9\usb9.c
000ea6   511c     MOVF      0x1c,0x0,0x1                                                                                    
000ea8   0100     MOVLB     0x0                                                                                             
000eaa   6fbb     MOVWF     0xbb,0x1                                                                                        
000eac   6bbc     CLRF      0xbc,0x1                                                                                        
000eae   0ec4     MOVLW     0xc4                                                                                            
000eb0   27bb     ADDWF     0xbb,0x1,0x1                                                                                    
000eb2   0e00     MOVLW     0x0                                                                                             
000eb4   23bc     ADDWFC    0xbc,0x1,0x1                                                                                    
000eb6   0100     MOVLB     0x0                        usb_stat.ctrl_trf_mem = _RAM;               // Set memory type       C:\PIC5\PIC\system\usb\usb9\usb9.c
000eb8   93c2     BCF       0xc2,0x1,0x1                                                                                    
000eba   0100     MOVLB     0x0                        LSB(wCount) = 1;                            // Set data count        C:\PIC5\PIC\system\usb\usb9\usb9.c
000ebc   0e01     MOVLW     0x1                                                                                             
000ebe   6fbf     MOVWF     0xbf,0x1                                                                                        
000ec0   d00e     BRA       0xede                      break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case SET_INTF:                                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
000ec2   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
000ec4   0e01     MOVLW     0x1                                                                                             
000ec6   6fba     MOVWF     0xba,0x1                                                                                        
000ec8   0104     MOVLB     0x4                        usb_alt_intf[SetupPkt.bIntfID] = SetupPkt.bAltID;                    C:\PIC5\PIC\system\usb\usb9\usb9.c
000eca   511c     MOVF      0x1c,0x0,0x1                                                                                    
000ecc   6aea     CLRF      0xea,0x0                                                                                        
000ece   0fc4     ADDLW     0xc4                                                                                            
000ed0   6ee9     MOVWF     0xe9,0x0                                                                                        
000ed2   0e00     MOVLW     0x0                                                                                             
000ed4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ed6   c41a     MOVFF     0x41a,0xfef                                                                                     
000ed8   ffef                                                                                                               
000eda   d001     BRA       0xede                      break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case SET_DSC:                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case SYNCH_FRAME:                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   default:                                                                 C:\PIC5\PIC\system\usb\usb9\usb9.c
000edc   d000     BRA       0xede                      break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                               }//end switch                                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000ede   0012     RETURN    0x0            }//end USBCheckStdRequest                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Function:        void USBStdGetDscHandler(void)                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Overview:        This routine handles the standard GET_DESCRIPTOR request.    C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                  It utilizes tables dynamically looks up descriptor size.     C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                  This routine should never have to be modified if the tables  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                  in usbdsc.c are declared correctly.                          C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           void USBStdGetDscHandler(void)                                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
000ee0   0e80     MOVLW     0x80               if(SetupPkt.bmRequestType == 0x80)                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
000ee2   0104     MOVLB     0x4                                                                                             
000ee4   5d18     SUBWF     0x18,0x0,0x1                                                                                    
000ee6   e157     BNZ       0xf96                                                                                           
                                               {                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000ee8   511b     MOVF      0x1b,0x0,0x1           switch(SetupPkt.bDscType)                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
000eea   0a03     XORLW     0x3                                                                                             
000eec   e034     BZ        0xf56                                                                                           
000eee   0a01     XORLW     0x1                                                                                             
000ef0   e010     BZ        0xf12                                                                                           
000ef2   0a03     XORLW     0x3                                                                                             
000ef4   e001     BZ        0xef8                                                                                           
000ef6   d04d     BRA       0xf92                                                                                           
                                                   {                                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                       case DSC_DEV:                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
000ef8   0100     MOVLB     0x0                            ctrl_trf_session_owner = MUID_USB9;                              C:\PIC5\PIC\system\usb\usb9\usb9.c
000efa   0e01     MOVLW     0x1                                                                                             
000efc   6fba     MOVWF     0xba,0x1                                                                                        
000efe   0100     MOVLB     0x0                            pSrc.bRom = (rom byte*)&device_dsc;                              C:\PIC5\PIC\system\usb\usb9\usb9.c
000f00   0eb2     MOVLW     0xb2                                                                                            
000f02   6fbb     MOVWF     0xbb,0x1                                                                                        
000f04   0e19     MOVLW     0x19                                                                                            
000f06   6fbc     MOVWF     0xbc,0x1                                                                                        
000f08   0e12     MOVLW     0x12                           wCount._word = sizeof(device_dsc);          // Set data count    C:\PIC5\PIC\system\usb\usb9\usb9.c
000f0a   0100     MOVLB     0x0                                                                                             
000f0c   6fbf     MOVWF     0xbf,0x1                                                                                        
000f0e   6bc0     CLRF      0xc0,0x1                                                                                        
000f10   d040     BRA       0xf92                          break;                                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                       case DSC_CFG:                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
000f12   0100     MOVLB     0x0                            ctrl_trf_session_owner = MUID_USB9;                              C:\PIC5\PIC\system\usb\usb9\usb9.c
000f14   0e01     MOVLW     0x1                                                                                             
000f16   6fba     MOVWF     0xba,0x1                                                                                        
000f18   0104     MOVLB     0x4                            pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);                    C:\PIC5\PIC\system\usb\usb9\usb9.c
000f1a   511a     MOVF      0x1a,0x0,0x1                                                                                    
000f1c   6ef6     MOVWF     0xf6,0x0                                                                                        
000f1e   6af7     CLRF      0xf7,0x0                                                                                        
000f20   90d8     BCF       0xd8,0x0,0x0                                                                                    
000f22   36f6     RLCF      0xf6,0x1,0x0                                                                                    
000f24   36f7     RLCF      0xf7,0x1,0x0                                                                                    
000f26   0e60     MOVLW     0x60                                                                                            
000f28   26f6     ADDWF     0xf6,0x1,0x0                                                                                    
000f2a   0e1a     MOVLW     0x1a                                                                                            
000f2c   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
000f2e   0009     TBLRDPOSTINC                                                                                              
000f30   cff5     MOVFF     0xff5,0xbb                                                                                      
000f32   f0bb                                                                                                               
000f34   000a     TBLRDPOSTDEC                                                                                              
000f36   cff5     MOVFF     0xff5,0xbc                                                                                      
000f38   f0bc                                                                                                               
000f3a   0e02     MOVLW     0x2                            wCount._word = *(pSrc.wRom+1);              // Set data count    C:\PIC5\PIC\system\usb\usb9\usb9.c
000f3c   0100     MOVLB     0x0                                                                                             
000f3e   6af7     CLRF      0xf7,0x0                                                                                        
000f40   25bb     ADDWF     0xbb,0x0,0x1                                                                                    
000f42   6ef6     MOVWF     0xf6,0x0                                                                                        
000f44   51bc     MOVF      0xbc,0x0,0x1                                                                                    
000f46   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
000f48   0009     TBLRDPOSTINC                                                                                              
000f4a   cff5     MOVFF     0xff5,0xbf                                                                                      
000f4c   f0bf                                                                                                               
000f4e   000a     TBLRDPOSTDEC                                                                                              
000f50   cff5     MOVFF     0xff5,0xc0                                                                                      
000f52   f0c0                                                                                                               
000f54   d01e     BRA       0xf92                          break;                                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                       case DSC_STR:                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
000f56   0100     MOVLB     0x0                            ctrl_trf_session_owner = MUID_USB9;                              C:\PIC5\PIC\system\usb\usb9\usb9.c
000f58   0e01     MOVLW     0x1                                                                                             
000f5a   6fba     MOVWF     0xba,0x1                                                                                        
000f5c   0104     MOVLB     0x4                            pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);                    C:\PIC5\PIC\system\usb\usb9\usb9.c
000f5e   511a     MOVF      0x1a,0x0,0x1                                                                                    
000f60   6ef6     MOVWF     0xf6,0x0                                                                                        
000f62   6af7     CLRF      0xf7,0x0                                                                                        
000f64   90d8     BCF       0xd8,0x0,0x0                                                                                    
000f66   36f6     RLCF      0xf6,0x1,0x0                                                                                    
000f68   36f7     RLCF      0xf7,0x1,0x0                                                                                    
000f6a   0e64     MOVLW     0x64                                                                                            
000f6c   26f6     ADDWF     0xf6,0x1,0x0                                                                                    
000f6e   0e1a     MOVLW     0x1a                                                                                            
000f70   22f7     ADDWFC    0xf7,0x1,0x0                                                                                    
000f72   0009     TBLRDPOSTINC                                                                                              
000f74   cff5     MOVFF     0xff5,0xbb                                                                                      
000f76   f0bb                                                                                                               
000f78   000a     TBLRDPOSTDEC                                                                                              
000f7a   cff5     MOVFF     0xff5,0xbc                                                                                      
000f7c   f0bc                                                                                                               
000f7e   c0bb     MOVFF     0xbb,0xff6                     wCount._word = *pSrc.bRom;                  // Set data count    C:\PIC5\PIC\system\usb\usb9\usb9.c
000f80   fff6                                                                                                               
000f82   c0bc     MOVFF     0xbc,0xff7                                                                                      
000f84   fff7                                                                                                               
000f86   0008     TBLRD                                                                                                     
000f88   50f5     MOVF      0xf5,0x0,0x0                                                                                    
000f8a   0100     MOVLB     0x0                                                                                             
000f8c   6fbf     MOVWF     0xbf,0x1                                                                                        
000f8e   6bc0     CLRF      0xc0,0x1                                                                                        
000f90   d000     BRA       0xf92                          break;                                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   }//end switch                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000f92   0100     MOVLB     0x0                    usb_stat.ctrl_trf_mem = _ROM;                       // Set memory type   C:\PIC5\PIC\system\usb\usb9\usb9.c
000f94   83c2     BSF       0xc2,0x1,0x1                                                                                    
                                               }//end if                                                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
000f96   0012     RETURN    0x0            }//end USBStdGetDscHandler                                                       C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Function:        void USBStdSetCfgHandler(void)                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Overview:        This routine first disables all endpoints by clearing        C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                  UEP registers. It then configures (initializes) endpoints    C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                  specified in the modifiable section.                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           void USBStdSetCfgHandler(void)                                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
000f98   0100     MOVLB     0x0                ctrl_trf_session_owner = MUID_USB9;                                          C:\PIC5\PIC\system\usb\usb9\usb9.c
000f9a   0e01     MOVLW     0x1                                                                                             
000f9c   6fba     MOVWF     0xba,0x1                                                                                        
000f9e   0e0f     MOVLW     0xf                mDisableEP1to15();                          // See usbdrv.h                  C:\PIC5\PIC\system\usb\usb9\usb9.c
000fa0   6ee6     MOVWF     0xe6,0x0                                                                                        
000fa2   0e71     MOVLW     0x71                                                                                            
000fa4   6ee6     MOVWF     0xe6,0x0                                                                                        
000fa6   0e0f     MOVLW     0xf                                                                                             
000fa8   6ee6     MOVWF     0xe6,0x0                                                                                        
000faa   ec35     CALL      0x186a,0x0                                                                                      
000fac   f00c                                                                                                               
000fae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000fb0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000fb2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000fb4   0e01     MOVLW     0x1                ClearArray((byte*)&usb_alt_intf,MAX_NUM_INT);                                C:\PIC5\PIC\system\usb\usb9\usb9.c
000fb6   6ee6     MOVWF     0xe6,0x0                                                                                        
000fb8   0ec4     MOVLW     0xc4                                                                                            
000fba   6ee6     MOVWF     0xe6,0x0                                                                                        
000fbc   0e00     MOVLW     0x0                                                                                             
000fbe   6ee6     MOVWF     0xe6,0x0                                                                                        
000fc0   ec35     CALL      0x186a,0x0                                                                                      
000fc2   f00c                                                                                                               
000fc4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000fc6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000fc8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000fca   c41a     MOVFF     0x41a,0xc3         usb_active_cfg = SetupPkt.bCfgValue;                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
000fcc   f0c3                                                                                                               
000fce   0104     MOVLB     0x4                if(SetupPkt.bCfgValue == 0)                                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
000fd0   511a     MOVF      0x1a,0x0,0x1                                                                                    
000fd2   e104     BNZ       0xfdc                                                                                           
000fd4   0100     MOVLB     0x0                    usb_device_state = ADDRESS_STATE;                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
000fd6   0e05     MOVLW     0x5                                                                                             
000fd8   6fc1     MOVWF     0xc1,0x1                                                                                        
000fda   d005     BRA       0xfe6              else                                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                               {                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000fdc   0100     MOVLB     0x0                    usb_device_state = CONFIGURED_STATE;                                     C:\PIC5\PIC\system\usb\usb9\usb9.c
000fde   0e06     MOVLW     0x6                                                                                             
000fe0   6fc1     MOVWF     0xc1,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   /* Modifiable Section */                                                 C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   #if defined(USB_USE_GEN)                // See autofiles\usbcfg.h        C:\PIC5\PIC\system\usb\usb9\usb9.c
000fe2   ec4a     CALL      0x1894,0x0             USBGenInitEP();                                                          C:\PIC5\PIC\system\usb\usb9\usb9.c
000fe4   f00c                                                                                                               
                                                   #endif                                                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   /* End modifiable section */                                             C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                               }//end if(SetupPkt.bcfgValue == 0)                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
000fe6   0012     RETURN    0x0            }//end USBStdSetCfgHandler                                                       C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Function:        void USBStdGetStatusHandler(void)                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Overview:        This routine handles the standard GET_STATUS request         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           void USBStdGetStatusHandler(void)                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
000fe8   0104     MOVLB     0x4                CtrlTrfData._byte0 = 0;                         // Initialize content        C:\PIC5\PIC\system\usb\usb9\usb9.c
000fea   6b20     CLRF      0x20,0x1                                                                                        
000fec   6b21     CLRF      0x21,0x1           CtrlTrfData._byte1 = 0;                                                      C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
000fee   0104     MOVLB     0x4                switch(SetupPkt.Recipient)                                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
000ff0   5118     MOVF      0x18,0x0,0x1                                                                                    
000ff2   0b1f     ANDLW     0x1f                                                                                            
000ff4   0a02     XORLW     0x2                                                                                             
000ff6   e016     BZ        0x1024                                                                                          
000ff8   0a03     XORLW     0x3                                                                                             
000ffa   e010     BZ        0x101c                                                                                          
000ffc   0a01     XORLW     0x1                                                                                             
000ffe   e001     BZ        0x1002                                                                                          
001000   d035     BRA       0x106c                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case RCPT_DEV:                                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
001002   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
001004   0e01     MOVLW     0x1                                                                                             
001006   6fba     MOVWF     0xba,0x1                                                                                        
                                                       /*                                                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                        * _byte0: bit0: Self-Powered Status [0] Bus-Powered [1] Self-Powered C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                        *         bit1: RemoteWakeup        [0] Disabled    [1] Enabled     C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                        */                                                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
001008   a480     BTFSS     0x80,0x2,0x0               if(self_power == 1)                     // self_power defined in io_cfg.h C:\PIC5\PIC\system\usb\usb9\usb9.c
00100a   d002     BRA       0x1010                                                                                          
00100c   0104     MOVLB     0x4                            CtrlTrfData._byte0|=0b000000001;    // Set bit0                  C:\PIC5\PIC\system\usb\usb9\usb9.c
00100e   8120     BSF       0x20,0x0,0x1                                                                                    
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
001010   0100     MOVLB     0x0                        if(usb_stat.RemoteWakeup == 1)          // usb_stat defined in usbmmap.c C:\PIC5\PIC\system\usb\usb9\usb9.c
001012   a1c2     BTFSS     0xc2,0x0,0x1                                                                                    
001014   d002     BRA       0x101a                                                                                          
001016   0104     MOVLB     0x4                            CtrlTrfData._byte0|=0b00000010;     // Set bit1                  C:\PIC5\PIC\system\usb\usb9\usb9.c
001018   8320     BSF       0x20,0x1,0x1                                                                                    
00101a   d028     BRA       0x106c                     break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case RCPT_INTF:                                                          C:\PIC5\PIC\system\usb\usb9\usb9.c
00101c   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;     // No data to update         C:\PIC5\PIC\system\usb\usb9\usb9.c
00101e   0e01     MOVLW     0x1                                                                                             
001020   6fba     MOVWF     0xba,0x1                                                                                        
001022   d024     BRA       0x106c                     break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   case RCPT_EP:                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
001024   0100     MOVLB     0x0                        ctrl_trf_session_owner = MUID_USB9;                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
001026   0e01     MOVLW     0x1                                                                                             
001028   6fba     MOVWF     0xba,0x1                                                                                        
                                                       /*                                                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                        * _byte0: bit0: Halt Status [0] Not Halted [1] Halted               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                        */                                                                  C:\PIC5\PIC\system\usb\usb9\usb9.c
00102a   0104     MOVLB     0x4                        pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);     C:\PIC5\PIC\system\usb\usb9\usb9.c
00102c   511c     MOVF      0x1c,0x0,0x1                                                                                    
00102e   0b0f     ANDLW     0xf                                                                                             
001030   0d08     MULLW     0x8                                                                                             
001032   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001034   6a11     CLRF      0x11,0x0                                                                                        
001036   0f00     ADDLW     0x0                                                                                             
001038   6e10     MOVWF     0x10,0x0                                                                                        
00103a   0e04     MOVLW     0x4                                                                                             
00103c   2211     ADDWFC    0x11,0x1,0x0                                                                                    
00103e   511c     MOVF      0x1c,0x0,0x1                                                                                    
001040   0b80     ANDLW     0x80                                                                                            
001042   e001     BZ        0x1046                                                                                          
001044   0e01     MOVLW     0x1                                                                                             
001046   0d04     MULLW     0x4                                                                                             
001048   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00104a   0100     MOVLB     0x0                                                                                             
00104c   2410     ADDWF     0x10,0x0,0x0                                                                                    
00104e   6fbd     MOVWF     0xbd,0x1                                                                                        
001050   0e00     MOVLW     0x0                                                                                             
001052   2011     ADDWFC    0x11,0x0,0x0                                                                                    
001054   6fbe     MOVWF     0xbe,0x1                                                                                        
001056   c0bd     MOVFF     0xbd,0xfe9                 if(*pDst.bRam & _BSTALL)    // Use _BSTALL as a bit mask             C:\PIC5\PIC\system\usb\usb9\usb9.c
001058   ffe9                                                                                                               
00105a   c0be     MOVFF     0xbe,0xfea                                                                                      
00105c   ffea                                                                                                               
00105e   50ef     MOVF      0xef,0x0,0x0                                                                                    
001060   0b04     ANDLW     0x4                                                                                             
001062   e003     BZ        0x106a                                                                                          
001064   0104     MOVLB     0x4                            CtrlTrfData._byte0=0x01;// Set bit0                              C:\PIC5\PIC\system\usb\usb9\usb9.c
001066   0e01     MOVLW     0x1                                                                                             
001068   6f20     MOVWF     0x20,0x1                                                                                        
00106a   d000     BRA       0x106c                     break;                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                               }//end switch                                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
00106c   0100     MOVLB     0x0                if(ctrl_trf_session_owner == MUID_USB9)                                      C:\PIC5\PIC\system\usb\usb9\usb9.c
00106e   05ba     DECF      0xba,0x0,0x1                                                                                    
001070   e10a     BNZ       0x1086                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
001072   0100     MOVLB     0x0                    pSrc.bRam = (byte*)&CtrlTrfData;            // Set Source                C:\PIC5\PIC\system\usb\usb9\usb9.c
001074   0e20     MOVLW     0x20                                                                                            
001076   6fbb     MOVWF     0xbb,0x1                                                                                        
001078   0e04     MOVLW     0x4                                                                                             
00107a   6fbc     MOVWF     0xbc,0x1                                                                                        
00107c   0100     MOVLB     0x0                    usb_stat.ctrl_trf_mem = _RAM;               // Set memory type           C:\PIC5\PIC\system\usb\usb9\usb9.c
00107e   93c2     BCF       0xc2,0x1,0x1                                                                                    
001080   0100     MOVLB     0x0                    LSB(wCount) = 2;                            // Set data count            C:\PIC5\PIC\system\usb\usb9\usb9.c
001082   0e02     MOVLW     0x2                                                                                             
001084   6fbf     MOVWF     0xbf,0x1                                                                                        
                                               }//end if(...)                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
001086   0012     RETURN    0x0            }//end USBStdGetStatusHandler                                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Function:        void USBStdFeatureReqHandler(void)                           C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Overview:        This routine handles the standard SET & CLEAR FEATURES       C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                  requests                                                     C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           void USBStdFeatureReqHandler(void)                                               C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
001088   0104     MOVLB     0x4                if((SetupPkt.bFeature == DEVICE_REMOTE_WAKEUP)&&                             C:\PIC5\PIC\system\usb\usb9\usb9.c
00108a   051a     DECF      0x1a,0x0,0x1                                                                                    
00108c   e110     BNZ       0x10ae                (SetupPkt.Recipient == RCPT_DEV))                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
00108e   5118     MOVF      0x18,0x0,0x1                                                                                    
001090   0b1f     ANDLW     0x1f                                                                                            
001092   0900     IORLW     0x0                                                                                             
001094   e10c     BNZ       0x10ae                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
001096   0100     MOVLB     0x0                    ctrl_trf_session_owner = MUID_USB9;                                      C:\PIC5\PIC\system\usb\usb9\usb9.c
001098   0e01     MOVLW     0x1                                                                                             
00109a   6fba     MOVWF     0xba,0x1                                                                                        
00109c   0e03     MOVLW     0x3                    if(SetupPkt.bRequest == SET_FEATURE)                                     C:\PIC5\PIC\system\usb\usb9\usb9.c
00109e   0104     MOVLB     0x4                                                                                             
0010a0   5d19     SUBWF     0x19,0x0,0x1                                                                                    
0010a2   e103     BNZ       0x10aa                                                                                          
0010a4   0100     MOVLB     0x0                        usb_stat.RemoteWakeup = 1;                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
0010a6   81c2     BSF       0xc2,0x0,0x1                                                                                    
0010a8   d002     BRA       0x10ae                 else                                                                     C:\PIC5\PIC\system\usb\usb9\usb9.c
0010aa   0100     MOVLB     0x0                        usb_stat.RemoteWakeup = 0;                                           C:\PIC5\PIC\system\usb\usb9\usb9.c
0010ac   91c2     BCF       0xc2,0x0,0x1                                                                                    
                                               }//end if                                                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
0010ae   0104     MOVLB     0x4                if((SetupPkt.bFeature == ENDPOINT_HALT)&&                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
0010b0   511a     MOVF      0x1a,0x0,0x1                                                                                    
0010b2   e13a     BNZ       0x1128                (SetupPkt.Recipient == RCPT_EP)&&                                         C:\PIC5\PIC\system\usb\usb9\usb9.c
0010b4   5118     MOVF      0x18,0x0,0x1                                                                                    
0010b6   0b1f     ANDLW     0x1f                                                                                            
0010b8   0802     SUBLW     0x2                                                                                             
0010ba   e136     BNZ       0x1128                                                                                          
0010bc   511c     MOVF      0x1c,0x0,0x1          (SetupPkt.EPNum != 0))                                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
0010be   0b0f     ANDLW     0xf                                                                                             
0010c0   0900     IORLW     0x0                                                                                             
0010c2   e032     BZ        0x1128                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
0010c4   0100     MOVLB     0x0                    ctrl_trf_session_owner = MUID_USB9;                                      C:\PIC5\PIC\system\usb\usb9\usb9.c
0010c6   0e01     MOVLW     0x1                                                                                             
0010c8   6fba     MOVWF     0xba,0x1                                                                                        
                                                   /* Must do address calculation here */                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
0010ca   0104     MOVLB     0x4                    pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);         C:\PIC5\PIC\system\usb\usb9\usb9.c
0010cc   511c     MOVF      0x1c,0x0,0x1                                                                                    
0010ce   0b0f     ANDLW     0xf                                                                                             
0010d0   0d08     MULLW     0x8                                                                                             
0010d2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0010d4   6a11     CLRF      0x11,0x0                                                                                        
0010d6   0f00     ADDLW     0x0                                                                                             
0010d8   6e10     MOVWF     0x10,0x0                                                                                        
0010da   0e04     MOVLW     0x4                                                                                             
0010dc   2211     ADDWFC    0x11,0x1,0x0                                                                                    
0010de   511c     MOVF      0x1c,0x0,0x1                                                                                    
0010e0   0b80     ANDLW     0x80                                                                                            
0010e2   e001     BZ        0x10e6                                                                                          
0010e4   0e01     MOVLW     0x1                                                                                             
0010e6   0d04     MULLW     0x4                                                                                             
0010e8   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0010ea   0100     MOVLB     0x0                                                                                             
0010ec   2410     ADDWF     0x10,0x0,0x0                                                                                    
0010ee   6fbd     MOVWF     0xbd,0x1                                                                                        
0010f0   0e00     MOVLW     0x0                                                                                             
0010f2   2011     ADDWFC    0x11,0x0,0x0                                                                                    
0010f4   6fbe     MOVWF     0xbe,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
0010f6   0e03     MOVLW     0x3                    if(SetupPkt.bRequest == SET_FEATURE)                                     C:\PIC5\PIC\system\usb\usb9\usb9.c
0010f8   0104     MOVLB     0x4                                                                                             
0010fa   5d19     SUBWF     0x19,0x0,0x1                                                                                    
0010fc   e107     BNZ       0x110c                                                                                          
0010fe   0e84     MOVLW     0x84                       *pDst.bRam = _USIE|_BSTALL;                                          C:\PIC5\PIC\system\usb\usb9\usb9.c
001100   c0bd     MOVFF     0xbd,0xfe9                                                                                      
001102   ffe9                                                                                                               
001104   c0be     MOVFF     0xbe,0xfea                                                                                      
001106   ffea                                                                                                               
001108   6eef     MOVWF     0xef,0x0                                                                                        
00110a   d00e     BRA       0x1128                 else                                                                     C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                   {                                                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
00110c   af1c     BTFSS     0x1c,0x7,0x1               if(SetupPkt.EPDir == 1) // IN                                        C:\PIC5\PIC\system\usb\usb9\usb9.c
00110e   d006     BRA       0x111c                                                                                          
001110   c0bd     MOVFF     0xbd,0xfe9                     *pDst.bRam = _UCPU;                                              C:\PIC5\PIC\system\usb\usb9\usb9.c
001112   ffe9                                                                                                               
001114   c0be     MOVFF     0xbe,0xfea                                                                                      
001116   ffea                                                                                                               
001118   6aef     CLRF      0xef,0x0                                                                                        
00111a   d006     BRA       0x1128                     else                                                                 C:\PIC5\PIC\system\usb\usb9\usb9.c
00111c   0e88     MOVLW     0x88                           *pDst.bRam = _USIE|_DAT0|_DTSEN;                                 C:\PIC5\PIC\system\usb\usb9\usb9.c
00111e   c0bd     MOVFF     0xbd,0xfe9                                                                                      
001120   ffe9                                                                                                               
001122   c0be     MOVFF     0xbe,0xfea                                                                                      
001124   ffea                                                                                                               
001126   6eef     MOVWF     0xef,0x0                                                                                        
                                                   }//end if                                                                C:\PIC5\PIC\system\usb\usb9\usb9.c
                                               }//end if                                                                    C:\PIC5\PIC\system\usb\usb9\usb9.c
001128   0012     RETURN    0x0            }//end USBStdFeatureReqHandler                                                   C:\PIC5\PIC\system\usb\usb9\usb9.c
                                                                                                                            C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /** EOF usb9.c ***************************************************************/  C:\PIC5\PIC\system\usb\usb9\usb9.c
                                           /*********************************************************************           C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            *********************************************************************           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * FileName:        usbdsc.c                                                     C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Dependencies:    See INCLUDES section below                                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Processor:       PIC18                                                        C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Compiler:        C18 2.30.01+                                                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Company:         Microchip Technology, Inc.                                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Software License Agreement                                                    C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\PIC5\PIC\autofiles\usbdsc.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\PIC5\PIC\autofiles\usbdsc.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * civil liability for the breach of the terms and conditions of this            C:\PIC5\PIC\autofiles\usbdsc.c
                                            * license.                                                                      C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\PIC5\PIC\autofiles\usbdsc.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            ********************************************************************/           C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           /*********************************************************************           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * -usbdsc.c-                                                                    C:\PIC5\PIC\autofiles\usbdsc.c
                                            * This file contains the USB descriptor information. It is used                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * in conjunction with the usbdsc.h file. When a descriptor is added             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * or removed from the main configuration descriptor, i.e. CFG01,                C:\PIC5\PIC\autofiles\usbdsc.c
                                            * the user must also change the descriptor structure defined in                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * the usbdsc.h file. The structure is used to calculate the                     C:\PIC5\PIC\autofiles\usbdsc.c
                                            * descriptor size, i.e. sizeof(CFG01).                                          C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * A typical configuration descriptor consists of:                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * At least one configuration descriptor (USB_CFG_DSC)                           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * One or more interface descriptors (USB_INTF_DSC)                              C:\PIC5\PIC\autofiles\usbdsc.c
                                            * One or more endpoint descriptors (USB_EP_DSC)                                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Naming Convention:                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                            * To resolve ambiguity, the naming convention are as followed:                  C:\PIC5\PIC\autofiles\usbdsc.c
                                            * - USB_CFG_DSC type should be named cdxx, where xx is the                      C:\PIC5\PIC\autofiles\usbdsc.c
                                            *   configuration number. This number should match the actual                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            *   index value of this configuration.                                          C:\PIC5\PIC\autofiles\usbdsc.c
                                            * - USB_INTF_DSC type should be named i<yy>a<zz>, where yy is the               C:\PIC5\PIC\autofiles\usbdsc.c
                                            *   interface number and zz is the alternate interface number.                  C:\PIC5\PIC\autofiles\usbdsc.c
                                            * - USB_EP_DSC type should be named ep<##><d>_i<yy>a<zz>, where                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            *   ## is the endpoint number and d is the direction of transfer.               C:\PIC5\PIC\autofiles\usbdsc.c
                                            *   The interface name should also be listed as a suffix to identify            C:\PIC5\PIC\autofiles\usbdsc.c
                                            *   which interface does the endpoint belong to.                                C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Example:                                                                      C:\PIC5\PIC\autofiles\usbdsc.c
                                            * If a device has one configuration, two interfaces; interface 0                C:\PIC5\PIC\autofiles\usbdsc.c
                                            * has two endpoints (in and out), and interface 1 has one endpoint(in).         C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Then the CFG01 structure in the usbdsc.h should be:                           C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * #define CFG01 rom struct                            \                         C:\PIC5\PIC\autofiles\usbdsc.c
                                            * {   USB_CFG_DSC             cd01;                   \                         C:\PIC5\PIC\autofiles\usbdsc.c
                                            *     USB_INTF_DSC            i00a00;                 \                         C:\PIC5\PIC\autofiles\usbdsc.c
                                            *     USB_EP_DSC              ep01o_i00a00;           \                         C:\PIC5\PIC\autofiles\usbdsc.c
                                            *     USB_EP_DSC              ep01i_i00a00;           \                         C:\PIC5\PIC\autofiles\usbdsc.c
                                            *     USB_INTF_DSC            i01a00;                 \                         C:\PIC5\PIC\autofiles\usbdsc.c
                                            *     USB_EP_DSC              ep02i_i01a00;           \                         C:\PIC5\PIC\autofiles\usbdsc.c
                                            * } cfg01                                                                       C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Note the hierarchy of the descriptors above, it follows the USB               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * specification requirement. All endpoints belonging to an interface            C:\PIC5\PIC\autofiles\usbdsc.c
                                            * should be listed immediately after that interface.                            C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Filling in the descriptor values in the usbdsc.c file:                        C:\PIC5\PIC\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Most items should be self-explanatory, however, a few will be                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * explained for clarification.                                                  C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * [Configuration Descriptor(USB_CFG_DSC)]                                       C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The configuration attribute must always have the _DEFAULT                     C:\PIC5\PIC\autofiles\usbdsc.c
                                            * definition at the minimum. Additional options can be ORed                     C:\PIC5\PIC\autofiles\usbdsc.c
                                            * to the _DEFAULT attribute. Available options are _SELF and _RWU.              C:\PIC5\PIC\autofiles\usbdsc.c
                                            * These definitions are defined in the usbdefs_std_dsc.h file. The              C:\PIC5\PIC\autofiles\usbdsc.c
                                            * _SELF tells the USB host that this device is self-powered. The                C:\PIC5\PIC\autofiles\usbdsc.c
                                            * _RWU tells the USB host that this device supports Remote Wakeup.              C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * [Endpoint Descriptor(USB_EP_DSC)]                                             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Assume the following example:                                                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * sizeof(USB_EP_DSC),DSC_EP,_EP01_OUT,_BULK,64,0x00                             C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The first two parameters are self-explanatory. They specify the               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * length of this endpoint descriptor (7) and the descriptor type.               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The next parameter identifies the endpoint, the definitions are               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * defined in usbdefs_std_dsc.h and has the following naming                     C:\PIC5\PIC\autofiles\usbdsc.c
                                            * convention:                                                                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            * _EP<##>_<dir>                                                                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * where ## is the endpoint number and dir is the direction of                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            * transfer. The dir has the value of either 'OUT' or 'IN'.                      C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The next parameter identifies the type of the endpoint. Available             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * options are _BULK, _INT, _ISO, and _CTRL. The _CTRL is not                    C:\PIC5\PIC\autofiles\usbdsc.c
                                            * typically used because the default control transfer endpoint is               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * not defined in the USB descriptors. When _ISO option is used,                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * addition options can be ORed to _ISO. Example:                                C:\PIC5\PIC\autofiles\usbdsc.c
                                            * _ISO|_AD|_FE                                                                  C:\PIC5\PIC\autofiles\usbdsc.c
                                            * This describes the endpoint as an isochronous pipe with adaptive              C:\PIC5\PIC\autofiles\usbdsc.c
                                            * and feedback attributes. See usbdefs_std_dsc.h and the USB                    C:\PIC5\PIC\autofiles\usbdsc.c
                                            * specification for details. The next parameter defines the size of             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * the endpoint. The last parameter in the polling interval.                     C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Adding a USB String                                                           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * A string descriptor array should have the following format:                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * rom struct{byte bLength;byte bDscType;word string[size];}sdxxx={              C:\PIC5\PIC\autofiles\usbdsc.c
                                            * sizeof(sdxxx),DSC_STR,<text>};                                                C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The above structure provides a means for the C compiler to                    C:\PIC5\PIC\autofiles\usbdsc.c
                                            * calculate the length of string descriptor sdxxx, where xxx is the             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * index number. The first two bytes of the descriptor are descriptor            C:\PIC5\PIC\autofiles\usbdsc.c
                                            * length and type. The rest <text> are string texts which must be               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * in the unicode format. The unicode format is achieved by declaring            C:\PIC5\PIC\autofiles\usbdsc.c
                                            * each character as a word type. The whole text string is declared              C:\PIC5\PIC\autofiles\usbdsc.c
                                            * as a word array with the number of characters equals to <size>.               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * <size> has to be manually counted and entered into the array                  C:\PIC5\PIC\autofiles\usbdsc.c
                                            * declaration. Let's study this through an example:                             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * if the string is "USB" , then the string descriptor should be:                C:\PIC5\PIC\autofiles\usbdsc.c
                                            * (Using index 02)                                                              C:\PIC5\PIC\autofiles\usbdsc.c
                                            * rom struct{byte bLength;byte bDscType;word string[3];}sd002={                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * sizeof(sd002),DSC_STR,'U','S','B'};                                           C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * A USB project may have multiple strings and the firmware supports             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * the management of multiple strings through a look-up table.                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The look-up table is defined as:                                              C:\PIC5\PIC\autofiles\usbdsc.c
                                            * rom const unsigned char *rom USB_SD_Ptr[]={&sd000,&sd001,&sd002};             C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The above declaration has 3 strings, sd000, sd001, and sd002.                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Strings can be removed or added. sd000 is a specialized string                C:\PIC5\PIC\autofiles\usbdsc.c
                                            * descriptor. It defines the language code, usually this is                     C:\PIC5\PIC\autofiles\usbdsc.c
                                            * US English (0x0409). The index of the string must match the index             C:\PIC5\PIC\autofiles\usbdsc.c
                                            * position of the USB_SD_Ptr array, &sd000 must be in position                  C:\PIC5\PIC\autofiles\usbdsc.c
                                            * USB_SD_Ptr[0], &sd001 must be in position USB_SD_Ptr[1] and so on.            C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The look-up table USB_SD_Ptr is used by the get string handler                C:\PIC5\PIC\autofiles\usbdsc.c
                                            * function in usb9.c.                                                           C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * -------------------------------------------------------------------           C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The look-up table scheme also applies to the configuration                    C:\PIC5\PIC\autofiles\usbdsc.c
                                            * descriptor. A USB device may have multiple configuration                      C:\PIC5\PIC\autofiles\usbdsc.c
                                            * descriptors, i.e. CFG01, CFG02, etc. To add a configuration                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            * descriptor, user must implement a structure similar to CFG01.                 C:\PIC5\PIC\autofiles\usbdsc.c
                                            * The next step is to add the configuration descriptor name, i.e.               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * cfg01, cfg02,.., to the look-up table USB_CD_Ptr. USB_CD_Ptr[0]               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * is a dummy place holder since configuration 0 is the un-configured            C:\PIC5\PIC\autofiles\usbdsc.c
                                            * state according to the definition in the USB specification.                   C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            ********************************************************************/           C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           /*********************************************************************           C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Descriptor specific type definitions are defined in:                          C:\PIC5\PIC\autofiles\usbdsc.c
                                            * system\usb\usbdefs\usbdefs_std_dsc.h                                          C:\PIC5\PIC\autofiles\usbdsc.c
                                            *                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                            * Configuration information is defined in:                                      C:\PIC5\PIC\autofiles\usbdsc.c
                                            * autofiles\usbcfg.h                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                            ********************************************************************/           C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           /** I N C L U D E S *************************************************/           C:\PIC5\PIC\autofiles\usbdsc.c
                                           #include "system\typedefs.h"                                                     C:\PIC5\PIC\autofiles\usbdsc.c
                                           #include "system\usb\usb.h"                                                      C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           /** C O N S T A N T S ************************************************/          C:\PIC5\PIC\autofiles\usbdsc.c
                                           #pragma romdata                                                                  C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           /* Device Descriptor */                                                          C:\PIC5\PIC\autofiles\usbdsc.c
                                           rom USB_DEV_DSC device_dsc=                                                      C:\PIC5\PIC\autofiles\usbdsc.c
                                           {                                                                                C:\PIC5\PIC\autofiles\usbdsc.c
                                               sizeof(USB_DEV_DSC),    // Size of this descriptor in bytes                  C:\PIC5\PIC\autofiles\usbdsc.c
                                               DSC_DEV,                // DEVICE descriptor type                            C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x0200,                 // USB Spec Release Number in BCD format             C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x00,                   // Class Code                                        C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x00,                   // Subclass code                                     C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x00,                   // Protocol code                                     C:\PIC5\PIC\autofiles\usbdsc.c
                                               EP0_BUFF_SIZE,          // Max packet size for EP0, see usbcfg.h             C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x04D8,                 // Vendor ID                                         C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x000C,                 // Product ID: PICDEM FS USB (DEMO Mode)             C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x0000,                 // Device release number in BCD format               C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x01,                   // Manufacturer string index                         C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x02,                   // Product string index                              C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x00,                   // Device serial number string index                 C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x01                    // Number of possible configurations                 C:\PIC5\PIC\autofiles\usbdsc.c
                                           };                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           /* Configuration 1 Descriptor */                                                 C:\PIC5\PIC\autofiles\usbdsc.c
                                           CFG01=                                                                           C:\PIC5\PIC\autofiles\usbdsc.c
                                           {                                                                                C:\PIC5\PIC\autofiles\usbdsc.c
                                               /* Configuration Descriptor */                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                               sizeof(USB_CFG_DSC),    // Size of this descriptor in bytes                  C:\PIC5\PIC\autofiles\usbdsc.c
                                               DSC_CFG,                // CONFIGURATION descriptor type                     C:\PIC5\PIC\autofiles\usbdsc.c
                                               sizeof(cfg01),          // Total length of data for this cfg                 C:\PIC5\PIC\autofiles\usbdsc.c
                                               1,                      // Number of interfaces in this cfg                  C:\PIC5\PIC\autofiles\usbdsc.c
                                               1,                      // Index value of this configuration                 C:\PIC5\PIC\autofiles\usbdsc.c
                                               0,                      // Configuration string index                        C:\PIC5\PIC\autofiles\usbdsc.c
                                               _DEFAULT,               // Attributes, see usbdefs_std_dsc.h                 C:\PIC5\PIC\autofiles\usbdsc.c
                                               50,                     // Max power consumption (2X mA)                     C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                               /* Interface Descriptor */                                                   C:\PIC5\PIC\autofiles\usbdsc.c
                                               sizeof(USB_INTF_DSC),   // Size of this descriptor in bytes                  C:\PIC5\PIC\autofiles\usbdsc.c
                                               DSC_INTF,               // INTERFACE descriptor type                         C:\PIC5\PIC\autofiles\usbdsc.c
                                               0,                      // Interface Number                                  C:\PIC5\PIC\autofiles\usbdsc.c
                                               0,                      // Alternate Setting Number                          C:\PIC5\PIC\autofiles\usbdsc.c
                                               2,                      // Number of endpoints in this intf                  C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x00,                   // Class code                                        C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x00,                   // Subclass code                                     C:\PIC5\PIC\autofiles\usbdsc.c
                                               0x00,                   // Protocol code                                     C:\PIC5\PIC\autofiles\usbdsc.c
                                               0,                      // Interface string index                            C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                               /* Endpoint Descriptors */                                                   C:\PIC5\PIC\autofiles\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP01_OUT,_INT,USBGEN_EP_SIZE,32,                  C:\PIC5\PIC\autofiles\usbdsc.c
                                               sizeof(USB_EP_DSC),DSC_EP,_EP01_IN,_INT,USBGEN_EP_SIZE,32                    C:\PIC5\PIC\autofiles\usbdsc.c
                                           };                                                                               C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[1];}sd000={                    C:\PIC5\PIC\autofiles\usbdsc.c
                                           sizeof(sd000),DSC_STR,0x0409};                                                   C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[25];}sd001={                   C:\PIC5\PIC\autofiles\usbdsc.c
                                           sizeof(sd001),DSC_STR,                                                           C:\PIC5\PIC\autofiles\usbdsc.c
                                           'M','i','c','r','o','c','h','i','p',' ',                                         C:\PIC5\PIC\autofiles\usbdsc.c
                                           'T','e','c','h','n','o','l','o','g','y',' ','I','n','c','.'};                    C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           rom struct{byte bLength;byte bDscType;word string[33];}sd002={                   C:\PIC5\PIC\autofiles\usbdsc.c
                                           sizeof(sd002),DSC_STR,                                                           C:\PIC5\PIC\autofiles\usbdsc.c
                                           'P','I','C','D','E','M',' ','F','S',' ','U','S','B',' ',                         C:\PIC5\PIC\autofiles\usbdsc.c
                                           'D','e','m','o',' ','B','o','a','r','d',' ','(','C',')',                         C:\PIC5\PIC\autofiles\usbdsc.c
                                           ' ','2','0','0','4'};                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           rom const unsigned char *rom USB_CD_Ptr[]={&cfg01,&cfg01};                       C:\PIC5\PIC\autofiles\usbdsc.c
                                           rom const unsigned char *rom USB_SD_Ptr[]={&sd000,&sd001,&sd002};                C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           #pragma code                                                                     C:\PIC5\PIC\autofiles\usbdsc.c
                                                                                                                            C:\PIC5\PIC\autofiles\usbdsc.c
                                           /** EOF usbdsc.c ****************************************************/           C:\PIC5\PIC\autofiles\usbdsc.c
                                           /*********************************************************************           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *********************************************************************           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * FileName:        usbctrltrf.c                                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Dependencies:    See INCLUDES section below                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Processor:       PIC18                                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Compiler:        C18 2.30.01+                                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Company:         Microchip Technology, Inc.                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Software License Agreement                                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * civil liability for the breach of the terms and conditions of this            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * license.                                                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Author               Date        Comment                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            ********************************************************************/           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /** I N C L U D E S **********************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           #include <p18cxxx.h>                                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           #include "system\typedefs.h"                                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           #include "system\usb\usb.h"                                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /** V A R I A B L E S ********************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           #pragma udata                                                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           byte ctrl_trf_state;                // Control Transfer State                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           byte ctrl_trf_session_owner;        // Current transfer session owner            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           POINTER pSrc;                       // Data source pointer                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           POINTER pDst;                       // Data destination pointer                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           WORD wCount;                        // Data counter                              C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfSetupHandler(void);                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfOutHandler(void);                                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfInHandler(void);                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           #pragma code                                                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlEPService(void)                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    USTAT is loaded with a valid endpoint address.               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        USBCtrlEPService checks for three transaction types that     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  it knows how to service and services them:                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  1. EP0 SETUP                                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  2. EP0 OUT                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  3. EP0 IN                                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  It ignores all other types (i.e. EP1, EP2, etc.)             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlEPService(void)                                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00112a   506c     MOVF      0x6c,0x0,0x0       if(USTAT == EP00_OUT)                                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00112c   e002     BZ        0x1132                                                                                          
00112e   0e00     MOVLW     0x0                                                                                             
001130   d001     BRA       0x1134                                                                                          
001132   0e01     MOVLW     0x1                                                                                             
001134   0900     IORLW     0x0                                                                                             
001136   e00b     BZ        0x114e                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001138   0104     MOVLB     0x4                    if(ep0Bo.Stat.PID == SETUP_TOKEN)           // EP0 SETUP                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00113a   5100     MOVF      0x0,0x0,0x1                                                                                     
00113c   0b3c     ANDLW     0x3c                                                                                            
00113e   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
001140   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
001142   080d     SUBLW     0xd                                                                                             
001144   e102     BNZ       0x114a                                                                                          
001146   d80c     RCALL     0x1160                     USBCtrlTrfSetupHandler();                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001148   d001     BRA       0x114c                 else                                        // EP0 OUT                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00114a   d81c     RCALL     0x1184                     USBCtrlTrfOutHandler();                                              C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               }                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00114c   d008     BRA       0x115e             else if(USTAT == EP00_IN)                       // EP0 IN                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00114e   506c     MOVF      0x6c,0x0,0x0                                                                                    
001150   e002     BZ        0x1156                                                                                          
001152   0e00     MOVLW     0x0                                                                                             
001154   d001     BRA       0x1158                                                                                          
001156   0e01     MOVLW     0x1                                                                                             
001158   0904     IORLW     0x4                                                                                             
00115a   e001     BZ        0x115e                                                                                          
00115c   d823     RCALL     0x11a4                 USBCtrlTrfInHandler();                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00115e   0012     RETURN    0x0            }//end USBCtrlEPService                                                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfSetupHandler(void)                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    SetupPkt buffer is loaded with valid USB Setup Data          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine is a task dispatcher and has 3 stages.          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  1. It initializes the control transfer state machine.        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  2. It calls on each of the module that may know how to       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     service the Setup Request from the host.                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     Module Example: USB9, HID, CDC, MSD, ...                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     As new classes are added, ClassReqHandler table in        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     usbdsc.c should be updated to call all available          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     class handlers.                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  3. Once each of the modules has had a chance to check if     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     it is responsible for servicing the request, stage 3      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     then checks direction of the transfer to determine how    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     to prepare EP0 for the control transfer.                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     Refer to USBCtrlEPServiceComplete() for more details.     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            Microchip USB Firmware has three different states for        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  the control transfer state machine:                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  1. WAIT_SETUP                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  2. CTRL_TRF_TX                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  3. CTRL_TRF_RX                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  Refer to firmware manual to find out how one state           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  is transitioned to another.                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  A Control Transfer is composed of many USB transactions.     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  When transferring data over multiple transactions,           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  it is important to keep track of data source, data           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  destination, and data count. These three parameters are      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  stored in pSrc,pDst, and wCount. A flag is used to           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  note if the data source is from ROM or RAM.                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001160   cfd9     MOVFF     0xfd9,0xfe6    void USBCtrlTrfSetupHandler(void)                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001162   ffe6                                                                                                               
001164   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001166   ffd9                                                                                                               
001168   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               byte i;                                                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Stage 1 */                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00116a   0100     MOVLB     0x0                ctrl_trf_state = WAIT_SETUP;                                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00116c   6bb9     CLRF      0xb9,0x1                                                                                        
00116e   6bba     CLRF      0xba,0x1           ctrl_trf_session_owner = MUID_NULL;     // Set owner to NULL                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001170   6bbf     CLRF      0xbf,0x1           wCount._word = 0;                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001172   6bc0     CLRF      0xc0,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Stage 2 */                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001174   ec0f     CALL      0xe1e,0x0          USBCheckStdRequest();                   // See system\usb9\usb9.c            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001176   f007                                                                                                               
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Modifiable Section */                                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               // Insert other USB Device Class Request Handlers here                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /* End Modifiable Section */                                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /* Stage 3 */                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001178   d8dd     RCALL     0x1334             USBCtrlEPServiceComplete();                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00117a   52e5     MOVF      0xe5,0x1,0x0   }//end USBCtrlTrfSetupHandler                                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00117c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00117e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001180   ffd9                                                                                                               
001182   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfOutHandler(void)                              C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine handles an OUT transaction according to         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  which control transfer state is currently active.            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            Note that if the the control transfer was from               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  host to device, the session owner should be notified         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  at the end of each OUT transaction to service the            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  received data.                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfOutHandler(void)                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001184   0e02     MOVLW     0x2                if(ctrl_trf_state == CTRL_TRF_RX)                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001186   0100     MOVLB     0x0                                                                                             
001188   5db9     SUBWF     0xb9,0x0,0x1                                                                                    
00118a   e10a     BNZ       0x11a0                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00118c   d896     RCALL     0x12ba                 USBCtrlTrfRxService();                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                   /*                                                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                    * Don't have to worry about overwriting _KEEP bit                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                    * because if _KEEP was set, TRNIF would not have been                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                    * generated in the first place.                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                    */                                                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00118e   0104     MOVLB     0x4                    if(ep0Bo.Stat.DTS == 0)                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001190   bd00     BTFSC     0x0,0x6,0x1                                                                                     
001192   d003     BRA       0x119a                                                                                          
001194   0ec8     MOVLW     0xc8                       ep0Bo.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001196   6f00     MOVWF     0x0,0x1                                                                                         
001198   d002     BRA       0x119e                 else                                                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00119a   0e88     MOVLW     0x88                       ep0Bo.Stat._byte = _USIE|_DAT0|_DTSEN;                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00119c   6f00     MOVWF     0x0,0x1                                                                                         
                                               }                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00119e   d001     BRA       0x11a2             else    // CTRL_TRF_TX                                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011a0   d90f     RCALL     0x13c0                 USBPrepareForNextSetupTrf();                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011a2   0012     RETURN    0x0            }//end USBCtrlTrfOutHandler                                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfInHandler(void)                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine handles an IN transaction according to          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  which control transfer state is currently active.            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            A Set Address Request must not change the acutal address     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  of the device until the completion of the control            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transfer. The end of the control transfer for Set Address    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  Request is an IN transaction. Therefore it is necessary      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  to service this unique situation when the condition is       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  right. Macro mUSBCheckAdrPendingState is defined in          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  usb9.h and its function is to specifically service this      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  event.                                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlTrfInHandler(void)                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011a4   0e04     MOVLW     0x4                mUSBCheckAdrPendingState();         // Must check if in ADR_PENDING_STATE    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011a6   0100     MOVLB     0x0                                                                                             
0011a8   5dc1     SUBWF     0xc1,0x0,0x1                                                                                    
0011aa   e10a     BNZ       0x11c0                                                                                          
0011ac   c41a     MOVFF     0x41a,0xf6e                                                                                     
0011ae   ff6e                                                                                                               
0011b0   506e     MOVF      0x6e,0x0,0x0                                                                                    
0011b2   0800     SUBLW     0x0                                                                                             
0011b4   e203     BC        0x11bc                                                                                          
0011b6   0e05     MOVLW     0x5                                                                                             
0011b8   6fc1     MOVWF     0xc1,0x1                                                                                        
0011ba   d002     BRA       0x11c0                                                                                          
0011bc   0e03     MOVLW     0x3                                                                                             
0011be   6fc1     MOVWF     0xc1,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011c0   0100     MOVLB     0x0                if(ctrl_trf_state == CTRL_TRF_TX)                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011c2   05b9     DECF      0xb9,0x0,0x1                                                                                    
0011c4   e10a     BNZ       0x11da                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011c6   d80b     RCALL     0x11de                 USBCtrlTrfTxService();                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011c8   0104     MOVLB     0x4                    if(ep0Bi.Stat.DTS == 0)                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011ca   bd04     BTFSC     0x4,0x6,0x1                                                                                     
0011cc   d003     BRA       0x11d4                                                                                          
0011ce   0ec8     MOVLW     0xc8                       ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011d0   6f04     MOVWF     0x4,0x1                                                                                         
0011d2   d002     BRA       0x11d8                 else                                                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011d4   0e88     MOVLW     0x88                       ep0Bi.Stat._byte = _USIE|_DAT0|_DTSEN;                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011d6   6f04     MOVWF     0x4,0x1                                                                                         
                                               }                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011d8   d001     BRA       0x11dc             else // CTRL_TRF_RX                                                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011da   d8f2     RCALL     0x13c0                 USBPrepareForNextSetupTrf();                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011dc   0012     RETURN    0x0            }//end USBCtrlTrfInHandler                                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfTxService(void)                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    pSrc, wCount, and usb_stat.ctrl_trf_mem are setup properly.  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine should be called from only two places.          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  One from USBCtrlEPServiceComplete() and one from             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  USBCtrlTrfInHandler(). It takes care of managing a           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transfer over multiple USB transactions.                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            This routine works with isochronous endpoint larger than     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  256 bytes and is shown here as an example of how to deal     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  with BC9 and BC8. In reality, a control endpoint can never   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  be larger than 64 bytes.                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011de   cfd9     MOVFF     0xfd9,0xfe6    void USBCtrlTrfTxService(void)                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011e0   ffe6                                                                                                               
0011e2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0011e4   ffd9                                                                                                               
0011e6   0e02     MOVLW     0x2                                                                                             
0011e8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               WORD byte_to_send;                                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                * First, have to figure out how many byte of data to send.                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011ea   0100     MOVLB     0x0                if(wCount._word < EP0_BUFF_SIZE)                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011ec   0e08     MOVLW     0x8                                                                                             
0011ee   5dbf     SUBWF     0xbf,0x0,0x1                                                                                    
0011f0   0e00     MOVLW     0x0                                                                                             
0011f2   59c0     SUBWFB    0xc0,0x0,0x1                                                                                    
0011f4   e205     BC        0x1200                                                                                          
0011f6   c0bf     MOVFF     0xbf,0xfde             byte_to_send._word = wCount._word;                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0011f8   ffde                                                                                                               
0011fa   c0c0     MOVFF     0xc0,0xfdd                                                                                      
0011fc   ffdd                                                                                                               
0011fe   d003     BRA       0x1206             else                                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001200   0e08     MOVLW     0x8                    byte_to_send._word = EP0_BUFF_SIZE;                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001202   6ede     MOVWF     0xde,0x0                                                                                        
001204   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                * Next, load the number of bytes to send to BC9..0 in buffer descriptor     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001206   0104     MOVLB     0x4                ep0Bi.Stat.BC9 = 0;                                                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001208   9304     BCF       0x4,0x1,0x1                                                                                     
00120a   9104     BCF       0x4,0x0,0x1        ep0Bi.Stat.BC8 = 0;                                                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00120c   0e01     MOVLW     0x1                ep0Bi.Stat._byte |= MSB(byte_to_send);                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00120e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001210   1304     IORWF     0x4,0x1,0x1                                                                                     
001212   cfdf     MOVFF     0xfdf,0x405        ep0Bi.Cnt = LSB(byte_to_send);                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001214   f405                                                                                                               
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                * Subtract the number of bytes just about to be sent from the total.        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001216   0e00     MOVLW     0x0                wCount._word = wCount._word - byte_to_send._word;                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001218   50db     MOVF      0xdb,0x0,0x0                                                                                    
00121a   0100     MOVLB     0x0                                                                                             
00121c   5fbf     SUBWF     0xbf,0x1,0x1                                                                                    
00121e   0e01     MOVLW     0x1                                                                                             
001220   50db     MOVF      0xdb,0x0,0x0                                                                                    
001222   5bc0     SUBWFB    0xc0,0x1,0x1                                                                                    
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001224   0e20     MOVLW     0x20               pDst.bRam = (byte*)&CtrlTrfData;        // Set destination pointer           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001226   6fbd     MOVWF     0xbd,0x1                                                                                        
001228   0e04     MOVLW     0x4                                                                                             
00122a   6fbe     MOVWF     0xbe,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00122c   0100     MOVLB     0x0                if(usb_stat.ctrl_trf_mem == _ROM)       // Determine type of memory source   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00122e   a3c2     BTFSS     0xc2,0x1,0x1                                                                                    
001230   d01e     BRA       0x126e                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001232   cfd9     MOVFF     0xfd9,0xfe9            while(byte_to_send._word)                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001234   ffe9                                                                                                               
001236   cfda     MOVFF     0xfda,0xfea                                                                                     
001238   ffea                                                                                                               
00123a   50ee     MOVF      0xee,0x0,0x0                                                                                    
00123c   10ed     IORWF     0xed,0x0,0x0                                                                                    
00123e   e016     BZ        0x126c                                                                                          
00126a   d7e3     BRA       0x1232                                                                                          
                                                   {                                                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001240   c0bb     MOVFF     0xbb,0xff6                 *pDst.bRam = *pSrc.bRom;                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001242   fff6                                                                                                               
001244   c0bc     MOVFF     0xbc,0xff7                                                                                      
001246   fff7                                                                                                               
001248   0008     TBLRD                                                                                                     
00124a   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00124c   c0bd     MOVFF     0xbd,0xfe9                                                                                      
00124e   ffe9                                                                                                               
001250   c0be     MOVFF     0xbe,0xfea                                                                                      
001252   ffea                                                                                                               
001254   6eef     MOVWF     0xef,0x0                                                                                        
001256   0100     MOVLB     0x0                        pDst.bRam++;                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001258   2bbd     INCF      0xbd,0x1,0x1                                                                                    
00125a   0e00     MOVLW     0x0                                                                                             
00125c   23be     ADDWFC    0xbe,0x1,0x1                                                                                    
00125e   2bbb     INCF      0xbb,0x1,0x1               pSrc.bRom++;                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001260   23bc     ADDWFC    0xbc,0x1,0x1                                                                                    
001262   06df     DECF      0xdf,0x1,0x0               byte_to_send._word--;                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001264   0e01     MOVLW     0x1                                                                                             
001266   e201     BC        0x126a                                                                                          
001268   06db     DECF      0xdb,0x1,0x0                                                                                    
                                                   }//end while(byte_to_send._word)                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               }                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00126c   d01c     BRA       0x12a6             else // RAM                                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               {                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00126e   cfd9     MOVFF     0xfd9,0xfe9            while(byte_to_send._word)                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001270   ffe9                                                                                                               
001272   cfda     MOVFF     0xfda,0xfea                                                                                     
001274   ffea                                                                                                               
001276   50ee     MOVF      0xee,0x0,0x0                                                                                    
001278   10ed     IORWF     0xed,0x0,0x0                                                                                    
00127a   e015     BZ        0x12a6                                                                                          
0012a4   d7e4     BRA       0x126e                                                                                          
                                                   {                                                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00127c   c0bb     MOVFF     0xbb,0xfe9                 *pDst.bRam = *pSrc.bRam;                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00127e   ffe9                                                                                                               
001280   c0bc     MOVFF     0xbc,0xfea                                                                                      
001282   ffea                                                                                                               
001284   50ef     MOVF      0xef,0x0,0x0                                                                                    
001286   c0bd     MOVFF     0xbd,0xfe9                                                                                      
001288   ffe9                                                                                                               
00128a   c0be     MOVFF     0xbe,0xfea                                                                                      
00128c   ffea                                                                                                               
00128e   6eef     MOVWF     0xef,0x0                                                                                        
001290   0100     MOVLB     0x0                        pDst.bRam++;                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001292   2bbd     INCF      0xbd,0x1,0x1                                                                                    
001294   0e00     MOVLW     0x0                                                                                             
001296   23be     ADDWFC    0xbe,0x1,0x1                                                                                    
001298   2bbb     INCF      0xbb,0x1,0x1               pSrc.bRam++;                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00129a   23bc     ADDWFC    0xbc,0x1,0x1                                                                                    
00129c   06df     DECF      0xdf,0x1,0x0               byte_to_send._word--;                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00129e   0e01     MOVLW     0x1                                                                                             
0012a0   e201     BC        0x12a4                                                                                          
0012a2   06db     DECF      0xdb,0x1,0x0                                                                                    
                                                   }//end while(byte_to_send._word)                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               }//end if(usb_stat.ctrl_trf_mem == _ROM)                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012a6   0e02     MOVLW     0x2            }//end USBCtrlTrfTxService                                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012a8   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0012aa   e202     BC        0x12b0                                                                                          
0012ac   6ae1     CLRF      0xe1,0x0                                                                                        
0012ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0012b0   6ee1     MOVWF     0xe1,0x0                                                                                        
0012b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0012b4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0012b6   ffd9                                                                                                               
0012b8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlTrfRxService(void)                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    pDst and wCount are setup properly.                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  pSrc is always &CtrlTrfData                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  usb_stat.ctrl_trf_mem is always _RAM.                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  wCount should be set to 0 at the start of each control       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transfer.                                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        *** This routine is only partially complete. Check for       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  new version of the firmware.                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012ba   cfd9     MOVFF     0xfd9,0xfe6    void USBCtrlTrfRxService(void)                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012bc   ffe6                                                                                                               
0012be   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0012c0   ffd9                                                                                                               
0012c2   0e02     MOVLW     0x2                                                                                             
0012c4   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               WORD byte_to_read;                                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012c6   0e03     MOVLW     0x3                MSB(byte_to_read) = 0x03 & ep0Bo.Stat._byte;    // Filter out last 2 bits    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012c8   0104     MOVLB     0x4                                                                                             
0012ca   1500     ANDWF     0x0,0x0,0x1                                                                                     
0012cc   6ee7     MOVWF     0xe7,0x0                                                                                        
0012ce   0e01     MOVLW     0x1                                                                                             
0012d0   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0012d2   ffdb                                                                                                               
0012d4   c401     MOVFF     0x401,0xfdf        LSB(byte_to_read) = ep0Bo.Cnt;                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012d6   ffdf                                                                                                               
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                * Accumulate total number of bytes read                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012d8   50de     MOVF      0xde,0x0,0x0       wCount._word = wCount._word + byte_to_read._word;                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012da   0100     MOVLB     0x0                                                                                             
0012dc   27bf     ADDWF     0xbf,0x1,0x1                                                                                    
0012de   50dd     MOVF      0xdd,0x0,0x0                                                                                    
0012e0   23c0     ADDWFC    0xc0,0x1,0x1                                                                                    
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012e2   0e20     MOVLW     0x20               pSrc.bRam = (byte*)&CtrlTrfData;                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012e4   6fbb     MOVWF     0xbb,0x1                                                                                        
0012e6   0e04     MOVLW     0x4                                                                                             
0012e8   6fbc     MOVWF     0xbc,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012ea   cfd9     MOVFF     0xfd9,0xfe9        while(byte_to_read._word)                                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012ec   ffe9                                                                                                               
0012ee   cfda     MOVFF     0xfda,0xfea                                                                                     
0012f0   ffea                                                                                                               
0012f2   50ee     MOVF      0xee,0x0,0x0                                                                                    
0012f4   10ed     IORWF     0xed,0x0,0x0                                                                                    
0012f6   e014     BZ        0x1320                                                                                          
00131e   d7e5     BRA       0x12ea                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012f8   c0bb     MOVFF     0xbb,0xfe9             *pDst.bRam = *pSrc.bRam;                                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0012fa   ffe9                                                                                                               
0012fc   c0bc     MOVFF     0xbc,0xfea                                                                                      
0012fe   ffea                                                                                                               
001300   50ef     MOVF      0xef,0x0,0x0                                                                                    
001302   c0bd     MOVFF     0xbd,0xfe9                                                                                      
001304   ffe9                                                                                                               
001306   c0be     MOVFF     0xbe,0xfea                                                                                      
001308   ffea                                                                                                               
00130a   6eef     MOVWF     0xef,0x0                                                                                        
00130c   2bbd     INCF      0xbd,0x1,0x1           pDst.bRam++;                                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00130e   0e00     MOVLW     0x0                                                                                             
001310   23be     ADDWFC    0xbe,0x1,0x1                                                                                    
001312   2bbb     INCF      0xbb,0x1,0x1           pSrc.bRam++;                                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001314   23bc     ADDWFC    0xbc,0x1,0x1                                                                                    
001316   06df     DECF      0xdf,0x1,0x0           byte_to_read._word--;                                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001318   0e01     MOVLW     0x1                                                                                             
00131a   e201     BC        0x131e                                                                                          
00131c   06db     DECF      0xdb,0x1,0x0                                                                                    
                                               }//end while(byte_to_read._word)                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001320   0e02     MOVLW     0x2            }//end USBCtrlTrfRxService                                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001322   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
001324   e202     BC        0x132a                                                                                          
001326   6ae1     CLRF      0xe1,0x0                                                                                        
001328   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00132a   6ee1     MOVWF     0xe1,0x0                                                                                        
00132c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00132e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001330   ffd9                                                                                                               
001332   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBCtrlEPServiceComplete(void)                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        This routine wrap up the ramaining tasks in servicing        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  a Setup Request. Its main task is to set the endpoint        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  controls appropriately for a given situation. See code       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  below.                                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  There are three main scenarios:                              C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  a) There was no handler for the Request, in this case        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     a STALL should be sent out.                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  b) The host has requested a read control transfer,           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     endpoints are required to be setup in a specific way.     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  c) The host has requested a write control transfer, or       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     a control data stage is not required, endpoints are       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                     required to be setup in a specific way.                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  Packet processing is resumed by clearing PKTDIS bit.         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBCtrlEPServiceComplete(void)                                              C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001334   0100     MOVLB     0x0                if(ctrl_trf_session_owner == MUID_NULL)                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001336   51ba     MOVF      0xba,0x0,0x1                                                                                    
001338   e10c     BNZ       0x1352                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                   /*                                                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                    * If no one knows how to service this request then stall.               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                    * Must also prepare EP0 to receive the next SETUP transaction.          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                    */                                                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00133a   0104     MOVLB     0x4                    ep0Bo.Cnt = EP0_BUFF_SIZE;                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00133c   0e08     MOVLW     0x8                                                                                             
00133e   6f01     MOVWF     0x1,0x1                                                                                         
001340   0e18     MOVLW     0x18                   ep0Bo.ADR = (byte*)&SetupPkt;                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001342   6f02     MOVWF     0x2,0x1                                                                                         
001344   0e04     MOVLW     0x4                                                                                             
001346   6f03     MOVWF     0x3,0x1                                                                                         
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001348   0e84     MOVLW     0x84                   ep0Bo.Stat._byte = _USIE|_BSTALL;                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00134a   6f00     MOVWF     0x0,0x1                                                                                         
00134c   0104     MOVLB     0x4                    ep0Bi.Stat._byte = _USIE|_BSTALL;                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00134e   6f04     MOVWF     0x4,0x1                                                                                         
                                               }                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001350   d035     BRA       0x13bc             else    // A module has claimed ownership of the control transfer session.   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               {                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001352   0104     MOVLB     0x4                    if(SetupPkt.DataDir == DEV_TO_HOST)                                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001354   af18     BTFSS     0x18,0x7,0x1                                                                                    
001356   d022     BRA       0x139c                                                                                          
                                                   {                                                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001358   0100     MOVLB     0x0                        if(SetupPkt.wLength < wCount._word)                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00135a   51bf     MOVF      0xbf,0x0,0x1                                                                                    
00135c   0104     MOVLB     0x4                                                                                             
00135e   5d1e     SUBWF     0x1e,0x0,0x1                                                                                    
001360   0100     MOVLB     0x0                                                                                             
001362   51c0     MOVF      0xc0,0x0,0x1                                                                                    
001364   0104     MOVLB     0x4                                                                                             
001366   591f     SUBWFB    0x1f,0x0,0x1                                                                                    
001368   e204     BC        0x1372                                                                                          
00136a   c41e     MOVFF     0x41e,0xbf                     wCount._word = SetupPkt.wLength;                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00136c   f0bf                                                                                                               
00136e   c41f     MOVFF     0x41f,0xc0                                                                                      
001370   f0c0                                                                                                               
001372   df35     RCALL     0x11de                     USBCtrlTrfTxService();                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001374   0100     MOVLB     0x0                        ctrl_trf_state = CTRL_TRF_TX;                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001376   0e01     MOVLW     0x1                                                                                             
001378   6fb9     MOVWF     0xb9,0x1                                                                                        
                                                       /*                                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Control Read:                                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * <SETUP[0]><IN[1]><IN[0]>...<OUT[1]> | <SETUP[0]>                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 1. Prepare OUT EP to respond to early termination                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * NOTE:                                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * If something went wrong during the control transfer,              C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * the last status stage may not be sent by the host.                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * When this happens, two different things could happen              C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * depending on the host.                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * a) The host could send out a RESET.                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * b) The host could send out a new SETUP transaction                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    without sending a RESET first.                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * To properly handle case (b), the OUT EP must be setup             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * to receive either a zero length OUT transaction, or a             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * new SETUP transaction.                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Since the SETUP transaction requires the DTS bit to be            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * DAT0 while the zero length OUT status requires the DTS            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * bit to be DAT1, the DTS bit check by the hardware should          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * be disabled. This way the SIE could accept either of              C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * the two transactions.                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Furthermore, the Cnt byte should be set to prepare for            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * the SETUP data (8-byte or more), and the buffer address           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * should be pointed to SetupPkt.                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00137a   0104     MOVLB     0x4                        ep0Bo.Cnt = EP0_BUFF_SIZE;                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00137c   0e08     MOVLW     0x8                                                                                             
00137e   6f01     MOVWF     0x1,0x1                                                                                         
001380   0e18     MOVLW     0x18                       ep0Bo.ADR = (byte*)&SetupPkt;                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001382   6f02     MOVWF     0x2,0x1                                                                                         
001384   0e04     MOVLW     0x4                                                                                             
001386   6f03     MOVWF     0x3,0x1                                                                                         
001388   0e80     MOVLW     0x80                       ep0Bo.Stat._byte = _USIE;           // Note: DTSEN is 0!             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00138a   6f00     MOVWF     0x0,0x1                                                                                         
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                       /*                                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 2. Prepare IN EP to transfer data, Cnt should have                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    been initialized by responsible request owner.                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00138c   0104     MOVLB     0x4                        ep0Bi.ADR = (byte*)&CtrlTrfData;                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00138e   0e20     MOVLW     0x20                                                                                            
001390   6f06     MOVWF     0x6,0x1                                                                                         
001392   0e04     MOVLW     0x4                                                                                             
001394   6f07     MOVWF     0x7,0x1                                                                                         
001396   0ec8     MOVLW     0xc8                       ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
001398   6f04     MOVWF     0x4,0x1                                                                                         
                                                   }                                                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00139a   d010     BRA       0x13bc                 else    // (SetupPkt.DataDir == HOST_TO_DEV)                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                   {                                                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00139c   0100     MOVLB     0x0                        ctrl_trf_state = CTRL_TRF_RX;                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
00139e   0e02     MOVLW     0x2                                                                                             
0013a0   6fb9     MOVWF     0xb9,0x1                                                                                        
                                                       /*                                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * Control Write:                                                    C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * <SETUP[0]><OUT[1]><OUT[0]>...<IN[1]> | <SETUP[0]>                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 1. Prepare IN EP to respond to early termination                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        *                                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    This is the same as a Zero Length Packet Response              C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        *    for control transfer without a data stage                      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013a2   0104     MOVLB     0x4                        ep0Bi.Cnt = 0;                                                       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013a4   6b05     CLRF      0x5,0x1                                                                                         
0013a6   0ec8     MOVLW     0xc8                       ep0Bi.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013a8   6f04     MOVWF     0x4,0x1                                                                                         
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                       /*                                                                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        * 2. Prepare OUT EP to receive data.                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                        */                                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013aa   0104     MOVLB     0x4                        ep0Bo.Cnt = EP0_BUFF_SIZE;                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013ac   0e08     MOVLW     0x8                                                                                             
0013ae   6f01     MOVWF     0x1,0x1                                                                                         
0013b0   0e20     MOVLW     0x20                       ep0Bo.ADR = (byte*)&CtrlTrfData;                                     C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013b2   6f02     MOVWF     0x2,0x1                                                                                         
0013b4   0e04     MOVLW     0x4                                                                                             
0013b6   6f03     MOVWF     0x3,0x1                                                                                         
0013b8   0ec8     MOVLW     0xc8                       ep0Bo.Stat._byte = _USIE|_DAT1|_DTSEN;                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013ba   6f00     MOVWF     0x0,0x1                                                                                         
                                                   }//end if(SetupPkt.DataDir == DEV_TO_HOST)                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               }//end if(ctrl_trf_session_owner == MUID_NULL)                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                * PKTDIS bit is set when a Setup Transaction is received.                   C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                * Clear to resume packet processing.                                        C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                */                                                                          C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013bc   986d     BCF       0x6d,0x4,0x0       UCONbits.PKTDIS = 0;                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013be   0012     RETURN    0x0            }//end USBCtrlEPServiceComplete                                                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Function:        void USBPrepareForNextSetupTrf(void)                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Overview:        The routine forces EP0 OUT to be ready for a new Setup       C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                  transaction, and forces EP0 IN to be owned by CPU.           C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *                                                                               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           void USBPrepareForNextSetupTrf(void)                                             C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           {                                                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013c0   0100     MOVLB     0x0                ctrl_trf_state = WAIT_SETUP;            // See usbctrltrf.h                  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013c2   6bb9     CLRF      0xb9,0x1                                                                                        
0013c4   0104     MOVLB     0x4                ep0Bo.Cnt = EP0_BUFF_SIZE;              // Defined in usbcfg.h               C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013c6   0e08     MOVLW     0x8                                                                                             
0013c8   6f01     MOVWF     0x1,0x1                                                                                         
0013ca   0e18     MOVLW     0x18               ep0Bo.ADR = (byte*)&SetupPkt;                                                C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013cc   6f02     MOVWF     0x2,0x1                                                                                         
0013ce   0e04     MOVLW     0x4                                                                                             
0013d0   6f03     MOVWF     0x3,0x1                                                                                         
0013d2   0e88     MOVLW     0x88               ep0Bo.Stat._byte = _USIE|_DAT0|_DTSEN;  // EP0 buff dsc init, see usbmmap.h  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013d4   6f00     MOVWF     0x0,0x1                                                                                         
0013d6   0104     MOVLB     0x4                ep0Bi.Stat._byte = _UCPU;               // EP0 IN buffer initialization      C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
0013d8   6b04     CLRF      0x4,0x1                                                                                         
0013da   0012     RETURN    0x0            }//end USBPrepareForNextSetupTrf                                                 C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                                                                                                            C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /** EOF usbctrltrf.c *********************************************************/  C:\PIC5\PIC\system\usb\usbctrltrf\usbctrltrf.c
                                           /*********************************************************************           C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            *                Microchip USB C18 Firmware Version 1.0                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            *********************************************************************           C:\PIC5\PIC\user\user.c
                                            * FileName:        user.c                                                       C:\PIC5\PIC\user\user.c
                                            * Dependencies:    See INCLUDES section below                                   C:\PIC5\PIC\user\user.c
                                            * Processor:       PIC18                                                        C:\PIC5\PIC\user\user.c
                                            * Compiler:        C18 2.30.01+                                                 C:\PIC5\PIC\user\user.c
                                            * Company:         Microchip Technology, Inc.                                   C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Software License Agreement                                                    C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\PIC5\PIC\user\user.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\PIC5\PIC\user\user.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\PIC5\PIC\user\user.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\PIC5\PIC\user\user.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\PIC5\PIC\user\user.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\PIC5\PIC\user\user.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\PIC5\PIC\user\user.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\PIC5\PIC\user\user.c
                                            * civil liability for the breach of the terms and conditions of this            C:\PIC5\PIC\user\user.c
                                            * license.                                                                      C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\PIC5\PIC\user\user.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\PIC5\PIC\user\user.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\PIC5\PIC\user\user.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\PIC5\PIC\user\user.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\PIC5\PIC\user\user.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Author               Date        Comment                                      C:\PIC5\PIC\user\user.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\PIC5\PIC\user\user.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\PIC5\PIC\user\user.c
                                            ********************************************************************/           C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           /** I N C L U D E S **********************************************************/  C:\PIC5\PIC\user\user.c
                                           #include <p18cxxx.h>                                                             C:\PIC5\PIC\user\user.c
                                           #include <usart.h>                                                               C:\PIC5\PIC\user\user.c
                                           #include "system\typedefs.h"                                                     C:\PIC5\PIC\user\user.c
                                           #include "SPIprotocol.h"                                                         C:\PIC5\PIC\user\user.c
                                           #include "system\usb\usb.h"                                                      C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           #include "io_cfg.h"             // I/O pin mapping                               C:\PIC5\PIC\user\user.c
                                           #include "user\user.h"                                                           C:\PIC5\PIC\user\user.c
                                           #include "user\temperature.h"                                                    C:\PIC5\PIC\user\user.c
                                           #include "def_ports.h"								// Port definitions                                C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           /** V A R I A B L E S ********************************************************/  C:\PIC5\PIC\user\user.c
                                           #pragma udata                                                                    C:\PIC5\PIC\user\user.c
                                           byte old_sw2,old_sw3;                                                            C:\PIC5\PIC\user\user.c
                                           byte counter;                                                                    C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           DATA_PACKET dataPacket;                                                          C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           void BlinkUSBStatus(void);                                                       C:\PIC5\PIC\user\user.c
                                           BOOL Switch2IsPressed(void);                                                     C:\PIC5\PIC\user\user.c
                                           BOOL Switch3IsPressed(void);                                                     C:\PIC5\PIC\user\user.c
                                           void ServiceRequests(void);                                                      C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           // For board testing purpose only                                                C:\PIC5\PIC\user\user.c
                                           void PICDEMFSUSBDemoBoardTest(void);                                             C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\PIC5\PIC\user\user.c
                                           #pragma code                                                                     C:\PIC5\PIC\user\user.c
                                           void UserInit(void)                                                              C:\PIC5\PIC\user\user.c
                                           {                                                                                C:\PIC5\PIC\user\user.c
000838   0ef0     MOVLW     0xf0               mInitAllLEDs();                                                              C:\PIC5\PIC\user\user.c
00083a   168c     ANDWF     0x8c,0x1,0x0                                                                                    
00083c   1695     ANDWF     0x95,0x1,0x0                                                                                    
00083e   8893     BSF       0x93,0x4,0x0       mInitAllSwitches();                                                          C:\PIC5\PIC\user\user.c
000840   8a93     BSF       0x93,0x5,0x0                                                                                    
000842   5081     MOVF      0x81,0x0,0x0       old_sw2 = sw2;                                                               C:\PIC5\PIC\user\user.c
000844   0b10     ANDLW     0x10                                                                                            
000846   e001     BZ        0x84a                                                                                           
000848   0e01     MOVLW     0x1                                                                                             
00084a   0100     MOVLB     0x0                                                                                             
00084c   6f60     MOVWF     0x60,0x1                                                                                        
00084e   5081     MOVF      0x81,0x0,0x0       old_sw3 = sw3;                                                               C:\PIC5\PIC\user\user.c
000850   0b20     ANDLW     0x20                                                                                            
000852   e001     BZ        0x856                                                                                           
000854   0e01     MOVLW     0x1                                                                                             
000856   6f61     MOVWF     0x61,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\user\user.c
000858   0012     RETURN    0x0            }//end UserInit                                                                  C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           /******************************************************************************  C:\PIC5\PIC\user\user.c
                                            * Function:        void ProcessIO(void)                                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Input:           None                                                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Output:          None                                                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Overview:        This function is a place holder for other user routines.     C:\PIC5\PIC\user\user.c
                                            *                  It is a mixture of both USB and non-USB tasks.               C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Note:            None                                                         C:\PIC5\PIC\user\user.c
                                            *****************************************************************************/  C:\PIC5\PIC\user\user.c
                                           void ProcessIO(void)                                                             C:\PIC5\PIC\user\user.c
                                           {                                                                                C:\PIC5\PIC\user\user.c
00085a   d984     RCALL     0xb64              BlinkUSBStatus();                                                            C:\PIC5\PIC\user\user.c
                                               // User Application USB tasks                                                C:\PIC5\PIC\user\user.c
00085c   0e06     MOVLW     0x6                if((usb_device_state < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;      C:\PIC5\PIC\user\user.c
00085e   0100     MOVLB     0x0                                                                                             
000860   5dc1     SUBWF     0xc1,0x0,0x1                                                                                    
000862   e303     BNC       0x86a                                                                                           
000864   506d     MOVF      0x6d,0x0,0x0                                                                                    
000866   0b02     ANDLW     0x2                                                                                             
000868   e001     BZ        0x86c                                                                                           
00086a   d001     BRA       0x86e                                                                                           
                                                                                                                            C:\PIC5\PIC\user\user.c
00086c   d801     RCALL     0x870              ServiceRequests();                                                           C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
00086e   0012     RETURN    0x0            }//end ProcessIO                                                                 C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
000870   cfd9     MOVFF     0xfd9,0xfe6    void ServiceRequests(void)                                                       C:\PIC5\PIC\user\user.c
000872   ffe6                                                                                                               
000874   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000876   ffd9                                                                                                               
000878   0e0a     MOVLW     0xa                                                                                             
00087a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\user\user.c
                                               byte index;                                                                  C:\PIC5\PIC\user\user.c
                                           	byte input;                                                                     C:\PIC5\PIC\user\user.c
                                               int confirmation;                                                            C:\PIC5\PIC\user\user.c
                                           	byte x,y,motion,pixel;                                                          C:\PIC5\PIC\user\user.c
                                           	int i;                                                                          C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
00087c   0e40     MOVLW     0x40               if(USBGenRead((byte*)&dataPacket,sizeof(dataPacket)))                        C:\PIC5\PIC\user\user.c
00087e   6ee6     MOVWF     0xe6,0x0                                                                                        
000880   0e63     MOVLW     0x63                                                                                            
000882   6ee6     MOVWF     0xe6,0x0                                                                                        
000884   0e00     MOVLW     0x0                                                                                             
000886   6ee6     MOVWF     0xe6,0x0                                                                                        
000888   ec99     CALL      0x1932,0x0                                                                                      
00088a   f00c                                                                                                               
00088c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00088e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000890   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000892   0900     IORLW     0x0                                                                                             
000894   e101     BNZ       0x898                                                                                           
000896   d15c     BRA       0xb50                                                                                           
                                               {                                                                            C:\PIC5\PIC\user\user.c
000898   0100     MOVLB     0x0                    counter = 0;                                                             C:\PIC5\PIC\user\user.c
00089a   6b62     CLRF      0x62,0x1                                                                                        
00089c   5163     MOVF      0x63,0x0,0x1           switch(dataPacket.CMD)                                                   C:\PIC5\PIC\user\user.c
00089e   0a06     XORLW     0x6                                                                                             
0008a0   e101     BNZ       0x8a4                                                                                           
0008a2   d133     BRA       0xb0a                                                                                           
0008a4   0a50     XORLW     0x50                                                                                            
0008a6   e101     BNZ       0x8aa                                                                                           
0008a8   d0d6     BRA       0xa56                                                                                           
0008aa   0a5d     XORLW     0x5d                                                                                            
0008ac   e101     BNZ       0x8b0                                                                                           
0008ae   d091     BRA       0x9d2                                                                                           
0008b0   0a09     XORLW     0x9                                                                                             
0008b2   e101     BNZ       0x8b6                                                                                           
0008b4   d079     BRA       0x9a8                                                                                           
0008b6   0a57     XORLW     0x57                                                                                            
0008b8   e05c     BZ        0x972                                                                                           
0008ba   0a51     XORLW     0x51                                                                                            
0008bc   e045     BZ        0x948                                                                                           
0008be   0a07     XORLW     0x7                                                                                             
0008c0   e02e     BZ        0x91e                                                                                           
0008c2   0a0e     XORLW     0xe                                                                                             
0008c4   e017     BZ        0x8f4                                                                                           
0008c6   0a0d     XORLW     0xd                                                                                             
0008c8   e001     BZ        0x8cc                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
                                                       case READ_VERSION:                                                   C:\PIC5\PIC\user\user.c
0008cc   6ae6     CLRF      0xe6,0x0                       input = ReadWithSPIHalfDuplex(READ_VERSION);                     C:\PIC5\PIC\user\user.c
0008ce   ecee     CALL      0x13dc,0x0                                                                                      
0008d0   f009                                                                                                               
0008d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0008d4   6ee7     MOVWF     0xe7,0x0                                                                                        
0008d6   0e01     MOVLW     0x1                                                                                             
0008d8   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0008da   ffdb                                                                                                               
                                           				// dataPacket._byte[1] is len                                                C:\PIC5\PIC\user\user.c
0008dc   cfdb     MOVFF     0xfdb,0x65                     dataPacket._byte[2] = input; // Switch 2 status                  C:\PIC5\PIC\user\user.c
0008de   f065                                                                                                               
0008e0   5081     MOVF      0x81,0x0,0x0                   dataPacket._byte[3] = !PB5; // Switch 3 status                   C:\PIC5\PIC\user\user.c
0008e2   0b20     ANDLW     0x20                                                                                            
0008e4   0a20     XORLW     0x20                                                                                            
0008e6   e001     BZ        0x8ea                                                                                           
0008e8   0e01     MOVLW     0x1                                                                                             
0008ea   0100     MOVLB     0x0                                                                                             
0008ec   6f66     MOVWF     0x66,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\user\user.c
0008ee   0e04     MOVLW     0x4            				counter=0x04;                                                                C:\PIC5\PIC\user\user.c
0008f0   6f62     MOVWF     0x62,0x1                                                                                        
0008f2   d11e     BRA       0xb30                          break;                                                           C:\PIC5\PIC\user\user.c
                                           			case MOUSE_RES:                                                               C:\PIC5\PIC\user\user.c
0008f4   0e01     MOVLW     0x1                            confirmation = WriteWithSPIHalfDuplex(MOUSE_RES, 0x01);          C:\PIC5\PIC\user\user.c
0008f6   6ee6     MOVWF     0xe6,0x0                                                                                        
0008f8   0e0d     MOVLW     0xd                                                                                             
0008fa   6ee6     MOVWF     0xe6,0x0                                                                                        
0008fc   ec3f     CALL      0x147e,0x0                                                                                      
0008fe   f00a                                                                                                               
000900   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000902   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000904   0e02     MOVLW     0x2                                                                                             
000906   cff3     MOVFF     0xff3,0xfdb                                                                                     
000908   ffdb                                                                                                               
00090a   0e03     MOVLW     0x3                                                                                             
00090c   cff4     MOVFF     0xff4,0xfdb                                                                                     
00090e   ffdb                                                                                                               
                                           				// dataPacket._byte[1] is len                                                C:\PIC5\PIC\user\user.c
000910   0e02     MOVLW     0x2                            dataPacket._byte[2] = confirmation; // Switch 2 status           C:\PIC5\PIC\user\user.c
000912   cfdb     MOVFF     0xfdb,0x65                                                                                      
000914   f065                                                                                                               
                                                                                                                            C:\PIC5\PIC\user\user.c
000916   0100     MOVLB     0x0            				counter=0x03;                                                                C:\PIC5\PIC\user\user.c
000918   0e03     MOVLW     0x3                                                                                             
00091a   6f62     MOVWF     0x62,0x1                                                                                        
00091c   d109     BRA       0xb30                          break;                                                           C:\PIC5\PIC\user\user.c
                                           			case POSITIONX:                                                               C:\PIC5\PIC\user\user.c
00091e   0e03     MOVLW     0x3                            x = ReadWithSPIHalfDuplex(0x03);                                 C:\PIC5\PIC\user\user.c
000920   6ee6     MOVWF     0xe6,0x0                                                                                        
000922   ecee     CALL      0x13dc,0x0                                                                                      
000924   f009                                                                                                               
000926   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000928   6ee7     MOVWF     0xe7,0x0                                                                                        
00092a   0e04     MOVLW     0x4                                                                                             
00092c   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00092e   ffdb                                                                                                               
                                           				// dataPacket._byte[1] is len                                                C:\PIC5\PIC\user\user.c
000930   cfdb     MOVFF     0xfdb,0x65                     dataPacket._byte[2] = x; // Switch 2 status                      C:\PIC5\PIC\user\user.c
000932   f065                                                                                                               
000934   5081     MOVF      0x81,0x0,0x0                   dataPacket._byte[3] = !PB5; // Switch 3 status                   C:\PIC5\PIC\user\user.c
000936   0b20     ANDLW     0x20                                                                                            
000938   0a20     XORLW     0x20                                                                                            
00093a   e001     BZ        0x93e                                                                                           
00093c   0e01     MOVLW     0x1                                                                                             
00093e   0100     MOVLB     0x0                                                                                             
000940   6f66     MOVWF     0x66,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\user\user.c
000942   0e04     MOVLW     0x4            				counter=0x04;                                                                C:\PIC5\PIC\user\user.c
000944   6f62     MOVWF     0x62,0x1                                                                                        
000946   d0f4     BRA       0xb30                          break;                                                           C:\PIC5\PIC\user\user.c
                                           			case POSITIONY:                                                               C:\PIC5\PIC\user\user.c
000948   0e04     MOVLW     0x4                            y = ReadWithSPIHalfDuplex(0x04);                                 C:\PIC5\PIC\user\user.c
00094a   6ee6     MOVWF     0xe6,0x0                                                                                        
00094c   ecee     CALL      0x13dc,0x0                                                                                      
00094e   f009                                                                                                               
000950   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000952   6ee7     MOVWF     0xe7,0x0                                                                                        
000954   0e05     MOVLW     0x5                                                                                             
000956   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000958   ffdb                                                                                                               
                                           				// dataPacket._byte[1] is len                                                C:\PIC5\PIC\user\user.c
00095a   cfdb     MOVFF     0xfdb,0x65                     dataPacket._byte[2] = y; // Switch 2 status                      C:\PIC5\PIC\user\user.c
00095c   f065                                                                                                               
00095e   5081     MOVF      0x81,0x0,0x0                   dataPacket._byte[3] = !PB5; // Switch 3 status                   C:\PIC5\PIC\user\user.c
000960   0b20     ANDLW     0x20                                                                                            
000962   0a20     XORLW     0x20                                                                                            
000964   e001     BZ        0x968                                                                                           
000966   0e01     MOVLW     0x1                                                                                             
000968   0100     MOVLB     0x0                                                                                             
00096a   6f66     MOVWF     0x66,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\user\user.c
00096c   0e04     MOVLW     0x4            				counter=0x04;                                                                C:\PIC5\PIC\user\user.c
00096e   6f62     MOVWF     0x62,0x1                                                                                        
000970   d0df     BRA       0xb30          				break;                                                                       C:\PIC5\PIC\user\user.c
                                                       case POSITIONXY:                                                     C:\PIC5\PIC\user\user.c
000972   0e03     MOVLW     0x3                            x = ReadWithSPIHalfDuplex(0x03);                                 C:\PIC5\PIC\user\user.c
000974   6ee6     MOVWF     0xe6,0x0                                                                                        
000976   ecee     CALL      0x13dc,0x0                                                                                      
000978   f009                                                                                                               
00097a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00097c   6ee7     MOVWF     0xe7,0x0                                                                                        
00097e   0e04     MOVLW     0x4                                                                                             
000980   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000982   ffdb                                                                                                               
000984   6ee6     MOVWF     0xe6,0x0                       y = ReadWithSPIHalfDuplex(0x04);                                 C:\PIC5\PIC\user\user.c
000986   ecee     CALL      0x13dc,0x0                                                                                      
000988   f009                                                                                                               
00098a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00098c   6ee7     MOVWF     0xe7,0x0                                                                                        
00098e   0e05     MOVLW     0x5                                                                                             
000990   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000992   ffdb                                                                                                               
000994   0e04     MOVLW     0x4                            dataPacket._byte[2] = x;                                         C:\PIC5\PIC\user\user.c
000996   cfdb     MOVFF     0xfdb,0x65                                                                                      
000998   f065                                                                                                               
00099a   0e05     MOVLW     0x5                            dataPacket._byte[3] = y;                                         C:\PIC5\PIC\user\user.c
00099c   cfdb     MOVFF     0xfdb,0x66                                                                                      
00099e   f066                                                                                                               
                                                                                                                            C:\PIC5\PIC\user\user.c
0009a0   0100     MOVLB     0x0            				counter=0x04;                                                                C:\PIC5\PIC\user\user.c
0009a2   0e04     MOVLW     0x4                                                                                             
0009a4   6f62     MOVWF     0x62,0x1                                                                                        
0009a6   d0c4     BRA       0xb30          				break;                                                                       C:\PIC5\PIC\user\user.c
                                           			case MOTION:                                                                  C:\PIC5\PIC\user\user.c
0009a8   0e02     MOVLW     0x2                            motion = ReadWithSPIHalfDuplex(0x02);                            C:\PIC5\PIC\user\user.c
0009aa   6ee6     MOVWF     0xe6,0x0                                                                                        
0009ac   ecee     CALL      0x13dc,0x0                                                                                      
0009ae   f009                                                                                                               
0009b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0009b2   6ee7     MOVWF     0xe7,0x0                                                                                        
0009b4   0e06     MOVLW     0x6                                                                                             
0009b6   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0009b8   ffdb                                                                                                               
                                           				// dataPacket._byte[1] is len                                                C:\PIC5\PIC\user\user.c
0009ba   cfdb     MOVFF     0xfdb,0x65                     dataPacket._byte[2] = motion; // Switch 2 status                 C:\PIC5\PIC\user\user.c
0009bc   f065                                                                                                               
0009be   5081     MOVF      0x81,0x0,0x0                   dataPacket._byte[3] = !PB5; // Switch 3 status                   C:\PIC5\PIC\user\user.c
0009c0   0b20     ANDLW     0x20                                                                                            
0009c2   0a20     XORLW     0x20                                                                                            
0009c4   e001     BZ        0x9c8                                                                                           
0009c6   0e01     MOVLW     0x1                                                                                             
0009c8   0100     MOVLB     0x0                                                                                             
0009ca   6f66     MOVWF     0x66,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\user\user.c
0009cc   0e04     MOVLW     0x4            				counter=0x04;                                                                C:\PIC5\PIC\user\user.c
0009ce   6f62     MOVWF     0x62,0x1                                                                                        
0009d0   d0af     BRA       0xb30                          break;                                                           C:\PIC5\PIC\user\user.c
                                           			case PIXEL:                                                                   C:\PIC5\PIC\user\user.c
0009d2   0e02     MOVLW     0x2            				for(i=2;i<47;i++){                                                           C:\PIC5\PIC\user\user.c
0009d4   6ef3     MOVWF     0xf3,0x0                                                                                        
0009d6   0e08     MOVLW     0x8                                                                                             
0009d8   cff3     MOVFF     0xff3,0xfdb                                                                                     
0009da   ffdb                                                                                                               
0009dc   0e09     MOVLW     0x9                                                                                             
0009de   6adb     CLRF      0xdb,0x0                                                                                        
0009e0   0e08     MOVLW     0x8                                                                                             
0009e2   cfdb     MOVFF     0xfdb,0x10                                                                                      
0009e4   f010                                                                                                               
0009e6   0e09     MOVLW     0x9                                                                                             
0009e8   cfdb     MOVFF     0xfdb,0x11                                                                                      
0009ea   f011                                                                                                               
0009ec   90d8     BCF       0xd8,0x0,0x0                                                                                    
0009ee   5011     MOVF      0x11,0x0,0x0                                                                                    
0009f0   e604     BN        0x9fa                                                                                           
0009f2   0e2f     MOVLW     0x2f                                                                                            
0009f4   5c10     SUBWF     0x10,0x0,0x0                                                                                    
0009f6   0e00     MOVLW     0x0                                                                                             
0009f8   5811     SUBWFB    0x11,0x0,0x0                                                                                    
0009fa   e22a     BC        0xa50                                                                                           
000a44   0e08     MOVLW     0x8                                                                                             
000a46   2adb     INCF      0xdb,0x1,0x0                                                                                    
000a48   0e09     MOVLW     0x9                                                                                             
000a4a   e301     BNC       0xa4e                                                                                           
000a4c   2adb     INCF      0xdb,0x1,0x0                                                                                    
000a4e   d7c8     BRA       0x9e0                                                                                           
0009fc   0e0b     MOVLW     0xb            					pixel = ReadWithSPIHalfDuplex(0x0b);                                        C:\PIC5\PIC\user\user.c
0009fe   6ee6     MOVWF     0xe6,0x0                                                                                        
000a00   ecee     CALL      0x13dc,0x0                                                                                      
000a02   f009                                                                                                               
000a04   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000a06   6ee7     MOVWF     0xe7,0x0                                                                                        
000a08   0e07     MOVLW     0x7                                                                                             
000a0a   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000a0c   ffdb                                                                                                               
000a0e   50db     MOVF      0xdb,0x0,0x0   					while ((pixel & 0x80) != 0x80) {                                            C:\PIC5\PIC\user\user.c
000a10   0b80     ANDLW     0x80                                                                                            
000a12   0880     SUBLW     0x80                                                                                            
000a14   e00a     BZ        0xa2a                                                                                           
000a28   d7f2     BRA       0xa0e                                                                                           
000a16   0e0b     MOVLW     0xb            						pixel = ReadWithSPIHalfDuplex(0x0b);                                       C:\PIC5\PIC\user\user.c
000a18   6ee6     MOVWF     0xe6,0x0                                                                                        
000a1a   ecee     CALL      0x13dc,0x0                                                                                      
000a1c   f009                                                                                                               
000a1e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000a20   6ee7     MOVWF     0xe7,0x0                                                                                        
000a22   0e07     MOVLW     0x7                                                                                             
000a24   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000a26   ffdb                                                                                                               
                                           					}                                                                           C:\PIC5\PIC\user\user.c
000a2a   0e08     MOVLW     0x8            	                dataPacket._byte[i] = pixel;                                    C:\PIC5\PIC\user\user.c
000a2c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a2e   ffe9                                                                                                               
000a30   0e09     MOVLW     0x9                                                                                             
000a32   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a34   ffea                                                                                                               
000a36   0e63     MOVLW     0x63                                                                                            
000a38   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a3a   0e00     MOVLW     0x0                                                                                             
000a3c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a3e   0e07     MOVLW     0x7                                                                                             
000a40   cfdb     MOVFF     0xfdb,0xfef                                                                                     
000a42   ffef                                                                                                               
                                           				}                                                                            C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
000a50   0100     MOVLB     0x0            				counter=0x2f;                                                                C:\PIC5\PIC\user\user.c
000a52   0e2f     MOVLW     0x2f                                                                                            
000a54   6f62     MOVWF     0x62,0x1                                                                                        
                                           			case PIXELMOUSE:                                                              C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
000a56   0e03     MOVLW     0x3            				x = ReadWithSPIHalfDuplex(0x03);                                             C:\PIC5\PIC\user\user.c
000a58   6ee6     MOVWF     0xe6,0x0                                                                                        
000a5a   ecee     CALL      0x13dc,0x0                                                                                      
000a5c   f009                                                                                                               
000a5e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000a60   6ee7     MOVWF     0xe7,0x0                                                                                        
000a62   0e04     MOVLW     0x4                                                                                             
000a64   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000a66   ffdb                                                                                                               
000a68   6ee6     MOVWF     0xe6,0x0                       y = ReadWithSPIHalfDuplex(0x04);                                 C:\PIC5\PIC\user\user.c
000a6a   ecee     CALL      0x13dc,0x0                                                                                      
000a6c   f009                                                                                                               
000a6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000a70   6ee7     MOVWF     0xe7,0x0                                                                                        
000a72   0e05     MOVLW     0x5                                                                                             
000a74   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000a76   ffdb                                                                                                               
000a78   0e04     MOVLW     0x4                            dataPacket._byte[2] = x;                                         C:\PIC5\PIC\user\user.c
000a7a   cfdb     MOVFF     0xfdb,0x65                                                                                      
000a7c   f065                                                                                                               
000a7e   0e05     MOVLW     0x5                            dataPacket._byte[3] = y;                                         C:\PIC5\PIC\user\user.c
000a80   cfdb     MOVFF     0xfdb,0x66                                                                                      
000a82   f066                                                                                                               
                                                                                                                            C:\PIC5\PIC\user\user.c
000a84   0e04     MOVLW     0x4            				for(i=4;i<49;i++){                                                           C:\PIC5\PIC\user\user.c
000a86   6ef3     MOVWF     0xf3,0x0                                                                                        
000a88   0e08     MOVLW     0x8                                                                                             
000a8a   cff3     MOVFF     0xff3,0xfdb                                                                                     
000a8c   ffdb                                                                                                               
000a8e   0e09     MOVLW     0x9                                                                                             
000a90   6adb     CLRF      0xdb,0x0                                                                                        
000a92   0e08     MOVLW     0x8                                                                                             
000a94   cfdb     MOVFF     0xfdb,0x10                                                                                      
000a96   f010                                                                                                               
000a98   0e09     MOVLW     0x9                                                                                             
000a9a   cfdb     MOVFF     0xfdb,0x11                                                                                      
000a9c   f011                                                                                                               
000a9e   90d8     BCF       0xd8,0x0,0x0                                                                                    
000aa0   5011     MOVF      0x11,0x0,0x0                                                                                    
000aa2   e604     BN        0xaac                                                                                           
000aa4   0e31     MOVLW     0x31                                                                                            
000aa6   5c10     SUBWF     0x10,0x0,0x0                                                                                    
000aa8   0e00     MOVLW     0x0                                                                                             
000aaa   5811     SUBWFB    0x11,0x0,0x0                                                                                    
000aac   e22a     BC        0xb02                                                                                           
000af6   0e08     MOVLW     0x8                                                                                             
000af8   2adb     INCF      0xdb,0x1,0x0                                                                                    
000afa   0e09     MOVLW     0x9                                                                                             
000afc   e301     BNC       0xb00                                                                                           
000afe   2adb     INCF      0xdb,0x1,0x0                                                                                    
000b00   d7c8     BRA       0xa92                                                                                           
000aae   0e0b     MOVLW     0xb            					pixel = ReadWithSPIHalfDuplex(0x0b);                                        C:\PIC5\PIC\user\user.c
000ab0   6ee6     MOVWF     0xe6,0x0                                                                                        
000ab2   ecee     CALL      0x13dc,0x0                                                                                      
000ab4   f009                                                                                                               
000ab6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ab8   6ee7     MOVWF     0xe7,0x0                                                                                        
000aba   0e07     MOVLW     0x7                                                                                             
000abc   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000abe   ffdb                                                                                                               
000ac0   50db     MOVF      0xdb,0x0,0x0   					while ((pixel & 0x80) != 0x80) {                                            C:\PIC5\PIC\user\user.c
000ac2   0b80     ANDLW     0x80                                                                                            
000ac4   0880     SUBLW     0x80                                                                                            
000ac6   e00a     BZ        0xadc                                                                                           
000ada   d7f2     BRA       0xac0                                                                                           
000ac8   0e0b     MOVLW     0xb            						pixel = ReadWithSPIHalfDuplex(0x0b);                                       C:\PIC5\PIC\user\user.c
000aca   6ee6     MOVWF     0xe6,0x0                                                                                        
000acc   ecee     CALL      0x13dc,0x0                                                                                      
000ace   f009                                                                                                               
000ad0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ad2   6ee7     MOVWF     0xe7,0x0                                                                                        
000ad4   0e07     MOVLW     0x7                                                                                             
000ad6   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
000ad8   ffdb                                                                                                               
                                           					}                                                                           C:\PIC5\PIC\user\user.c
000adc   0e08     MOVLW     0x8            	                dataPacket._byte[i] = pixel;                                    C:\PIC5\PIC\user\user.c
000ade   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000ae0   ffe9                                                                                                               
000ae2   0e09     MOVLW     0x9                                                                                             
000ae4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000ae6   ffea                                                                                                               
000ae8   0e63     MOVLW     0x63                                                                                            
000aea   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000aec   0e00     MOVLW     0x0                                                                                             
000aee   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000af0   0e07     MOVLW     0x7                                                                                             
000af2   cfdb     MOVFF     0xfdb,0xfef                                                                                     
000af4   ffef                                                                                                               
                                           				}                                                                            C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
000b02   0100     MOVLB     0x0            				counter=0x31;                                                                C:\PIC5\PIC\user\user.c
000b04   0e31     MOVLW     0x31                                                                                            
000b06   6f62     MOVWF     0x62,0x1                                                                                        
000b08   d013     BRA       0xb30          				break;                                                                       C:\PIC5\PIC\user\user.c
                                           			case PIXEL_RST:                                                               C:\PIC5\PIC\user\user.c
000b0a   0e01     MOVLW     0x1            				pixel = WriteWithSPIHalfDuplex(PIXEL, 0x01);                                 C:\PIC5\PIC\user\user.c
000b0c   6ee6     MOVWF     0xe6,0x0                                                                                        
000b0e   0e0b     MOVLW     0xb                                                                                             
000b10   6ee6     MOVWF     0xe6,0x0                                                                                        
000b12   ec3f     CALL      0x147e,0x0                                                                                      
000b14   f00a                                                                                                               
000b16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b18   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b1a   0e07     MOVLW     0x7                                                                                             
000b1c   cff3     MOVFF     0xff3,0xfdb                                                                                     
000b1e   ffdb                                                                                                               
                                           				// dataPacket._byte[1] is len                                                C:\PIC5\PIC\user\user.c
000b20   cfdb     MOVFF     0xfdb,0x65                     dataPacket._byte[2] = pixel;                                     C:\PIC5\PIC\user\user.c
000b22   f065                                                                                                               
000b24   cfdb     MOVFF     0xfdb,0x66     				dataPacket._byte[3] = pixel;                                                 C:\PIC5\PIC\user\user.c
000b26   f066                                                                                                               
                                                                                                                            C:\PIC5\PIC\user\user.c
000b28   0100     MOVLB     0x0            				counter=0x04;                                                                C:\PIC5\PIC\user\user.c
000b2a   0e04     MOVLW     0x4                                                                                             
000b2c   6f62     MOVWF     0x62,0x1                                                                                        
000b2e   d000     BRA       0xb30          				break;                                                                       C:\PIC5\PIC\user\user.c
                                                       default:                                                             C:\PIC5\PIC\user\user.c
0008ca   d132     BRA       0xb30                          break;                                                           C:\PIC5\PIC\user\user.c
                                                   }//end switch()                                                          C:\PIC5\PIC\user\user.c
000b30   5162     MOVF      0x62,0x0,0x1           if(counter != 0)                                                         C:\PIC5\PIC\user\user.c
000b32   e00e     BZ        0xb50                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
000b34   0104     MOVLB     0x4                        if(!mUSBGenTxIsBusy())                                               C:\PIC5\PIC\user\user.c
000b36   bf0c     BTFSC     0xc,0x7,0x1                                                                                     
000b38   d00b     BRA       0xb50                                                                                           
000b3a   c062     MOVFF     0x62,0xfe6                     USBGenWrite((byte*)&dataPacket,counter);                         C:\PIC5\PIC\user\user.c
000b3c   ffe6                                                                                                               
000b3e   0e63     MOVLW     0x63                                                                                            
000b40   6ee6     MOVWF     0xe6,0x0                                                                                        
000b42   0e00     MOVLW     0x0                                                                                             
000b44   6ee6     MOVWF     0xe6,0x0                                                                                        
000b46   ec5f     CALL      0x18be,0x0                                                                                      
000b48   f00c                                                                                                               
000b4a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b4c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b4e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                   }//end if                                                                C:\PIC5\PIC\user\user.c
                                               }//end if                                                                    C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
000b50   0e0a     MOVLW     0xa            }//end ServiceRequests                                                           C:\PIC5\PIC\user\user.c
000b52   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
000b54   e202     BC        0xb5a                                                                                           
000b56   6ae1     CLRF      0xe1,0x0                                                                                        
000b58   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b5a   6ee1     MOVWF     0xe1,0x0                                                                                        
000b5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b5e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000b60   ffd9                                                                                                               
000b62   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           /******************************************************************************  C:\PIC5\PIC\user\user.c
                                            * Function:        void BlinkUSBStatus(void)                                    C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Input:           None                                                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Output:          None                                                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Overview:        BlinkUSBStatus turns on and off LEDs corresponding to        C:\PIC5\PIC\user\user.c
                                            *                  the USB device state.                                        C:\PIC5\PIC\user\user.c
                                            *                                                                               C:\PIC5\PIC\user\user.c
                                            * Note:            mLED macros can be found in io_cfg.h                         C:\PIC5\PIC\user\user.c
                                            *                  usb_device_state is declared in usbmmap.c and is modified    C:\PIC5\PIC\user\user.c
                                            *                  in usbdrv.c, usbctrltrf.c, and usb9.c                        C:\PIC5\PIC\user\user.c
                                            *****************************************************************************/  C:\PIC5\PIC\user\user.c
                                           void BlinkUSBStatus(void)                                                        C:\PIC5\PIC\user\user.c
                                           {                                                                                C:\PIC5\PIC\user\user.c
                                               static word led_count=0;                                                     C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
000b64   0100     MOVLB     0x0                if(led_count == 0)led_count = 10000U;                                        C:\PIC5\PIC\user\user.c
000b66   51c7     MOVF      0xc7,0x0,0x1                                                                                    
000b68   11c8     IORWF     0xc8,0x0,0x1                                                                                    
000b6a   e104     BNZ       0xb74                                                                                           
000b6c   0e10     MOVLW     0x10                                                                                            
000b6e   6fc7     MOVWF     0xc7,0x1                                                                                        
000b70   0e27     MOVLW     0x27                                                                                            
000b72   6fc8     MOVWF     0xc8,0x1                                                                                        
000b74   07c7     DECF      0xc7,0x1,0x1       led_count--;                                                                 C:\PIC5\PIC\user\user.c
000b76   0e00     MOVLW     0x0                                                                                             
000b78   5bc8     SUBWFB    0xc8,0x1,0x1                                                                                    
                                                                                                                            C:\PIC5\PIC\user\user.c
                                               #define mLED_Both_Off()         {mLED_1_Off();mLED_2_Off();}                 C:\PIC5\PIC\user\user.c
                                               #define mLED_Both_On()          {mLED_1_On();mLED_2_On();}                   C:\PIC5\PIC\user\user.c
                                               #define mLED_Only_1_On()        {mLED_1_On();mLED_2_Off();}                  C:\PIC5\PIC\user\user.c
                                               #define mLED_Only_2_On()        {mLED_1_Off();mLED_2_On();}                  C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
000b7a   a26d     BTFSS     0x6d,0x1,0x0       if(UCONbits.SUSPND == 1)                                                     C:\PIC5\PIC\user\user.c
000b7c   d00b     BRA       0xb94                                                                                           
                                               {                                                                            C:\PIC5\PIC\user\user.c
000b7e   51c7     MOVF      0xc7,0x0,0x1           if(led_count==0)                                                         C:\PIC5\PIC\user\user.c
000b80   11c8     IORWF     0xc8,0x0,0x1                                                                                    
000b82   e107     BNZ       0xb92                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
000b84   708c     BTG       0x8c,0x0,0x0               mLED_1_Toggle();                                                     C:\PIC5\PIC\user\user.c
000b86   508c     MOVF      0x8c,0x0,0x0               mLED_2 = mLED_1;        // Both blink at the same time               C:\PIC5\PIC\user\user.c
000b88   0b01     ANDLW     0x1                                                                                             
000b8a   e002     BZ        0xb90                                                                                           
000b8c   828c     BSF       0x8c,0x1,0x0                                                                                    
000b8e   d001     BRA       0xb92                                                                                           
000b90   928c     BCF       0x8c,0x1,0x0                                                                                    
                                                   }//end if                                                                C:\PIC5\PIC\user\user.c
                                               }                                                                            C:\PIC5\PIC\user\user.c
000b92   d030     BRA       0xbf4              else                                                                         C:\PIC5\PIC\user\user.c
                                               {                                                                            C:\PIC5\PIC\user\user.c
000b94   0100     MOVLB     0x0                    if(usb_device_state == DETACHED_STATE)                                   C:\PIC5\PIC\user\user.c
000b96   51c1     MOVF      0xc1,0x0,0x1                                                                                    
000b98   e104     BNZ       0xba2                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
000b9a   908c     BCF       0x8c,0x0,0x0               mLED_Both_Off();                                                     C:\PIC5\PIC\user\user.c
000b9c   928c     BCF       0x8c,0x1,0x0                                                                                    
                                                                                                                            C:\PIC5\PIC\user\user.c
000b9e   d85e     RCALL     0xc5c                      PICDEMFSUSBDemoBoardTest();                                          C:\PIC5\PIC\user\user.c
                                                   }                                                                        C:\PIC5\PIC\user\user.c
000ba0   d029     BRA       0xbf4                  else if(usb_device_state == ATTACHED_STATE)                              C:\PIC5\PIC\user\user.c
000ba2   05c1     DECF      0xc1,0x0,0x1                                                                                    
000ba4   e103     BNZ       0xbac                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
000ba6   808c     BSF       0x8c,0x0,0x0               mLED_Both_On();                                                      C:\PIC5\PIC\user\user.c
000ba8   828c     BSF       0x8c,0x1,0x0                                                                                    
                                                   }                                                                        C:\PIC5\PIC\user\user.c
000baa   d024     BRA       0xbf4                  else if(usb_device_state == POWERED_STATE)                               C:\PIC5\PIC\user\user.c
000bac   0e02     MOVLW     0x2                                                                                             
000bae   5dc1     SUBWF     0xc1,0x0,0x1                                                                                    
000bb0   e103     BNZ       0xbb8                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
000bb2   808c     BSF       0x8c,0x0,0x0               mLED_Only_1_On();                                                    C:\PIC5\PIC\user\user.c
000bb4   928c     BCF       0x8c,0x1,0x0                                                                                    
                                                   }                                                                        C:\PIC5\PIC\user\user.c
000bb6   d01e     BRA       0xbf4                  else if(usb_device_state == DEFAULT_STATE)                               C:\PIC5\PIC\user\user.c
000bb8   0e03     MOVLW     0x3                                                                                             
000bba   5dc1     SUBWF     0xc1,0x0,0x1                                                                                    
000bbc   e103     BNZ       0xbc4                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
000bbe   908c     BCF       0x8c,0x0,0x0               mLED_Only_2_On();                                                    C:\PIC5\PIC\user\user.c
000bc0   828c     BSF       0x8c,0x1,0x0                                                                                    
                                                   }                                                                        C:\PIC5\PIC\user\user.c
000bc2   d018     BRA       0xbf4                  else if(usb_device_state == ADDRESS_STATE)                               C:\PIC5\PIC\user\user.c
000bc4   0e05     MOVLW     0x5                                                                                             
000bc6   5dc1     SUBWF     0xc1,0x0,0x1                                                                                    
000bc8   e107     BNZ       0xbd8                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
000bca   0100     MOVLB     0x0                        if(led_count == 0)                                                   C:\PIC5\PIC\user\user.c
000bcc   51c7     MOVF      0xc7,0x0,0x1                                                                                    
000bce   11c8     IORWF     0xc8,0x0,0x1                                                                                    
000bd0   e102     BNZ       0xbd6                                                                                           
                                                       {                                                                    C:\PIC5\PIC\user\user.c
000bd2   708c     BTG       0x8c,0x0,0x0                   mLED_1_Toggle();                                                 C:\PIC5\PIC\user\user.c
000bd4   928c     BCF       0x8c,0x1,0x0                   mLED_2_Off();                                                    C:\PIC5\PIC\user\user.c
                                                       }//end if                                                            C:\PIC5\PIC\user\user.c
                                                   }                                                                        C:\PIC5\PIC\user\user.c
000bd6   d00e     BRA       0xbf4                  else if(usb_device_state == CONFIGURED_STATE)                            C:\PIC5\PIC\user\user.c
000bd8   0e06     MOVLW     0x6                                                                                             
000bda   5dc1     SUBWF     0xc1,0x0,0x1                                                                                    
000bdc   e10b     BNZ       0xbf4                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
000bde   0100     MOVLB     0x0                        if(led_count==0)                                                     C:\PIC5\PIC\user\user.c
000be0   51c7     MOVF      0xc7,0x0,0x1                                                                                    
000be2   11c8     IORWF     0xc8,0x0,0x1                                                                                    
000be4   e107     BNZ       0xbf4                                                                                           
                                                       {                                                                    C:\PIC5\PIC\user\user.c
000be6   708c     BTG       0x8c,0x0,0x0                   mLED_1_Toggle();                                                 C:\PIC5\PIC\user\user.c
000be8   508c     MOVF      0x8c,0x0,0x0                   mLED_2 = !mLED_1;       // Alternate blink                       C:\PIC5\PIC\user\user.c
000bea   0b01     ANDLW     0x1                                                                                             
000bec   e002     BZ        0xbf2                                                                                           
000bee   928c     BCF       0x8c,0x1,0x0                                                                                    
000bf0   d001     BRA       0xbf4                                                                                           
000bf2   828c     BSF       0x8c,0x1,0x0                                                                                    
                                                       }//end if                                                            C:\PIC5\PIC\user\user.c
                                                   }//end if(...)                                                           C:\PIC5\PIC\user\user.c
                                               }//end if(UCONbits.SUSPND...)                                                C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
000bf4   0012     RETURN    0x0            }//end BlinkUSBStatus                                                            C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           BOOL Switch2IsPressed(void)                                                      C:\PIC5\PIC\user\user.c
                                           {                                                                                C:\PIC5\PIC\user\user.c
000bf6   5081     MOVF      0x81,0x0,0x0       if(sw2 != old_sw2)                                                           C:\PIC5\PIC\user\user.c
000bf8   0b10     ANDLW     0x10                                                                                            
000bfa   e001     BZ        0xbfe                                                                                           
000bfc   0e01     MOVLW     0x1                                                                                             
000bfe   0100     MOVLB     0x0                                                                                             
000c00   5d60     SUBWF     0x60,0x0,0x1                                                                                    
000c02   e009     BZ        0xc16                                                                                           
                                               {                                                                            C:\PIC5\PIC\user\user.c
000c04   5081     MOVF      0x81,0x0,0x0           old_sw2 = sw2;                  // Save new value                        C:\PIC5\PIC\user\user.c
000c06   0b10     ANDLW     0x10                                                                                            
000c08   e001     BZ        0xc0c                                                                                           
000c0a   0e01     MOVLW     0x1                                                                                             
000c0c   6f60     MOVWF     0x60,0x1                                                                                        
000c0e   b881     BTFSC     0x81,0x4,0x0           if(sw2 == 0)                    // If pressed                            C:\PIC5\PIC\user\user.c
000c10   d002     BRA       0xc16                                                                                           
000c12   0e01     MOVLW     0x1                        return TRUE;                // Was pressed                           C:\PIC5\PIC\user\user.c
000c14   d002     BRA       0xc1a                                                                                           
                                               }//end if                                                                    C:\PIC5\PIC\user\user.c
000c16   0e00     MOVLW     0x0                return FALSE;                       // Was not pressed                       C:\PIC5\PIC\user\user.c
000c18   d000     BRA       0xc1a                                                                                           
000c1a   0012     RETURN    0x0            }//end Switch2IsPressed                                                          C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           BOOL Switch3IsPressed(void)                                                      C:\PIC5\PIC\user\user.c
                                           {                                                                                C:\PIC5\PIC\user\user.c
000c1c   5081     MOVF      0x81,0x0,0x0       if(sw3 != old_sw3)                                                           C:\PIC5\PIC\user\user.c
000c1e   0b20     ANDLW     0x20                                                                                            
000c20   e001     BZ        0xc24                                                                                           
000c22   0e01     MOVLW     0x1                                                                                             
000c24   0100     MOVLB     0x0                                                                                             
000c26   5d61     SUBWF     0x61,0x0,0x1                                                                                    
000c28   e009     BZ        0xc3c                                                                                           
                                               {                                                                            C:\PIC5\PIC\user\user.c
000c2a   5081     MOVF      0x81,0x0,0x0           old_sw3 = sw3;                  // Save new value                        C:\PIC5\PIC\user\user.c
000c2c   0b20     ANDLW     0x20                                                                                            
000c2e   e001     BZ        0xc32                                                                                           
000c30   0e01     MOVLW     0x1                                                                                             
000c32   6f61     MOVWF     0x61,0x1                                                                                        
000c34   ba81     BTFSC     0x81,0x5,0x0           if(sw3 == 0)                    // If pressed                            C:\PIC5\PIC\user\user.c
000c36   d002     BRA       0xc3c                                                                                           
000c38   0e01     MOVLW     0x1                        return TRUE;                // Was pressed                           C:\PIC5\PIC\user\user.c
000c3a   d002     BRA       0xc40                                                                                           
                                               }//end if                                                                    C:\PIC5\PIC\user\user.c
000c3c   0e00     MOVLW     0x0                return FALSE;                       // Was not pressed                       C:\PIC5\PIC\user\user.c
000c3e   d000     BRA       0xc40                                                                                           
000c40   0012     RETURN    0x0            }//end Switch3IsPressed                                                          C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
000c42   cfd9     MOVFF     0xfd9,0xfe6    void TXbyte(byte data)                                                           C:\PIC5\PIC\user\user.c
000c44   ffe6                                                                                                               
000c46   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000c48   ffd9                                                                                                               
                                           {                                                                                C:\PIC5\PIC\user\user.c
000c4a   a2ac     BTFSS     0xac,0x1,0x0       while(TXSTAbits.TRMT==0);                                                    C:\PIC5\PIC\user\user.c
000c4c   d7fe     BRA       0xc4a                                                                                           
000c4e   0efe     MOVLW     0xfe               TXREG = data;                                                                C:\PIC5\PIC\user\user.c
000c50   50db     MOVF      0xdb,0x0,0x0                                                                                    
000c52   6ead     MOVWF     0xad,0x0                                                                                        
000c54   52e5     MOVF      0xe5,0x1,0x0   }//end TXbyte                                                                    C:\PIC5\PIC\user\user.c
000c56   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000c58   ffd9                                                                                                               
000c5a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\user\user.c
000c5c   cfd9     MOVFF     0xfd9,0xfe6    void PICDEMFSUSBDemoBoardTest(void)                                              C:\PIC5\PIC\user\user.c
000c5e   ffe6                                                                                                               
000c60   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000c62   ffd9                                                                                                               
000c64   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\user\user.c
                                               byte temp;                                                                   C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                               //PICDEM FS USB Demo Board Test Procedure:                                   C:\PIC5\PIC\user\user.c
000c66   dfc7     RCALL     0xbf6              if(Switch2IsPressed())                                                       C:\PIC5\PIC\user\user.c
000c68   0900     IORLW     0x0                                                                                             
000c6a   e101     BNZ       0xc6e                                                                                           
000c6c   d0d3     BRA       0xe14                                                                                           
                                               {                                                                            C:\PIC5\PIC\user\user.c
                                                   //LEDs and push buttons testing                                          C:\PIC5\PIC\user\user.c
000c6e   808c     BSF       0x8c,0x0,0x0           mLED_1_On();                                                             C:\PIC5\PIC\user\user.c
000c70   dfc2     RCALL     0xbf6                  while(!Switch2IsPressed());                                              C:\PIC5\PIC\user\user.c
000c72   0900     IORLW     0x0                                                                                             
000c74   e101     BNZ       0xc78                                                                                           
000c76   d7fc     BRA       0xc70                                                                                           
000c78   908c     BCF       0x8c,0x0,0x0           mLED_1_Off();                                                            C:\PIC5\PIC\user\user.c
000c7a   828c     BSF       0x8c,0x1,0x0           mLED_2_On();                                                             C:\PIC5\PIC\user\user.c
000c7c   dfcf     RCALL     0xc1c                  while(!Switch3IsPressed());                                              C:\PIC5\PIC\user\user.c
000c7e   0900     IORLW     0x0                                                                                             
000c80   e101     BNZ       0xc84                                                                                           
000c82   d7fc     BRA       0xc7c                                                                                           
000c84   928c     BCF       0x8c,0x1,0x0           mLED_2_Off();                                                            C:\PIC5\PIC\user\user.c
000c86   848c     BSF       0x8c,0x2,0x0           mLED_3_On();                                                             C:\PIC5\PIC\user\user.c
000c88   dfc9     RCALL     0xc1c                  while(!Switch3IsPressed());                                              C:\PIC5\PIC\user\user.c
000c8a   0900     IORLW     0x0                                                                                             
000c8c   e101     BNZ       0xc90                                                                                           
000c8e   d7fc     BRA       0xc88                                                                                           
000c90   948c     BCF       0x8c,0x2,0x0           mLED_3_Off();                                                            C:\PIC5\PIC\user\user.c
000c92   868c     BSF       0x8c,0x3,0x0           mLED_4_On();                                                             C:\PIC5\PIC\user\user.c
000c94   dfc3     RCALL     0xc1c                  while(!Switch3IsPressed());                                              C:\PIC5\PIC\user\user.c
000c96   0900     IORLW     0x0                                                                                             
000c98   e101     BNZ       0xc9c                                                                                           
000c9a   d7fc     BRA       0xc94                                                                                           
000c9c   968c     BCF       0x8c,0x3,0x0           mLED_4_Off();                                                            C:\PIC5\PIC\user\user.c
                                                                                                                            C:\PIC5\PIC\user\user.c
                                                   //RS-232 Setup                                                           C:\PIC5\PIC\user\user.c
000c9e   6ac6     CLRF      0xc6,0x0               SSPCON1 = 0;        // Make sure SPI is disabled                         C:\PIC5\PIC\user\user.c
000ca0   8e94     BSF       0x94,0x7,0x0           TRISCbits.TRISC7=1; // RX                                                C:\PIC5\PIC\user\user.c
000ca2   9c94     BCF       0x94,0x6,0x0           TRISCbits.TRISC6=0; // TX                                                C:\PIC5\PIC\user\user.c
000ca4   0e71     MOVLW     0x71                   SPBRG = 0x71;                                                            C:\PIC5\PIC\user\user.c
000ca6   6eaf     MOVWF     0xaf,0x0                                                                                        
000ca8   0e02     MOVLW     0x2                    SPBRGH = 0x02;      // 0x0271 for 48MHz -> 19200 baud                    C:\PIC5\PIC\user\user.c
000caa   6eb0     MOVWF     0xb0,0x0                                                                                        
000cac   0e24     MOVLW     0x24                   TXSTA = 0x24;       // TX enable BRGH=1                                  C:\PIC5\PIC\user\user.c
000cae   6eac     MOVWF     0xac,0x0                                                                                        
000cb0   0e90     MOVLW     0x90                   RCSTA = 0x90;       // continuous RX                                     C:\PIC5\PIC\user\user.c
000cb2   6eab     MOVWF     0xab,0x0                                                                                        
000cb4   0e08     MOVLW     0x8                    BAUDCON = 0x08;     // BRG16 = 1                                         C:\PIC5\PIC\user\user.c
000cb6   6eb8     MOVWF     0xb8,0x0                                                                                        
000cb8   50ae     MOVF      0xae,0x0,0x0           temp = RCREG;       // Empty buffer                                      C:\PIC5\PIC\user\user.c
000cba   6edf     MOVWF     0xdf,0x0                                                                                        
000cbc   50ae     MOVF      0xae,0x0,0x0           temp = RCREG;       // Empty buffer                                      C:\PIC5\PIC\user\user.c
000cbe   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\user\user.c
                                                   //RS-232 Tx & Rx Tests                                                   C:\PIC5\PIC\user\user.c
000cc0   dfad     RCALL     0xc1c                  while(!Switch3IsPressed());                                              C:\PIC5\PIC\user\user.c
000cc2   0900     IORLW     0x0                                                                                             
000cc4   e101     BNZ       0xcc8                                                                                           
000cc6   d7fc     BRA       0xcc0                                                                                           
000cc8   0e52     MOVLW     0x52                   TXbyte('R');                                                             C:\PIC5\PIC\user\user.c
000cca   6ee6     MOVWF     0xe6,0x0                                                                                        
000ccc   dfba     RCALL     0xc42                                                                                           
000cce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cd0   0e53     MOVLW     0x53                   TXbyte('S');                                                             C:\PIC5\PIC\user\user.c
000cd2   6ee6     MOVWF     0xe6,0x0                                                                                        
000cd4   dfb6     RCALL     0xc42                                                                                           
000cd6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cd8   0e2d     MOVLW     0x2d                   TXbyte('-');                                                             C:\PIC5\PIC\user\user.c
000cda   6ee6     MOVWF     0xe6,0x0                                                                                        
000cdc   dfb2     RCALL     0xc42                                                                                           
000cde   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ce0   0e32     MOVLW     0x32                   TXbyte('2');                                                             C:\PIC5\PIC\user\user.c
000ce2   6ee6     MOVWF     0xe6,0x0                                                                                        
000ce4   dfae     RCALL     0xc42                                                                                           
000ce6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ce8   0e33     MOVLW     0x33                   TXbyte('3');                                                             C:\PIC5\PIC\user\user.c
000cea   6ee6     MOVWF     0xe6,0x0                                                                                        
000cec   dfaa     RCALL     0xc42                                                                                           
000cee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cf0   0e32     MOVLW     0x32                   TXbyte('2');                                                             C:\PIC5\PIC\user\user.c
000cf2   6ee6     MOVWF     0xe6,0x0                                                                                        
000cf4   dfa6     RCALL     0xc42                                                                                           
000cf6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cf8   0e20     MOVLW     0x20                   TXbyte(' ');                                                             C:\PIC5\PIC\user\user.c
000cfa   6ee6     MOVWF     0xe6,0x0                                                                                        
000cfc   dfa2     RCALL     0xc42                                                                                           
000cfe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d00   0e54     MOVLW     0x54                   TXbyte('T');                                                             C:\PIC5\PIC\user\user.c
000d02   6ee6     MOVWF     0xe6,0x0                                                                                        
000d04   df9e     RCALL     0xc42                                                                                           
000d06   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d08   0e58     MOVLW     0x58                   TXbyte('X');                                                             C:\PIC5\PIC\user\user.c
000d0a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d0c   df9a     RCALL     0xc42                                                                                           
000d0e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d10   0e20     MOVLW     0x20                   TXbyte(' ');                                                             C:\PIC5\PIC\user\user.c
000d12   6ee6     MOVWF     0xe6,0x0                                                                                        
000d14   df96     RCALL     0xc42                                                                                           
000d16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d18   0e54     MOVLW     0x54                   TXbyte('T');                                                             C:\PIC5\PIC\user\user.c
000d1a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d1c   df92     RCALL     0xc42                                                                                           
000d1e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d20   0e65     MOVLW     0x65                   TXbyte('e');                                                             C:\PIC5\PIC\user\user.c
000d22   6ee6     MOVWF     0xe6,0x0                                                                                        
000d24   df8e     RCALL     0xc42                                                                                           
000d26   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d28   0e73     MOVLW     0x73                   TXbyte('s');                                                             C:\PIC5\PIC\user\user.c
000d2a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d2c   df8a     RCALL     0xc42                                                                                           
000d2e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d30   0e74     MOVLW     0x74                   TXbyte('t');                                                             C:\PIC5\PIC\user\user.c
000d32   6ee6     MOVWF     0xe6,0x0                                                                                        
000d34   df86     RCALL     0xc42                                                                                           
000d36   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d38   0e20     MOVLW     0x20                   TXbyte(' ');                                                             C:\PIC5\PIC\user\user.c
000d3a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d3c   df82     RCALL     0xc42                                                                                           
000d3e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d40   0e4f     MOVLW     0x4f                   TXbyte('O');                                                             C:\PIC5\PIC\user\user.c
000d42   6ee6     MOVWF     0xe6,0x0                                                                                        
000d44   df7e     RCALL     0xc42                                                                                           
000d46   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d48   0e4b     MOVLW     0x4b                   TXbyte('K');                                                             C:\PIC5\PIC\user\user.c
000d4a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d4c   df7a     RCALL     0xc42                                                                                           
000d4e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d50   0e2c     MOVLW     0x2c                   TXbyte(',');                                                             C:\PIC5\PIC\user\user.c
000d52   6ee6     MOVWF     0xe6,0x0                                                                                        
000d54   df76     RCALL     0xc42                                                                                           
000d56   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d58   0e20     MOVLW     0x20                   TXbyte(' ');                                                             C:\PIC5\PIC\user\user.c
000d5a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d5c   df72     RCALL     0xc42                                                                                           
000d5e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d60   0e50     MOVLW     0x50                   TXbyte('P');                                                             C:\PIC5\PIC\user\user.c
000d62   6ee6     MOVWF     0xe6,0x0                                                                                        
000d64   df6e     RCALL     0xc42                                                                                           
000d66   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d68   0e72     MOVLW     0x72                   TXbyte('r');                                                             C:\PIC5\PIC\user\user.c
000d6a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d6c   df6a     RCALL     0xc42                                                                                           
000d6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d70   0e65     MOVLW     0x65                   TXbyte('e');                                                             C:\PIC5\PIC\user\user.c
000d72   6ee6     MOVWF     0xe6,0x0                                                                                        
000d74   df66     RCALL     0xc42                                                                                           
000d76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d78   0e73     MOVLW     0x73                   TXbyte('s');                                                             C:\PIC5\PIC\user\user.c
000d7a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d7c   df62     RCALL     0xc42                                                                                           
000d7e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d80   0e73     MOVLW     0x73                   TXbyte('s');                                                             C:\PIC5\PIC\user\user.c
000d82   6ee6     MOVWF     0xe6,0x0                                                                                        
000d84   df5e     RCALL     0xc42                                                                                           
000d86   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d88   0e20     MOVLW     0x20                   TXbyte(' ');                                                             C:\PIC5\PIC\user\user.c
000d8a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d8c   df5a     RCALL     0xc42                                                                                           
000d8e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d90   0e22     MOVLW     0x22                   TXbyte('"');                                                             C:\PIC5\PIC\user\user.c
000d92   6ee6     MOVWF     0xe6,0x0                                                                                        
000d94   df56     RCALL     0xc42                                                                                           
000d96   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d98   0e72     MOVLW     0x72                   TXbyte('r');                                                             C:\PIC5\PIC\user\user.c
000d9a   6ee6     MOVWF     0xe6,0x0                                                                                        
000d9c   df52     RCALL     0xc42                                                                                           
000d9e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000da0   0e22     MOVLW     0x22                   TXbyte('"');                                                             C:\PIC5\PIC\user\user.c
000da2   6ee6     MOVWF     0xe6,0x0                                                                                        
000da4   df4e     RCALL     0xc42                                                                                           
000da6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000da8   0e2c     MOVLW     0x2c                   TXbyte(',');                                                             C:\PIC5\PIC\user\user.c
000daa   6ee6     MOVWF     0xe6,0x0                                                                                        
000dac   df4a     RCALL     0xc42                                                                                           
000dae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000db0   aa9e     BTFSS     0x9e,0x5,0x0           while(PIR1bits.RCIF==0);        //Wait for data from RS232               C:\PIC5\PIC\user\user.c
000db2   d7fe     BRA       0xdb0                                                                                           
000db4   0e72     MOVLW     0x72                   if(RCREG == 'r')                                                         C:\PIC5\PIC\user\user.c
000db6   5cae     SUBWF     0xae,0x0,0x0                                                                                    
000db8   e12c     BNZ       0xe12                                                                                           
                                                   {                                                                        C:\PIC5\PIC\user\user.c
000dba   0e20     MOVLW     0x20                       TXbyte(' ');                                                         C:\PIC5\PIC\user\user.c
000dbc   6ee6     MOVWF     0xe6,0x0                                                                                        
000dbe   df41     RCALL     0xc42                                                                                           
000dc0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000dc2   0e52     MOVLW     0x52                       TXbyte('R');                                                         C:\PIC5\PIC\user\user.c
000dc4   6ee6     MOVWF     0xe6,0x0                                                                                        
000dc6   df3d     RCALL     0xc42                                                                                           
000dc8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000dca   0e58     MOVLW     0x58                       TXbyte('X');                                                         C:\PIC5\PIC\user\user.c
000dcc   6ee6     MOVWF     0xe6,0x0                                                                                        
000dce   df39     RCALL     0xc42                                                                                           
000dd0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000dd2   0e20     MOVLW     0x20                       TXbyte(' ');                                                         C:\PIC5\PIC\user\user.c
000dd4   6ee6     MOVWF     0xe6,0x0                                                                                        
000dd6   df35     RCALL     0xc42                                                                                           
000dd8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000dda   0e54     MOVLW     0x54                       TXbyte('T');                                                         C:\PIC5\PIC\user\user.c
000ddc   6ee6     MOVWF     0xe6,0x0                                                                                        
000dde   df31     RCALL     0xc42                                                                                           
000de0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000de2   0e65     MOVLW     0x65                       TXbyte('e');                                                         C:\PIC5\PIC\user\user.c
000de4   6ee6     MOVWF     0xe6,0x0                                                                                        
000de6   df2d     RCALL     0xc42                                                                                           
000de8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000dea   0e73     MOVLW     0x73                       TXbyte('s');                                                         C:\PIC5\PIC\user\user.c
000dec   6ee6     MOVWF     0xe6,0x0                                                                                        
000dee   df29     RCALL     0xc42                                                                                           
000df0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000df2   0e74     MOVLW     0x74                       TXbyte('t');                                                         C:\PIC5\PIC\user\user.c
000df4   6ee6     MOVWF     0xe6,0x0                                                                                        
000df6   df25     RCALL     0xc42                                                                                           
000df8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000dfa   0e20     MOVLW     0x20                       TXbyte(' ');                                                         C:\PIC5\PIC\user\user.c
000dfc   6ee6     MOVWF     0xe6,0x0                                                                                        
000dfe   df21     RCALL     0xc42                                                                                           
000e00   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e02   0e4f     MOVLW     0x4f                       TXbyte('O');                                                         C:\PIC5\PIC\user\user.c
000e04   6ee6     MOVWF     0xe6,0x0                                                                                        
000e06   df1d     RCALL     0xc42                                                                                           
000e08   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e0a   0e4b     MOVLW     0x4b                       TXbyte('K');                                                         C:\PIC5\PIC\user\user.c
000e0c   6ee6     MOVWF     0xe6,0x0                                                                                        
000e0e   df19     RCALL     0xc42                                                                                           
000e10   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                   }//end if                                                                C:\PIC5\PIC\user\user.c
000e12   dd12     RCALL     0x838                  UserInit();                     //Re-initialize default user fw          C:\PIC5\PIC\user\user.c
                                                   //Test phase 1 done                                                      C:\PIC5\PIC\user\user.c
                                               }//end if                                                                    C:\PIC5\PIC\user\user.c
000e14   52e5     MOVF      0xe5,0x1,0x0   }//end PICDEMFSUSBDemoBoardTest()                                                C:\PIC5\PIC\user\user.c
000e16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e18   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000e1a   ffd9                                                                                                               
000e1c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\user\user.c
                                           /** EOF user.c ***************************************************************/  C:\PIC5\PIC\user\user.c
                                           /*********************************************************************           C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            *                Thermo Sensor with SPI(TM) Interface                           C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            *********************************************************************           C:\PIC5\PIC\user\temperature.c
                                            * FileName:        temperature.c                                                C:\PIC5\PIC\user\temperature.c
                                            * Dependencies:    See INCLUDES section below                                   C:\PIC5\PIC\user\temperature.c
                                            * Processor:       PIC18                                                        C:\PIC5\PIC\user\temperature.c
                                            * Compiler:        C18 2.30.01+                                                 C:\PIC5\PIC\user\temperature.c
                                            * Company:         Microchip Technology, Inc.                                   C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Software License Agreement                                                    C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\PIC5\PIC\user\temperature.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\PIC5\PIC\user\temperature.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\PIC5\PIC\user\temperature.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\PIC5\PIC\user\temperature.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\PIC5\PIC\user\temperature.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\PIC5\PIC\user\temperature.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\PIC5\PIC\user\temperature.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\PIC5\PIC\user\temperature.c
                                            * civil liability for the breach of the terms and conditions of this            C:\PIC5\PIC\user\temperature.c
                                            * license.                                                                      C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\PIC5\PIC\user\temperature.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\PIC5\PIC\user\temperature.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\PIC5\PIC\user\temperature.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\PIC5\PIC\user\temperature.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\PIC5\PIC\user\temperature.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Author               Date        Comment                                      C:\PIC5\PIC\user\temperature.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\PIC5\PIC\user\temperature.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\PIC5\PIC\user\temperature.c
                                            ********************************************************************/           C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                           /** I N C L U D E S **********************************************************/  C:\PIC5\PIC\user\temperature.c
                                           #include <p18cxxx.h>                                                             C:\PIC5\PIC\user\temperature.c
                                           #include "system\typedefs.h"                                                     C:\PIC5\PIC\user\temperature.c
                                           #include <spi.h>                                                                 C:\PIC5\PIC\user\temperature.c
                                           #include "io_cfg.h"                                                              C:\PIC5\PIC\user\temperature.c
                                           #include "user\temperature.h"                                                    C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                           /** V A R I A B L E S ********************************************************/  C:\PIC5\PIC\user\temperature.c
                                           #pragma udata                                                                    C:\PIC5\PIC\user\temperature.c
                                           WORD temperature;           // Raw data format                                   C:\PIC5\PIC\user\temperature.c
                                           char tempString[10];        // Buffer for storing data in ASCII format           C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\PIC5\PIC\user\temperature.c
                                           #pragma code                                                                     C:\PIC5\PIC\user\temperature.c
                                           /******************************************************************************  C:\PIC5\PIC\user\temperature.c
                                            * Function:        void InitTempSensor(void)                                    C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Input:           None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Output:          None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Overview:        Initializes SPI interface & chip select line                 C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Note:            None                                                         C:\PIC5\PIC\user\temperature.c
                                            *****************************************************************************/  C:\PIC5\PIC\user\temperature.c
                                           void InitTempSensor(void)                                                        C:\PIC5\PIC\user\temperature.c
                                           {                                                                                C:\PIC5\PIC\user\temperature.c
00157e   848a     BSF       0x8a,0x2,0x0       cs_temp_sensor = 1;                                                          C:\PIC5\PIC\user\temperature.c
001580   9493     BCF       0x93,0x2,0x0       tris_cs_temp_sensor = OUTPUT_PIN;                                            C:\PIC5\PIC\user\temperature.c
001582   6ae6     CLRF      0xe6,0x0           OpenSPI(SPI_FOSC_64, MODE_11, SMPMID);                                       C:\PIC5\PIC\user\temperature.c
001584   0e03     MOVLW     0x3                                                                                             
001586   6ee6     MOVWF     0xe6,0x0                                                                                        
001588   0e02     MOVLW     0x2                                                                                             
00158a   6ee6     MOVWF     0xe6,0x0                                                                                        
00158c   ecb9     CALL      0x1b72,0x0                                                                                      
00158e   f00d                                                                                                               
001590   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001592   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001594   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                               // Initialize readable values - default to room temperature                  C:\PIC5\PIC\user\temperature.c
001596   0100     MOVLB     0x0                temperature._word = 0x0C87;       // 25 degree celsius                       C:\PIC5\PIC\user\temperature.c
001598   0e87     MOVLW     0x87                                                                                            
00159a   6fa3     MOVWF     0xa3,0x1                                                                                        
00159c   0e0c     MOVLW     0xc                                                                                             
00159e   6fa4     MOVWF     0xa4,0x1                                                                                        
0015a0   efe3     GOTO      0x15c6             UpdateCelsiusASCII();                                                        C:\PIC5\PIC\user\temperature.c
0015a2   f00a                                                                                                               
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                           }//end InitTempSensor                                                            C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                           /******************************************************************************  C:\PIC5\PIC\user\temperature.c
                                            * Function:        void AcquireTemperature(void)                                C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Input:           None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Output:          None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Overview:        None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Note:            None                                                         C:\PIC5\PIC\user\temperature.c
                                            *****************************************************************************/  C:\PIC5\PIC\user\temperature.c
                                           BOOL AcquireTemperature(void)                                                    C:\PIC5\PIC\user\temperature.c
                                           {                                                                                C:\PIC5\PIC\user\temperature.c
0015a4   948a     BCF       0x8a,0x2,0x0       cs_temp_sensor = 0;                                                          C:\PIC5\PIC\user\temperature.c
0015a6   ec16     CALL      0x1c2c,0x0         MSB(temperature) = ReadSPI();                                                C:\PIC5\PIC\user\temperature.c
0015a8   f00e                                                                                                               
0015aa   0100     MOVLB     0x0                                                                                             
0015ac   6fa4     MOVWF     0xa4,0x1                                                                                        
0015ae   ec16     CALL      0x1c2c,0x0         LSB(temperature) = ReadSPI();                                                C:\PIC5\PIC\user\temperature.c
0015b0   f00e                                                                                                               
0015b2   0100     MOVLB     0x0                                                                                             
0015b4   6fa3     MOVWF     0xa3,0x1                                                                                        
0015b6   848a     BSF       0x8a,0x2,0x0       cs_temp_sensor = 1;                                                          C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
0015b8   b5a3     BTFSC     0xa3,0x2,0x1       if(temperature.LowB.b2 == 0)                                                 C:\PIC5\PIC\user\temperature.c
0015ba   d002     BRA       0x15c0                                                                                          
0015bc   0e00     MOVLW     0x0                    return FAIL;                                                             C:\PIC5\PIC\user\temperature.c
0015be   d002     BRA       0x15c4                                                                                          
                                                                                                                            C:\PIC5\PIC\user\temperature.c
0015c0   0e01     MOVLW     0x1                return OK;                                                                   C:\PIC5\PIC\user\temperature.c
0015c2   d000     BRA       0x15c4                                                                                          
0015c4   0012     RETURN    0x0            }//end AcquireTemperature                                                        C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                           /******************************************************************************  C:\PIC5\PIC\user\temperature.c
                                            * Function:        void UpdateCelsiusASCII(void)                                C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Input:           None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Output:          None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Overview:        This routine converts data output to ASCII string            C:\PIC5\PIC\user\temperature.c
                                            *                                                                               C:\PIC5\PIC\user\temperature.c
                                            * Note:            None                                                         C:\PIC5\PIC\user\temperature.c
                                            *****************************************************************************/  C:\PIC5\PIC\user\temperature.c
0015c6   cfd9     MOVFF     0xfd9,0xfe6    void UpdateCelsiusASCII(void)                                                    C:\PIC5\PIC\user\temperature.c
0015c8   ffe6                                                                                                               
0015ca   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0015cc   ffd9                                                                                                               
0015ce   0e03     MOVLW     0x3                                                                                             
0015d0   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\user\temperature.c
                                               WORD temp;                                                                   C:\PIC5\PIC\user\temperature.c
                                               byte i;                                                                      C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
0015d2   c0a3     MOVFF     0xa3,0x10          temp._word = temperature._word >> 3;                                         C:\PIC5\PIC\user\temperature.c
0015d4   f010                                                                                                               
0015d6   c0a4     MOVFF     0xa4,0x11                                                                                       
0015d8   f011                                                                                                               
0015da   90d8     BCF       0xd8,0x0,0x0                                                                                    
0015dc   3211     RRCF      0x11,0x1,0x0                                                                                    
0015de   3210     RRCF      0x10,0x1,0x0                                                                                    
0015e0   04e8     DECF      0xe8,0x0,0x0                                                                                    
0015e2   e1fb     BNZ       0x15da                                                                                          
0015e4   c010     MOVFF     0x10,0xfde                                                                                      
0015e6   ffde                                                                                                               
0015e8   c011     MOVFF     0x11,0xfdd                                                                                      
0015ea   ffdd                                                                                                               
                                                                                                                            C:\PIC5\PIC\user\temperature.c
0015ec   50d9     MOVF      0xd9,0x0,0x0       if(temp.HighB.b4 == 0)                                                       C:\PIC5\PIC\user\temperature.c
0015ee   0f01     ADDLW     0x1                                                                                             
0015f0   6ee9     MOVWF     0xe9,0x0                                                                                        
0015f2   cfda     MOVFF     0xfda,0xfea                                                                                     
0015f4   ffea                                                                                                               
0015f6   50ef     MOVF      0xef,0x0,0x0                                                                                    
0015f8   0b10     ANDLW     0x10                                                                                            
0015fa   e108     BNZ       0x160c                                                                                          
                                               {                                                                            C:\PIC5\PIC\user\temperature.c
0015fc   0e01     MOVLW     0x1                    temp.HighB._byte &= 0b00011111;                                          C:\PIC5\PIC\user\temperature.c
0015fe   9adb     BCF       0xdb,0x5,0x0                                                                                    
001600   9cdb     BCF       0xdb,0x6,0x0                                                                                    
001602   9edb     BCF       0xdb,0x7,0x0                                                                                    
001604   0100     MOVLB     0x0                    tempString[0] = '+';                                                     C:\PIC5\PIC\user\temperature.c
001606   0e2b     MOVLW     0x2b                                                                                            
001608   6fa5     MOVWF     0xa5,0x1                                                                                        
                                               }                                                                            C:\PIC5\PIC\user\temperature.c
00160a   d016     BRA       0x1638             else                                                                         C:\PIC5\PIC\user\temperature.c
                                               {                                                                            C:\PIC5\PIC\user\temperature.c
00160c   0e01     MOVLW     0x1                    temp.HighB._byte |= 0b11100000;                                          C:\PIC5\PIC\user\temperature.c
00160e   8adb     BSF       0xdb,0x5,0x0                                                                                    
001610   8cdb     BSF       0xdb,0x6,0x0                                                                                    
001612   8edb     BSF       0xdb,0x7,0x0                                                                                    
001614   0100     MOVLB     0x0                    tempString[0] = '-';                                                     C:\PIC5\PIC\user\temperature.c
001616   0e2d     MOVLW     0x2d                                                                                            
001618   6fa5     MOVWF     0xa5,0x1                                                                                        
00161a   cfde     MOVFF     0xfde,0x10             temp._word = temp._word ^ 0xFFFF;   // Negate                            C:\PIC5\PIC\user\temperature.c
00161c   f010                                                                                                               
00161e   cfdd     MOVFF     0xfdd,0x11                                                                                      
001620   f011                                                                                                               
001622   0eff     MOVLW     0xff                                                                                            
001624   1a10     XORWF     0x10,0x1,0x0                                                                                    
001626   1a11     XORWF     0x11,0x1,0x0                                                                                    
001628   c010     MOVFF     0x10,0xfde                                                                                      
00162a   ffde                                                                                                               
00162c   c011     MOVFF     0x11,0xfdd                                                                                      
00162e   ffdd                                                                                                               
001630   2adf     INCF      0xdf,0x1,0x0           temp._word++;                                                            C:\PIC5\PIC\user\temperature.c
001632   0e01     MOVLW     0x1                                                                                             
001634   e301     BNC       0x1638                                                                                          
001636   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                               }//end if                                                                    C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
001638   cfde     MOVFF     0xfde,0x10         temp._word = (temp._word*10U) >> 4;     // Turn into celsius xx.x            C:\PIC5\PIC\user\temperature.c
00163a   f010                                                                                                               
00163c   cfdd     MOVFF     0xfdd,0x11                                                                                      
00163e   f011                                                                                                               
001640   0e0a     MOVLW     0xa                                                                                             
001642   0211     MULWF     0x11,0x0                                                                                        
001644   cff3     MOVFF     0xff3,0x11                                                                                      
001646   f011                                                                                                               
001648   0210     MULWF     0x10,0x0                                                                                        
00164a   cff3     MOVFF     0xff3,0x10                                                                                      
00164c   f010                                                                                                               
00164e   50f4     MOVF      0xf4,0x0,0x0                                                                                    
001650   2611     ADDWF     0x11,0x1,0x0                                                                                    
001652   0e04     MOVLW     0x4                                                                                             
001654   90d8     BCF       0xd8,0x0,0x0                                                                                    
001656   3211     RRCF      0x11,0x1,0x0                                                                                    
001658   3210     RRCF      0x10,0x1,0x0                                                                                    
00165a   04e8     DECF      0xe8,0x0,0x0                                                                                    
00165c   e1fb     BNZ       0x1654                                                                                          
00165e   c010     MOVFF     0x10,0xfde                                                                                      
001660   ffde                                                                                                               
001662   c011     MOVFF     0x11,0xfdd                                                                                      
001664   ffdd                                                                                                               
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                               /* Populate string */                                                        C:\PIC5\PIC\user\temperature.c
001666   0e04     MOVLW     0x4                for(i=4;i>0;i--)                                                             C:\PIC5\PIC\user\temperature.c
001668   6ef3     MOVWF     0xf3,0x0                                                                                        
00166a   0e02     MOVLW     0x2                                                                                             
00166c   cff3     MOVFF     0xff3,0xfdb                                                                                     
00166e   ffdb                                                                                                               
001670   50db     MOVF      0xdb,0x0,0x0                                                                                    
001672   0800     SUBLW     0x0                                                                                             
001674   e233     BC        0x16dc                                                                                          
0016d6   0e02     MOVLW     0x2                                                                                             
0016d8   06db     DECF      0xdb,0x1,0x0                                                                                    
0016da   d7ca     BRA       0x1670                                                                                          
                                               {                                                                            C:\PIC5\PIC\user\temperature.c
001676   cfde     MOVFF     0xfde,0x10             tempString[i] = (((char)(temp._word % 10)) & 0x0F) | 0x30;               C:\PIC5\PIC\user\temperature.c
001678   f010                                                                                                               
00167a   cfdd     MOVFF     0xfdd,0x11                                                                                      
00167c   f011                                                                                                               
00167e   0e0a     MOVLW     0xa                                                                                             
001680   6e0b     MOVWF     0xb,0x0                                                                                         
001682   6a0c     CLRF      0xc,0x0                                                                                         
001684   c010     MOVFF     0x10,0x6                                                                                        
001686   f006                                                                                                               
001688   c011     MOVFF     0x11,0x7                                                                                        
00168a   f007                                                                                                               
00168c   eceb     CALL      0x1bd6,0x0                                                                                      
00168e   f00d                                                                                                               
001690   c002     MOVFF     0x2,0x10                                                                                        
001692   f010                                                                                                               
001694   c003     MOVFF     0x3,0x11                                                                                        
001696   f011                                                                                                               
001698   0e0f     MOVLW     0xf                                                                                             
00169a   1410     ANDWF     0x10,0x0,0x0                                                                                    
00169c   0930     IORLW     0x30                                                                                            
00169e   6ee6     MOVWF     0xe6,0x0                                                                                        
0016a0   0e02     MOVLW     0x2                                                                                             
0016a2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0016a4   6aea     CLRF      0xea,0x0                                                                                        
0016a6   0fa5     ADDLW     0xa5                                                                                            
0016a8   6ee9     MOVWF     0xe9,0x0                                                                                        
0016aa   0e00     MOVLW     0x0                                                                                             
0016ac   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0016ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016b0   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0016b2   6eef     MOVWF     0xef,0x0                                                                                        
0016b4   cfd9     MOVFF     0xfd9,0xfe9            temp._word /= 10;                                                        C:\PIC5\PIC\user\temperature.c
0016b6   ffe9                                                                                                               
0016b8   cfda     MOVFF     0xfda,0xfea                                                                                     
0016ba   ffea                                                                                                               
0016bc   0e0a     MOVLW     0xa                                                                                             
0016be   6e0b     MOVWF     0xb,0x0                                                                                         
0016c0   6a0c     CLRF      0xc,0x0                                                                                         
0016c2   cfee     MOVFF     0xfee,0x6                                                                                       
0016c4   f006                                                                                                               
0016c6   cfed     MOVFF     0xfed,0x7                                                                                       
0016c8   f007                                                                                                               
0016ca   eceb     CALL      0x1bd6,0x0                                                                                      
0016cc   f00d                                                                                                               
0016ce   c006     MOVFF     0x6,0xfee                                                                                       
0016d0   ffee                                                                                                               
0016d2   c007     MOVFF     0x7,0xfed                                                                                       
0016d4   ffed                                                                                                               
                                               }//end for                                                                   C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                               /* Turn leading zeros into spaces */                                         C:\PIC5\PIC\user\temperature.c
0016dc   0e30     MOVLW     0x30               if(tempString[1] == '0')                                                     C:\PIC5\PIC\user\temperature.c
0016de   0100     MOVLB     0x0                                                                                             
0016e0   5da6     SUBWF     0xa6,0x0,0x1                                                                                    
0016e2   e107     BNZ       0x16f2                                                                                          
                                               {                                                                            C:\PIC5\PIC\user\temperature.c
0016e4   0e20     MOVLW     0x20                   tempString[1] = ' ';                                                     C:\PIC5\PIC\user\temperature.c
0016e6   6fa6     MOVWF     0xa6,0x1                                                                                        
0016e8   0e30     MOVLW     0x30                   if(tempString[2] == '0')                                                 C:\PIC5\PIC\user\temperature.c
0016ea   5da7     SUBWF     0xa7,0x0,0x1                                                                                    
0016ec   e102     BNZ       0x16f2                                                                                          
0016ee   0e20     MOVLW     0x20                       tempString[2] = ' ';                                                 C:\PIC5\PIC\user\temperature.c
0016f0   6fa7     MOVWF     0xa7,0x1                                                                                        
                                               }//end if                                                                    C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                               /* Adjust decimal digit */                                                   C:\PIC5\PIC\user\temperature.c
0016f2   c0a9     MOVFF     0xa9,0xaa          tempString[5] = tempString[4];                                               C:\PIC5\PIC\user\temperature.c
0016f4   f0aa                                                                                                               
0016f6   0e2e     MOVLW     0x2e               tempString[4]='.';                                                           C:\PIC5\PIC\user\temperature.c
0016f8   6fa9     MOVWF     0xa9,0x1                                                                                        
0016fa   0ef8     MOVLW     0xf8               tempString[6]=0xF8;     // Degree symbol                                     C:\PIC5\PIC\user\temperature.c
0016fc   6fab     MOVWF     0xab,0x1                                                                                        
0016fe   0e43     MOVLW     0x43               tempString[7]='C';                                                           C:\PIC5\PIC\user\temperature.c
001700   6fac     MOVWF     0xac,0x1                                                                                        
001702   0e0d     MOVLW     0xd                tempString[8]='\r';                                                          C:\PIC5\PIC\user\temperature.c
001704   6fad     MOVWF     0xad,0x1                                                                                        
001706   6bae     CLRF      0xae,0x1           tempString[9]=0x00;     // Null-Terminated                                   C:\PIC5\PIC\user\temperature.c
                                                                                                                            C:\PIC5\PIC\user\temperature.c
001708   0e03     MOVLW     0x3            }//end UpdateCelsiusASCII                                                        C:\PIC5\PIC\user\temperature.c
00170a   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00170c   e202     BC        0x1712                                                                                          
00170e   6ae1     CLRF      0xe1,0x0                                                                                        
001710   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001712   6ee1     MOVWF     0xe1,0x0                                                                                        
001714   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001716   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001718   ffd9                                                                                                               
00171a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\user\temperature.c
                                           /** EOF temperature.c ********************************************************/  C:\PIC5\PIC\user\temperature.c
                                           /*********************************************************************           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *             Microchip USB C18 Firmware -  Generic                             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *********************************************************************           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * FileName:        usbgen.c                                                     C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Dependencies:    See INCLUDES section below                                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Processor:       PIC18                                                        C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Compiler:        C18 2.30.01+                                                 C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Company:         Microchip Technology, Inc.                                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Software License Agreement                                                    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * The software supplied herewith by Microchip Technology Incorporated           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * (the “Company”) for its PICmicro® Microcontroller is intended and             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * supplied to you, the Company’s customer, for use solely and                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * exclusively on Microchip PICmicro Microcontroller products. The               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * software is owned by the Company and/or its supplier, and is                  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * protected under applicable copyright laws. All rights are reserved.           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Any use in violation of the foregoing restrictions may subject the            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * user to criminal sanctions under applicable laws, as well as to               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * civil liability for the breach of the terms and conditions of this            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * license.                                                                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES,             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT,             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR                    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Author               Date        Comment                                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Rawin Rojvanit       11/19/04    Original.                                    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            ********************************************************************/           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           /** I N C L U D E S **********************************************************/  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           #include <p18cxxx.h>                                                             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           #include "system\typedefs.h"                                                     C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           #include "system\usb\usb.h"                                                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           #ifdef USB_USE_GEN                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           /** V A R I A B L E S ********************************************************/  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           #pragma udata                                                                    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           byte usbgen_rx_len;                                                              C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           /** P R I V A T E  P R O T O T Y P E S ***************************************/  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           /** D E C L A R A T I O N S **************************************************/  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           #pragma code                                                                     C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           /** U S E R  A P I ***********************************************************/  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Function:        void USBGenInitEP(void)                                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * PreCondition:    None                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Input:           None                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Overview:        USBGenInitEP initializes generic endpoints, buffer           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  descriptors, internal state-machine, and variables.          C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  It should be called after the USB host has sent out a        C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  SET_CONFIGURATION request.                                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  See USBStdSetCfgHandler() in usb9.c for examples.            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           void USBGenInitEP(void)                                                          C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           {                                                                                C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001894   0100     MOVLB     0x0                usbgen_rx_len = 0;                                                           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001896   6bc9     CLRF      0xc9,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001898   0e1e     MOVLW     0x1e               USBGEN_UEP = EP_OUT_IN|HSHK_EN;             // Enable 2 data pipes           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00189a   6e71     MOVWF     0x71,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                * Do not have to init Cnt of IN pipes here.                                 C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                * Reason:  Number of bytes to send to the host                              C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                *          varies from one transaction to                                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                *          another. Cnt should equal the exact                              C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                *          number of bytes to transmit for                                  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                *          a given IN transaction.                                          C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                *          This number of bytes will only                                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                *          be known right before the data is                                C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                *          sent.                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                */                                                                          C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00189c   0104     MOVLB     0x4                USBGEN_BD_OUT.Cnt = sizeof(usbgen_out);     // Set buffer size               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00189e   0e40     MOVLW     0x40                                                                                            
0018a0   6f09     MOVWF     0x9,0x1                                                                                         
0018a2   0e28     MOVLW     0x28               USBGEN_BD_OUT.ADR = (byte*)&usbgen_out;     // Set buffer address            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018a4   6f0a     MOVWF     0xa,0x1                                                                                         
0018a6   0e04     MOVLW     0x4                                                                                             
0018a8   6f0b     MOVWF     0xb,0x1                                                                                         
0018aa   0e88     MOVLW     0x88               USBGEN_BD_OUT.Stat._byte = _USIE|_DAT0|_DTSEN;// Set status                  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018ac   6f08     MOVWF     0x8,0x1                                                                                         
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018ae   0104     MOVLB     0x4                USBGEN_BD_IN.ADR = (byte*)&usbgen_in;      // Set buffer address             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018b0   0e68     MOVLW     0x68                                                                                            
0018b2   6f0e     MOVWF     0xe,0x1                                                                                         
0018b4   0e04     MOVLW     0x4                                                                                             
0018b6   6f0f     MOVWF     0xf,0x1                                                                                         
0018b8   0e40     MOVLW     0x40               USBGEN_BD_IN.Stat._byte = _UCPU|_DAT1;      // Set buffer status             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018ba   6f0c     MOVWF     0xc,0x1                                                                                         
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018bc   0012     RETURN    0x0            }//end USBGenInitEP                                                              C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Function:        void USBGenWrite(byte *buffer, byte len)                     C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * PreCondition:    mUSBGenTxIsBusy() must return false.                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  Value of 'len' must be equal to or smaller than              C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  USBGEN_EP_SIZE                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  For an interrupt/bulk endpoint, the largest buffer size is   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  64 bytes.                                                    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Input:           buffer  : Pointer to the starting location of data bytes     C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  len     : Number of bytes to be transferred                  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Output:          None                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Side Effects:    None                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Overview:        Use this macro to transfer data located in data memory.      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  Remember: mUSBGenTxIsBusy() must return false before user    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  can call this function.                                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  Unexpected behavior will occur if this function is called    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  when mUSBGenTxIsBusy() != 0                                  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  Typical Usage:                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  if(!mUSBGenTxIsBusy())                                       C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                      USBGenWrite(buffer, 3);                                  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Note:            None                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018be   cfd9     MOVFF     0xfd9,0xfe6    void USBGenWrite(byte *buffer, byte len)                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018c0   ffe6                                                                                                               
0018c2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0018c4   ffd9                                                                                                               
0018c6   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           	byte i;                                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           	                                                                                C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                               /*                                                                           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                * Value of len should be equal to or smaller than USBGEN_EP_SIZE.           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                * This check forces the value of len to meet the precondition.              C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                */                                                                          C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018c8   0efc     MOVLW     0xfc           	if(len > USBGEN_EP_SIZE)                                                        C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018ca   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018cc   0840     SUBLW     0x40                                                                                            
0018ce   e205     BC        0x18da                                                                                          
0018d0   0e40     MOVLW     0x40           	    len = USBGEN_EP_SIZE;                                                       C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018d2   6ef3     MOVWF     0xf3,0x0                                                                                        
0018d4   0efc     MOVLW     0xfc                                                                                            
0018d6   cff3     MOVFF     0xff3,0xfdb                                                                                     
0018d8   ffdb                                                                                                               
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                              /*                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                               * Copy data from user's buffer to dual-ram buffer                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                               */                                                                           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018da   6adf     CLRF      0xdf,0x0           for (i = 0; i < len; i++)                                                    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018dc   0efc     MOVLW     0xfc                                                                                            
0018de   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018e0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018e2   e219     BC        0x1916                                                                                          
001912   2adf     INCF      0xdf,0x1,0x0                                                                                    
001914   d7e3     BRA       0x18dc                                                                                          
0018e4   50df     MOVF      0xdf,0x0,0x0       	usbgen_in[i] = buffer[i];                                                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0018e6   6ee7     MOVWF     0xe7,0x0                                                                                        
0018e8   0efd     MOVLW     0xfd                                                                                            
0018ea   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0018ec   ffe9                                                                                                               
0018ee   0efe     MOVLW     0xfe                                                                                            
0018f0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0018f2   ffea                                                                                                               
0018f4   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0018f6   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0018f8   0e00     MOVLW     0x0                                                                                             
0018fa   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0018fc   50ef     MOVF      0xef,0x0,0x0                                                                                    
0018fe   6ee6     MOVWF     0xe6,0x0                                                                                        
001900   50df     MOVF      0xdf,0x0,0x0                                                                                    
001902   6aea     CLRF      0xea,0x0                                                                                        
001904   0f68     ADDLW     0x68                                                                                            
001906   6ee9     MOVWF     0xe9,0x0                                                                                        
001908   0e04     MOVLW     0x4                                                                                             
00190a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00190c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00190e   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001910   6eef     MOVWF     0xef,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001916   0efc     MOVLW     0xfc               USBGEN_BD_IN.Cnt = len;                                                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001918   cfdb     MOVFF     0xfdb,0x40d                                                                                     
00191a   f40d                                                                                                               
00191c   0e40     MOVLW     0x40               mUSBBufferReady(USBGEN_BD_IN);                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00191e   0104     MOVLB     0x4                                                                                             
001920   170c     ANDWF     0xc,0x1,0x1                                                                                     
001922   7d0c     BTG       0xc,0x6,0x1                                                                                     
001924   0e88     MOVLW     0x88                                                                                            
001926   130c     IORWF     0xc,0x1,0x1                                                                                     
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001928   52e5     MOVF      0xe5,0x1,0x0   }//end USBGenWrite                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00192a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00192c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00192e   ffd9                                                                                                               
001930   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           /******************************************************************************  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Function:        byte USBGenRead(byte *buffer, byte len)                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * PreCondition:    Value of input argument 'len' should be smaller than the     C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  maximum endpoint size responsible for receiving report       C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  data from USB host for HID class.                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  Input argument 'buffer' should point to a buffer area that   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  is bigger or equal to the size specified by 'len'.           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Input:           buffer  : Pointer to where received bytes are to be stored   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  len     : The number of bytes expected.                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Output:          The number of bytes copied to buffer.                        C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Side Effects:    Publicly accessible variable usbgen_rx_len is updated        C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  with the number of bytes copied to buffer.                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  Once USBGenRead is called, subsequent retrieval of           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  usbgen_rx_len can be done by calling macro                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  mUSBGenGetRxLength().                                        C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Overview:        USBGenRead copies a string of bytes received through         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  the OUT endpoint to a user's specified location.             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  It is a non-blocking function. It does not wait              C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  for data if there is no data available. Instead it returns   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  '0' to notify the caller that there is no data available.    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                                                                               C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            * Note:            If the actual number of bytes received is larger than the    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  number of bytes expected (len), only the expected number     C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  of bytes specified will be copied to buffer.                 C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  If the actual number of bytes received is smaller than the   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  number of bytes expected (len), only the actual number       C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *                  of bytes received will be copied to buffer.                  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                            *****************************************************************************/  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001932   cfd9     MOVFF     0xfd9,0xfe6    byte USBGenRead(byte *buffer, byte len)                                          C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001934   ffe6                                                                                                               
001936   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001938   ffd9                                                                                                               
                                           {                                                                                C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00193a   0100     MOVLB     0x0                usbgen_rx_len = 0;                                                           C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00193c   6bc9     CLRF      0xc9,0x1                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00193e   0104     MOVLB     0x4                if(!mUSBGenRxIsBusy())                                                       C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001940   bf08     BTFSC     0x8,0x7,0x1                                                                                     
001942   d030     BRA       0x19a4                                                                                          
                                               {                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                   /*                                                                       C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                    * Adjust the expected number of bytes to equal                          C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                    * the actual number of bytes received.                                  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                    */                                                                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001944   0efc     MOVLW     0xfc                   if(len > USBGEN_BD_OUT.Cnt)                                              C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001946   cfdb     MOVFF     0xfdb,0x10                                                                                      
001948   f010                                                                                                               
00194a   5109     MOVF      0x9,0x0,0x1                                                                                     
00194c   80d8     BSF       0xd8,0x0,0x0                                                                                    
00194e   5410     SUBFWB    0x10,0x0,0x0                                                                                    
001950   e203     BC        0x1958                                                                                          
001952   0efc     MOVLW     0xfc                       len = USBGEN_BD_OUT.Cnt;                                             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001954   c409     MOVFF     0x409,0xfdb                                                                                     
001956   ffdb                                                                                                               
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                   /*                                                                       C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                    * Copy data from dual-ram buffer to user's buffer                       C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                    */                                                                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001958   0100     MOVLB     0x0                    for(usbgen_rx_len = 0; usbgen_rx_len < len; usbgen_rx_len++)             C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00195a   6bc9     CLRF      0xc9,0x1                                                                                        
00195c   0efc     MOVLW     0xfc                                                                                            
00195e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001960   5dc9     SUBWF     0xc9,0x0,0x1                                                                                    
001962   e219     BC        0x1996                                                                                          
001992   2bc9     INCF      0xc9,0x1,0x1                                                                                    
001994   d7e3     BRA       0x195c                                                                                          
001964   51c9     MOVF      0xc9,0x0,0x1               buffer[usbgen_rx_len] = usbgen_out[usbgen_rx_len];                   C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001966   6aea     CLRF      0xea,0x0                                                                                        
001968   0f28     ADDLW     0x28                                                                                            
00196a   6ee9     MOVWF     0xe9,0x0                                                                                        
00196c   0e04     MOVLW     0x4                                                                                             
00196e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001970   50ef     MOVF      0xef,0x0,0x0                                                                                    
001972   6ee6     MOVWF     0xe6,0x0                                                                                        
001974   51c9     MOVF      0xc9,0x0,0x1                                                                                    
001976   6ee7     MOVWF     0xe7,0x0                                                                                        
001978   0efd     MOVLW     0xfd                                                                                            
00197a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00197c   ffe9                                                                                                               
00197e   0efe     MOVLW     0xfe                                                                                            
001980   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001982   ffea                                                                                                               
001984   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001986   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001988   0e00     MOVLW     0x0                                                                                             
00198a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00198c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00198e   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001990   6eef     MOVWF     0xef,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                   /*                                                                       C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                    * Prepare dual-ram buffer for next OUT transaction                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                    */                                                                      C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001996   0104     MOVLB     0x4                    USBGEN_BD_OUT.Cnt = sizeof(usbgen_out);                                  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
001998   0e40     MOVLW     0x40                                                                                            
00199a   6f09     MOVWF     0x9,0x1                                                                                         
00199c   1708     ANDWF     0x8,0x1,0x1            mUSBBufferReady(USBGEN_BD_OUT);                                          C:\PIC5\PIC\system\usb\class\generic\usbgen.c
00199e   7d08     BTG       0x8,0x6,0x1                                                                                     
0019a0   0e88     MOVLW     0x88                                                                                            
0019a2   1308     IORWF     0x8,0x1,0x1                                                                                     
                                               }//end if                                                                    C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0019a4   0100     MOVLB     0x0                return usbgen_rx_len;                                                        C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0019a6   51c9     MOVF      0xc9,0x0,0x1                                                                                    
0019a8   d000     BRA       0x19aa                                                                                          
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0019aa   52e5     MOVF      0xe5,0x1,0x0   }//end USBGenRead                                                                C:\PIC5\PIC\system\usb\class\generic\usbgen.c
0019ac   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0019ae   ffd9                                                                                                               
0019b0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           #endif //def USB_USE_GEN                                                         C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                                                                                                            C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           /** EOF usbgen.c *************************************************************/  C:\PIC5\PIC\system\usb\class\generic\usbgen.c
                                           #include <p18cxxx.h>                                                             C:\PIC5\PIC\SPIprotocol.c
                                           #define SW_CS_PIN PORTCbits.RC2                                                  C:\PIC5\PIC\SPIprotocol.c
                                           #define TRIS_SW_CS_PIN TRISCbits.TRISC2                                          C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
                                           #define SW_DIO_PIN PORTBbits.RB7 // Data in/out                                  C:\PIC5\PIC\SPIprotocol.c
                                           #define TRIS_SW_DIO_PIN TRISBbits.TRISB7                                         C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
                                           #define SW_SCK_PIN PORTBbits.RB6 // Clock                                        C:\PIC5\PIC\SPIprotocol.c
                                           #define TRIS_SW_SCK_PIN TRISBbits.TRISB6                                         C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
0013dc   cfd9     MOVFF     0xfd9,0xfe6    char ReadWithSPIHalfDuplex(char address)                                         C:\PIC5\PIC\SPIprotocol.c
0013de   ffe6                                                                                                               
0013e0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0013e2   ffd9                                                                                                               
0013e4   0e02     MOVLW     0x2                                                                                             
0013e6   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
                                               char Bit;                                                                    C:\PIC5\PIC\SPIprotocol.c
                                               char input;                                                                  C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
0013e8   9494     BCF       0x94,0x2,0x0       TRIS_SW_CS_PIN = 0;    // Make the CS pin an output                          C:\PIC5\PIC\SPIprotocol.c
0013ea   9c93     BCF       0x93,0x6,0x0       TRIS_SW_SCK_PIN = 0; // Make the SCK pin an output                           C:\PIC5\PIC\SPIprotocol.c
0013ec   9e93     BCF       0x93,0x7,0x0       TRIS_SW_DIO_PIN = 0; // Make the DIO pin an output                           C:\PIC5\PIC\SPIprotocol.c
0013ee   9482     BCF       0x82,0x2,0x0       SW_CS_PIN = 0; // Enable the mouse                                           C:\PIC5\PIC\SPIprotocol.c
0013f0   0e01     MOVLW     0x1                input = 0;                                                                   C:\PIC5\PIC\SPIprotocol.c
0013f2   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
0013f4   0e07     MOVLW     0x7            	for(Bit=7; Bit>=0;Bit--)                                                        C:\PIC5\PIC\SPIprotocol.c
0013f6   6edf     MOVWF     0xdf,0x0                                                                                        
0013f8   cfdf     MOVFF     0xfdf,0x10                                                                                      
0013fa   f010                                                                                                               
0013fc   3410     RLCF      0x10,0x0,0x0                                                                                    
0013fe   e215     BC        0x142a                                                                                          
001426   06df     DECF      0xdf,0x1,0x0                                                                                    
001428   d7e7     BRA       0x13f8                                                                                          
                                               {                                                                            C:\PIC5\PIC\SPIprotocol.c
001400   9c81     BCF       0x81,0x6,0x0           SW_SCK_PIN = 0; // Clear the SCK pin                                     C:\PIC5\PIC\SPIprotocol.c
001402   0000     NOP                              Nop(); // Pause a little bit                                             C:\PIC5\PIC\SPIprotocol.c
001404   0efe     MOVLW     0xfe                   SW_DIO_PIN = (address>>Bit)&1; // Set the Data line with a bit of the address C:\PIC5\PIC\SPIprotocol.c
001406   50db     MOVF      0xdb,0x0,0x0                                                                                    
001408   52df     MOVF      0xdf,0x1,0x0                                                                                    
00140a   e006     BZ        0x1418                                                                                          
00140c   cfdf     MOVFF     0xfdf,0xff3                                                                                     
00140e   fff3                                                                                                               
001410   32e8     RRCF      0xe8,0x1,0x0                                                                                    
001412   0b7f     ANDLW     0x7f                                                                                            
001414   06f3     DECF      0xf3,0x1,0x0                                                                                    
001416   e1fc     BNZ       0x1410                                                                                          
001418   0b01     ANDLW     0x1                                                                                             
00141a   b0e8     BTFSC     0xe8,0x0,0x0                                                                                    
00141c   8e81     BSF       0x81,0x7,0x0                                                                                    
00141e   a0e8     BTFSS     0xe8,0x0,0x0                                                                                    
001420   9e81     BCF       0x81,0x7,0x0                                                                                    
001422   8c81     BSF       0x81,0x6,0x0           SW_SCK_PIN = 1; // Set the SCK pin                                       C:\PIC5\PIC\SPIprotocol.c
001424   0000     NOP                              Nop(); // Pause a little bit                                             C:\PIC5\PIC\SPIprotocol.c
                                               }                                                                            C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
00142a   8e93     BSF       0x93,0x7,0x0       TRIS_SW_DIO_PIN = 1; // Make the DIO pin an input                            C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
00142c   0e07     MOVLW     0x7                for(Bit=7; Bit>=0;Bit--)                                                     C:\PIC5\PIC\SPIprotocol.c
00142e   6edf     MOVWF     0xdf,0x0                                                                                        
001430   cfdf     MOVFF     0xfdf,0x10                                                                                      
001432   f010                                                                                                               
001434   3410     RLCF      0x10,0x0,0x0                                                                                    
001436   e213     BC        0x145e                                                                                          
00145a   06df     DECF      0xdf,0x1,0x0                                                                                    
00145c   d7e9     BRA       0x1430                                                                                          
                                               {                                                                            C:\PIC5\PIC\SPIprotocol.c
001438   9c81     BCF       0x81,0x6,0x0           SW_SCK_PIN = 0; // Clear the SCK pin                                     C:\PIC5\PIC\SPIprotocol.c
00143a   0000     NOP                              Nop(); // Pause a little bit                                             C:\PIC5\PIC\SPIprotocol.c
00143c   5081     MOVF      0x81,0x0,0x0           input = (input<<1) | SW_DIO_PIN; // Read data line                       C:\PIC5\PIC\SPIprotocol.c
00143e   0b80     ANDLW     0x80                                                                                            
001440   e001     BZ        0x1444                                                                                          
001442   0e01     MOVLW     0x1                                                                                             
001444   6e10     MOVWF     0x10,0x0                                                                                        
001446   0e01     MOVLW     0x1                                                                                             
001448   50db     MOVF      0xdb,0x0,0x0                                                                                    
00144a   24e8     ADDWF     0xe8,0x0,0x0                                                                                    
00144c   1010     IORWF     0x10,0x0,0x0                                                                                    
00144e   6ee7     MOVWF     0xe7,0x0                                                                                        
001450   0e01     MOVLW     0x1                                                                                             
001452   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001454   ffdb                                                                                                               
001456   8c81     BSF       0x81,0x6,0x0           SW_SCK_PIN = 1; // Set the SCK pin                                       C:\PIC5\PIC\SPIprotocol.c
001458   0000     NOP                              Nop(); // Pause a little bit                                             C:\PIC5\PIC\SPIprotocol.c
                                               }                                                                            C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
00145e   8482     BSF       0x82,0x2,0x0       SW_CS_PIN = 1; // Disable the mouse                                          C:\PIC5\PIC\SPIprotocol.c
001460   0e01     MOVLW     0x1                return(input); // Return the received data                                   C:\PIC5\PIC\SPIprotocol.c
001462   50db     MOVF      0xdb,0x0,0x0                                                                                    
001464   d000     BRA       0x1466                                                                                          
001466   6e10     MOVWF     0x10,0x0       }                                                                                C:\PIC5\PIC\SPIprotocol.c
001468   0e02     MOVLW     0x2                                                                                             
00146a   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00146c   e202     BC        0x1472                                                                                          
00146e   6ae1     CLRF      0xe1,0x0                                                                                        
001470   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001472   6ee1     MOVWF     0xe1,0x0                                                                                        
001474   5010     MOVF      0x10,0x0,0x0                                                                                    
001476   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001478   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00147a   ffd9                                                                                                               
00147c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
00147e   cfd9     MOVFF     0xfd9,0xfe6    int WriteWithSPIHalfDuplex(char address, char Data)                              C:\PIC5\PIC\SPIprotocol.c
001480   ffe6                                                                                                               
001482   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001484   ffd9                                                                                                               
001486   0e05     MOVLW     0x5                                                                                             
001488   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
                                               char Bit;                                                                    C:\PIC5\PIC\SPIprotocol.c
                                               char input;                                                                  C:\PIC5\PIC\SPIprotocol.c
                                           	char address_w;                                                                 C:\PIC5\PIC\SPIprotocol.c
                                           	int confirmation;                                                               C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
00148a   9494     BCF       0x94,0x2,0x0       TRIS_SW_CS_PIN = 0;    // Make the CS pin an output                          C:\PIC5\PIC\SPIprotocol.c
00148c   9c93     BCF       0x93,0x6,0x0       TRIS_SW_SCK_PIN = 0; // Make the SCK pin an output                           C:\PIC5\PIC\SPIprotocol.c
00148e   9e93     BCF       0x93,0x7,0x0       TRIS_SW_DIO_PIN = 0; // Make the DIO pin an output                           C:\PIC5\PIC\SPIprotocol.c
001490   9482     BCF       0x82,0x2,0x0       SW_CS_PIN = 0; // Enable the mouse                                           C:\PIC5\PIC\SPIprotocol.c
001492   0e01     MOVLW     0x1                input = 0;                                                                   C:\PIC5\PIC\SPIprotocol.c
001494   6adb     CLRF      0xdb,0x0                                                                                        
001496   0e03     MOVLW     0x3            	confirmation = 0;                                                               C:\PIC5\PIC\SPIprotocol.c
001498   6adb     CLRF      0xdb,0x0                                                                                        
00149a   0e04     MOVLW     0x4                                                                                             
00149c   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
                                           	//envio do endereco do registo para o rato                                      C:\PIC5\PIC\SPIprotocol.c
00149e   0efe     MOVLW     0xfe           	address_w = address;                                                            C:\PIC5\PIC\SPIprotocol.c
0014a0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014a2   6ee7     MOVWF     0xe7,0x0                                                                                        
0014a4   0e02     MOVLW     0x2                                                                                             
0014a6   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0014a8   ffdb                                                                                                               
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
0014aa   0e02     MOVLW     0x2                address_w = address_w | 0x80;                                                C:\PIC5\PIC\SPIprotocol.c
0014ac   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014ae   0980     IORLW     0x80                                                                                            
0014b0   6ee7     MOVWF     0xe7,0x0                                                                                        
0014b2   0e02     MOVLW     0x2                                                                                             
0014b4   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0014b6   ffdb                                                                                                               
0014b8   0e07     MOVLW     0x7            	for(Bit=7; Bit>=0;Bit--)                                                        C:\PIC5\PIC\SPIprotocol.c
0014ba   6edf     MOVWF     0xdf,0x0                                                                                        
0014bc   cfdf     MOVFF     0xfdf,0x10                                                                                      
0014be   f010                                                                                                               
0014c0   3410     RLCF      0x10,0x0,0x0                                                                                    
0014c2   e215     BC        0x14ee                                                                                          
0014ea   06df     DECF      0xdf,0x1,0x0                                                                                    
0014ec   d7e7     BRA       0x14bc                                                                                          
                                               {                                                                            C:\PIC5\PIC\SPIprotocol.c
0014c4   9c81     BCF       0x81,0x6,0x0           SW_SCK_PIN = 0; // Clear the SCK pin                                     C:\PIC5\PIC\SPIprotocol.c
0014c6   0000     NOP                              Nop(); // Pause a little bit                                             C:\PIC5\PIC\SPIprotocol.c
0014c8   0e02     MOVLW     0x2                    SW_DIO_PIN = (address_w>>Bit)&1; // Set the Data line with a bit of the address C:\PIC5\PIC\SPIprotocol.c
0014ca   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014cc   52df     MOVF      0xdf,0x1,0x0                                                                                    
0014ce   e006     BZ        0x14dc                                                                                          
0014d0   cfdf     MOVFF     0xfdf,0xff3                                                                                     
0014d2   fff3                                                                                                               
0014d4   32e8     RRCF      0xe8,0x1,0x0                                                                                    
0014d6   0b7f     ANDLW     0x7f                                                                                            
0014d8   06f3     DECF      0xf3,0x1,0x0                                                                                    
0014da   e1fc     BNZ       0x14d4                                                                                          
0014dc   0b01     ANDLW     0x1                                                                                             
0014de   b0e8     BTFSC     0xe8,0x0,0x0                                                                                    
0014e0   8e81     BSF       0x81,0x7,0x0                                                                                    
0014e2   a0e8     BTFSS     0xe8,0x0,0x0                                                                                    
0014e4   9e81     BCF       0x81,0x7,0x0                                                                                    
0014e6   8c81     BSF       0x81,0x6,0x0           SW_SCK_PIN = 1; // Set the SCK pin                                       C:\PIC5\PIC\SPIprotocol.c
0014e8   0000     NOP                              Nop(); // Pause a little bit                                             C:\PIC5\PIC\SPIprotocol.c
                                               }                                                                            C:\PIC5\PIC\SPIprotocol.c
                                           	                                                                                C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
                                           	//envio dos dados para o registo no rato                                        C:\PIC5\PIC\SPIprotocol.c
0014ee   0e07     MOVLW     0x7            	for(Bit=7; Bit>=0;Bit--)                                                        C:\PIC5\PIC\SPIprotocol.c
0014f0   6edf     MOVWF     0xdf,0x0                                                                                        
0014f2   cfdf     MOVFF     0xfdf,0x10                                                                                      
0014f4   f010                                                                                                               
0014f6   3410     RLCF      0x10,0x0,0x0                                                                                    
0014f8   e215     BC        0x1524                                                                                          
001520   06df     DECF      0xdf,0x1,0x0                                                                                    
001522   d7e7     BRA       0x14f2                                                                                          
                                               {                                                                            C:\PIC5\PIC\SPIprotocol.c
0014fa   9c81     BCF       0x81,0x6,0x0           SW_SCK_PIN = 0; // Clear the SCK pin                                     C:\PIC5\PIC\SPIprotocol.c
0014fc   0000     NOP                              Nop(); // Pause a little bit                                             C:\PIC5\PIC\SPIprotocol.c
0014fe   0efd     MOVLW     0xfd                   SW_DIO_PIN = (Data>>Bit)&1; // Set the Data line with a bit of the address C:\PIC5\PIC\SPIprotocol.c
001500   50db     MOVF      0xdb,0x0,0x0                                                                                    
001502   52df     MOVF      0xdf,0x1,0x0                                                                                    
001504   e006     BZ        0x1512                                                                                          
001506   cfdf     MOVFF     0xfdf,0xff3                                                                                     
001508   fff3                                                                                                               
00150a   32e8     RRCF      0xe8,0x1,0x0                                                                                    
00150c   0b7f     ANDLW     0x7f                                                                                            
00150e   06f3     DECF      0xf3,0x1,0x0                                                                                    
001510   e1fc     BNZ       0x150a                                                                                          
001512   0b01     ANDLW     0x1                                                                                             
001514   b0e8     BTFSC     0xe8,0x0,0x0                                                                                    
001516   8e81     BSF       0x81,0x7,0x0                                                                                    
001518   a0e8     BTFSS     0xe8,0x0,0x0                                                                                    
00151a   9e81     BCF       0x81,0x7,0x0                                                                                    
00151c   8c81     BSF       0x81,0x6,0x0           SW_SCK_PIN = 1; // Set the SCK pin                                       C:\PIC5\PIC\SPIprotocol.c
00151e   0000     NOP                              Nop(); // Pause a little bit                                             C:\PIC5\PIC\SPIprotocol.c
                                               }                                                                            C:\PIC5\PIC\SPIprotocol.c
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
001524   0efe     MOVLW     0xfe           	input = ReadWithSPIHalfDuplex(address);                                         C:\PIC5\PIC\SPIprotocol.c
001526   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001528   ffe6                                                                                                               
00152a   df58     RCALL     0x13dc                                                                                          
00152c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00152e   6ee7     MOVWF     0xe7,0x0                                                                                        
001530   0e01     MOVLW     0x1                                                                                             
001532   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001534   ffdb                                                                                                               
                                           	                                                                                C:\PIC5\PIC\SPIprotocol.c
                                           	                                                                                C:\PIC5\PIC\SPIprotocol.c
001536   0efd     MOVLW     0xfd           	if( input == (char) Data)                                                       C:\PIC5\PIC\SPIprotocol.c
001538   50db     MOVF      0xdb,0x0,0x0                                                                                    
00153a   6ef3     MOVWF     0xf3,0x0                                                                                        
00153c   0e01     MOVLW     0x1                                                                                             
00153e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001540   5cf3     SUBWF     0xf3,0x0,0x0                                                                                    
001542   e107     BNZ       0x1552                                                                                          
001544   0e01     MOVLW     0x1            		confirmation = 1;                                                              C:\PIC5\PIC\SPIprotocol.c
001546   6ef3     MOVWF     0xf3,0x0                                                                                        
001548   0e03     MOVLW     0x3                                                                                             
00154a   cff3     MOVFF     0xff3,0xfdb                                                                                     
00154c   ffdb                                                                                                               
00154e   0e04     MOVLW     0x4                                                                                             
001550   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\PIC5\PIC\SPIprotocol.c
001552   8482     BSF       0x82,0x2,0x0       SW_CS_PIN = 1; // Disable the mouse                                          C:\PIC5\PIC\SPIprotocol.c
001554   0e03     MOVLW     0x3                return(confirmation); // Return the received data                            C:\PIC5\PIC\SPIprotocol.c
001556   cfdb     MOVFF     0xfdb,0x10                                                                                      
001558   f010                                                                                                               
00155a   0e04     MOVLW     0x4                                                                                             
00155c   cfdb     MOVFF     0xfdb,0x11                                                                                      
00155e   f011                                                                                                               
001560   c010     MOVFF     0x10,0xff3                                                                                      
001562   fff3                                                                                                               
001564   c011     MOVFF     0x11,0xff4                                                                                      
001566   fff4                                                                                                               
001568   d000     BRA       0x156a                                                                                          
00156a   0e05     MOVLW     0x5            }                                                                                C:\PIC5\PIC\SPIprotocol.c
00156c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00156e   e202     BC        0x1574                                                                                          
001570   6ae1     CLRF      0xe1,0x0                                                                                        
001572   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001574   6ee1     MOVWF     0xe1,0x0                                                                                        
001576   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001578   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00157a   ffd9                                                                                                               
00157c   0012     RETURN    0x0                                                                                             
